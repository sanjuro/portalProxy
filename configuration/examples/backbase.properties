#### 1. Foundation  ###################################################################

#### 1.1. Proxies  ####################################################################
## Proxies used by orchestrator and content services

## Orchestrator proxy
# values set for local development environment
foundation.orchestrator.proxy.destination=http://localhost:8080/orchestrator
foundation.orchestrator.proxy.username=admin
foundation.orchestrator.proxy.password=admin

## Content services proxy
# values set for local development environment
foundation.content.proxy.destination=http://localhost:8080/contentservices
foundation.content.proxy.username=admin
foundation.content.proxy.password=admin


#### 1.2. Database ###################################################################
## The database server used by Portal Foundation.

## Whether generation of Hibernate statistics is enabled for Portal Foundation
#foundation.hibernate.generate_statistics=false

## Supported types: h2, mysql, db2, oracle, sqlserver

#### 1.2.1 H2 - DEFAULT ##################
#foundation.database=h2
#database.foundation.hibernate.dialect.class=org.hibernate.dialect.H2Dialect

#### 1.2.2 DB2 - EXAMPLE #################
#foundation.database=db2
#database.foundation.hibernate.dialect.class=org.hibernate.dialect.DB2Dialect

#### 1.2.3 Oracle - EXAMPLE ##############
#foundation.database=oracle
#database.foundation.hibernate.dialect.class=org.hibernate.dialect.OracleDialect
##Oracle 9i
#database.foundation.hibernate.dialect.class=org.hibernate.dialect.Oracle9iDialect
##Oracle 10g
#database.foundation.hibernate.dialect.class=org.hibernate.dialect.Oracle10gDialect
##Oracle 11g
#database.foundation.hibernate.dialect.class=org.hibernate.dialect.Oracle10gDialect

#### 1.2.4 SqlServer - EXAMPLE ###########
#foundation.database=sqlserver
##Microsoft SQL Server 2000
#database.foundation.hibernate.dialect.class=org.hibernate.dialect.SQLServerDialect
##Microsoft SQL Server 2005
#database.foundation.hibernate.dialect.class=org.hibernate.dialect.SQLServer2005Dialect
##Microsoft SQL Server 2008
#database.foundation.hibernate.dialect.class=org.hibernate.dialect.SQLServer2008Dialect


#### 1.3. Audit Trails ####################################################################
## An optional feature of Portal Foundation that logs the following events:
## . Successful create, update, and delete events on items.
## . Publishing events.
#foundation.auditing=false

##Whether generation of Hibernate statistics is enabled for Audit Trails
#auditing.hibernate.generate_statistics=false

## Supported types: h2, mysql, db2, oracle, sqlserver

#### 1.3.1 H2 Audit - DEFAULT ############
#auditing.database=h2
#database.auditing.hibernate.dialect.class=org.hibernate.dialect.H2Dialect

#### 1.3.2 DB2 Audit - EXAMPLE ###########
#auditing.database=db2
#database.auditing.hibernate.dialect.class=org.hibernate.dialect.DB2Dialect

#### 1.3.3 Oracle Audit - EXAMPLE ########
#auditing.database=oracle
#database.auditing.hibernate.dialect.class=org.hibernate.dialect.OracleDialect
##Oracle 9i
#database.auditing.hibernate.dialect.class=org.hibernate.dialect.Oracle9iDialect
##Oracle 10g
#database.auditing.hibernate.dialect.class=org.hibernate.dialect.Oracle10gDialect
##Oracle 11g
#database.auditing.hibernate.dialect.class=org.hibernate.dialect.Oracle10gDialect

#### 1.3.4 SqlServer Audit - EXAMPLE ####
#auditing.database=sqlserver
##Microsoft SQL Server 2000
#database.auditing.hibernate.dialect.class=org.hibernate.dialect.SQLServerDialect
##Microsoft SQL Server 2005
#database.auditing.hibernate.dialect.class=org.hibernate.dialect.SQLServer2005Dialect
##Microsoft SQL Server 2008
#database.auditing.hibernate.dialect.class=org.hibernate.dialect.SQLServer2008Dialect


#### 1.4. Logback logging #################################################################
##The location of the Logback configuration file for Portal Foundation.
#foundation.logging=


#### 1.5. Import ##########################################################################
##/import tool and import/export tool configuration

##File locations must begin with either
## . classpath: if pointing to a location in the classpath
## . file: for other locations.
#foundation.import.directory=classpath:import
##config for import/export tool
#foundation.import.file=importPortal.xml
##config for /import tool
#foundation.import.files.portal=portal.xml
#We don't have special page setup for import.
#It gets the login special pages from this setup.
#foundation.import.getLoginSpecialpage=/login/login.jsp


#### 1.6. Portal Environment ##############################################################
## Editorial environment - A Backbase Portal installation not accessible to the public and used by editors to develop portals.
#foundation.environment.editorial=false

## Whether Portal Foundation allows publishing permission changes on pages that are already published.
## If true, Portal Foundation allows publishing permission changes on pages that are already published.
## If set to false, Portal Foundation does the following:
##  . Prevents the user from publishing permission changes.
##  . Logs the PS-130BUS error message.
##  . Causes Portal Manager to show a warning.
## Defaults to false. We recommend to override the default only exceptionally and for limited periods of time.
#foundation.publishing.allowRecursiveSecurityUpdateForLinks=false

# @Deprecated - needed in 5.6.x for g:include to camel internal request fix (see MAINT-3181)
#foundation.integration.servletPath=/services

## Whether Versioning is enabled. Only applies to editorial environments and requires Content Services. Defaults to false.
#foundation.versioning.enabled=false

## Whether Integration Services is embedded or stand-alone. If set to integration-remote, it is stand-alone and the local instance is disabled.
#foundation.integration.profile=integration-local

##Whether Mashup Services is embedded or stand-alone. If set to ptc-remote, it is stand-alone and the local instance is disabled.
#foundation.ptc.profile=ptc-local

##The absolute path to the configuration file for device recognition
#foundation.device.config.location=

## The name of directory where generated content (e.g. from ICE) is to be stored/read from.
#backbase.generatedContent.dir=/Generated content/

## The full path and file name of the file with main configuration parameters for CXP Manager.
#manager.uieditingoptions.location=classpath:conf/uiEditingOptions.js

# enables user validation when creating new user; default=true
#foundation.user.create.validation.enabled=true

#### 1.7. Controller environment ##########################################################
##Controller properties configure paging, sorting, and offset of responses to specific URLs.

####Configuration of query on GET calls to /portals URIs ########################
#foundation.portalController.getPortals.pageSize.default=5
#foundation.portalController.getPortals.pageSize.maxResultSize=200
#foundation.portalController.getPortals.offset.default=0

##Whether the response to a GET request on a portal includes the children. Defaults to true.
#foundation.portalController.getPortal.processChildren.default=true

####Configuration of query on GET calls to /pages URIs ##########################
#foundation.pageController.getPages.pageSize.default=10
#foundation.pageController.getPages.pageSize.maxResultSize=200
#foundation.pageController.getPages.offset.default=0
#foundation.pageController.getPages.depth.default=1

##Whether the response to a GET request on a page includes children. Defaults to true.
#foundation.pageController.getPage.processChildren.default=true

####Configuration of query on GET calls to /containers URIs #####################
#foundation.containerController.getContainers.pageSize.default=10
#foundation.containerController.getContainers.pageSize.maxResultSize=200
#foundation.containerController.getContainers.offset.default=0
#foundation.containerController.getContainers.depth.default=-1

##Whether the response to a GET request on /container URIs includes children. Defaults to true.
#foundation.containerController.getContainer.processChildren.default=true

####Configuration of query on GET calls to /widgets URIs  #######################
#foundation.widgetController.getWidgets.pageSize.default=20
#foundation.widgetController.getWidgets.pageSize.maxResultSize=200
#foundation.widgetController.getWidgets.offset.default=0
#foundation.widgetController.getWidgets.depth.default=-1

####Configuration of query on GET calls to /links URIs ##########################
#foundation.linkController.getLinks.linkSize.default=10
#foundation.linkBusinessService.getLinks.throttle.maxResultsSize=200
#foundation.linkController.getLinks.offset.default=0
#foundation.linkController.getLinks.depth.default=-1

##Whether the response to a GET request on a link includes children. Defaults to true.
#foundation.linkController.getLink.processChildren.default=true

####Configuration of query on GET calls to /users URIs ##########################
#foundation.userController.getUsers.offset.default=0
#foundation.userController.getUsers.pageSize.default=20
##The first result in the response to a GET request on /users/[user_name]/groups URIs. Defaults to 0, which displays from the first result.
#foundation.userController.getGroupsForUser.offset.default=0
##The number of results in the response to a GET request on /users/[user_name]/groups URIs. Defaults to 20.
#foundation.userController.getGroupsForUser.pageSize.default=20

####Configuration of query on GET calls to /groups URIs #########################
#foundation.groupController.getGroups.offset.default=0
#foundation.groupController.getGroups.pageSize.default=20
##The first result in the response to a GET request on the users within a group. Defaults to 0, which returns the first result.
#foundation.groupController.getUsersForGroup.offset.default=0
##The number of results in the response to a GET request on the users within a group. Defaults to 20.
#foundation.groupController.getUsersForGroup.pageSize.default=20

####Configuration of query on GET calls to /templates URIs ######################
#foundation.templateController.getTemplates.offset.default=0
#foundation.templateController.getTemplates.pageSize.default=50
#foundation.templateController.getTemplates.pageSize.maxResultSize=200
#foundation.templateController.getTemplates.depth.default=-1

####Configuration of query on GET calls to /catalog URIs ########################
#foundation.serverCatalog.offset.default=0
#foundation.serverCatalog.pageSize.default=20
#foundation.serverCatalog.pageSize.maxResultSize=200

####Configuration of query on GET calls to /catalogTags URIs ####################
#foundation.catalogTags.offset.default=0
#foundation.catalogTags.pageSize.default=50
#foundation.catalogTags.pageSize.maxResultSize=200

####Configuration of query on GET calls to /portals/[portal_name]/tags URIs #####
#foundation.tagController.getTags.offset.default=0
#foundation.tagController.getTags.pageSize.default=20
#foundation.tagController.getTags.pageSize.maxResultSize=200

####Configuration of query on GET calls to /auditevents URIs #####
#foundation.auditEventController.getAuditEvents.offset.default=0
#foundation.auditEventController.getAuditEvents.pageSize.default=50

####Configuration of query on GET calls to /features URIs #####
#foundation.featureController.getFeatures.offset.default=0
#foundation.featureController.getFeatures.pageSize.default=50
#foundation.featureController.getFeatures.pageSize.maxResultSize=200
#foundation.featureController.getFeatures.depth.default=-1

####Configuration of query on GET calls to /portals/{portalName}/pagemanagement/search/links URIs #####
#portalManager.CustomLinkController.searchLinks.offset.default=0
#portalManager.CustomLinkController.searchLinks.MaxResults.default=100

####Configuration of query on GET calls to /portals/{portalName}/pagemanagement/search/suggestions URIs #####
#portalManager.SearchController.suggestions.MaxResults.default=10

#### 1.8. Import/export of components #####################################################
##Defines the storage profile for the imported widgets and containers. Possible values:
## . ps-exportimport-none (Default). Component importing is disabled. The web application context root is the only source for widget/container resources.
## . ps-exportimport-fs Imported widgets are stored in the file system. Requires setting the file system location in the foundation.filesystem.contextroot property.
## . ps-exportimport-cs Imported widgets/containers are stored in the Content Services resources repository.
## . ps-exportimport-ext profile disregards resources in a package - it is assumed that the resources exist in the indicated location via foundation.external.contextroot property
#foundation.exportimport.profile=ps-exportimport-none

##Relevant for widgets and containers import/export. Defined specific location to store imported widgets and containers resources files in the file system.
##Required when you select the file system as storage profile for imported components.
#foundation.filesystem.contextroot=

##Relevant for widgets and containers import/export. Contains a specific URI where the resources are located
##Required when you select the external system as storage profile for imported components.
#foundation.external.contextroot=

##Relevant for widget import/export. Define a comma separated list regular expressions to define exclusion patterns.
##Matching files and folders are excluded from the resources bundle of widgets.
##The exclusion list is resolved first and next items listed in sharedresources.txt are added in the resources bundle
#foundation.exportimport.exclude.patterns=

#Default cookie properties
foundation.security.cookie.secure=true


#### 1.9. Cache Configs #####################################################

#### 1.9.0. Server Caches ###################
## The default expiration time in seconds for pages cached by the webCache.
## Defaults to 0, meaning pages are not cached.
#foundation.cache.web.expiry.default=0

## Server caches. Whether the webCache is enabled. Defaults to true.
#foundation.cachingFilter.cache.web.enabled=true

## The location of the configuration file for Portal Foundation caches. Prefix the location with either file:// or classpath://.
## If omitted, the default configuration is loaded
#foundation.cache.ehcache.foundation.config=classpath://ehcache_foundation.config

## The location of the Hibernate cache configuration file. Prefix the location with either file:// or classpath://.
## If omitted, the default configuration is loaded
#foundation.cache.ehcache.persistence.config=classpath://ehcache_persistence.config

#### 1.9.1. Portal Foundation caches ########
## Whether the urlLevelCache is enabled. Defaults to true.
#foundation.cache.urllevel.enabled=true

## A comma-separated list of URLs of links referring to pages. The webCache will cache these pages fully rendered including children.
## This is useful for landing pages that require short response times. Do not include the Portal Foundation application context or any slashes.
## Friendly URLs should not contain commas. Only use this cache for pages that are exactly the same for every user.
## None of the layouts or widgets on the page may be personalized and the security settings should be the same for every role and group, including anonymous users.
#foundation.cachingFilter.cache.web.pagesToCacheList=

#### 1.9.2. Foundation cache headers configuration ########
## Whether Portal Foundation sets the Cache-Control header. Defaults to true.
#foundation.cache.static.usecachecontrol=true

## A number in seconds that sets either of the following:
## . The max-age parameter of the Cache-Control header if foundation.cache.static.usecachecontrol is set to true.
## . The value of the Expires header if foundation.cache.static.useexpires is set to true.
#foundation.cache.static.maxage=60

## Whether Portal Foundation sets the Expires header. Defaults to true.
#foundation.cache.static.useexpires=true

#### 1.9.3. Cache Replication ########
## Configuration for JGroups, the underlying mechanism for the replication operations for Portal Foundation and Mashup Services caches.
#foundation.integration.jgroups.enabled=false
#foundation.integration.jgroups.config.location=
#foundation.integration.jgroups.cluster.name=foundationCluster

#### 1.10. Indexing engine #####################################################
## Configuration for Solr
# values set for local development environment
#when running standalone setup, both properties must point to the same URL
manager.solr.master.url=http://localhost:8080/solr/core0
manager.solr.slave.url=http://localhost:8080/solr/core0
## Comma-separated list of property definition names that are to be excluded when indexing items
#manager.solr.index.properties.exclude=TemplateName,SecuritySameAsParent,behaviors,bundleName,client-template,order,itemType,sectionName,ItemRef,title,redirectionMethod,targetPage,State,parentPageRef,bd_seo_canonical,createdBy,modifiedBy
#manager.solr.index.reindex.pageSize=100
#manager.solr.index.deletedUser.label=non-existing

#### 1.11. Rendering #####################################################

## Defines the state separator in dynamic URLs
#foundation.dynamic.url.identifier=//

#### 1.12. Security Configs #####################################################

## Defines if the CSRF protection is enabled or not.
#foundation.csrf.protection.enabled=false

## Determines whether anonymous sessions are allowed or not.
#foundation.session.anonymous.allowed=true

### 1.13. connector-framework
## Only add this property when using Targeting Services stand-alone.
# values set for local development environment
targeting.connectorframework.remote.destination=http://localhost:8580
targeting.connectorframework.remote.username=admin
targeting.connectorframework.remote.password=admin

### 1.14. Targeting Services
## Whether Targeting Services is enabled.
#optional.targeting.enabled=false

## The location of the Logback configuration file for Targeting Services.
#targeting.logging=

## The address of a geolocation server. This property is required for the GEOLOC collector
#targeting.collector.geoloc.api.url=

## The address of an IP lookup server. This property is required for the GEOLOC collector
#targeting.collector.geoloc.ip.lookup.url=

### 1.15. Tracking

## Whether Tracking stores data in a cookie or in a database.
## Acceptable values are:
## . trackingStoreDB — tracking data are stored in a database.
## . trackingStoreCookie — tracking data are stored in cookies.
## If omitted, Tracking is disabled.
#optional.tracking.profile=

## The number of days tracking data are stored.
#foundation.tracking.tags.maxAge=3

## The path to a custom Hibernate database mapping file. Do not set if optional.tracking.database is already set.
#optional.backbase.tracking.mapping=

## Supported types: h2, mysql, db2, oracle, sqlserver

#### 1.14.1 H2 Tracking - DEFAULT ############
#optional.tracking.database=h2
#optional.database.tracking.hibernate.dialect.class=org.hibernate.dialect.H2Dialect

#### 1.14.2 DB2 Tracking - EXAMPLE ###########
#optional.tracking.database=db2
#optional.database.tracking.hibernate.dialect.class=org.hibernate.dialect.DB2Dialect

#### 1.14.3 Oracle Tracking - EXAMPLE ########
#optional.tracking.database=oracle
#optional.database.tracking.dialect.class=org.hibernate.dialect.OracleDialect
##Oracle 9i
#optional.database.tracking.dialect.class=org.hibernate.dialect.Oracle9iDialect
##Oracle 10g
#optional.database.tracking.dialect.class=org.hibernate.dialect.Oracle10gDialect
##Oracle 11g
#optional.database.tracking.dialect.class=org.hibernate.dialect.Oracle10gDialect

#### 1.14.4 SqlServer Tracking - EXAMPLE ####
#optional.tracking.database=sqlserver
##Microsoft SQL Server 2000
#optional.database.tracking.dialect.class=org.hibernate.dialect.SQLServerDialect
##Microsoft SQL Server 2005
#optional.database.tracking.dialect.class=org.hibernate.dialect.SQLServer2005Dialect
##Microsoft SQL Server 2008
#optional.database.tracking.dialect.class=org.hibernate.dialect.SQLServer2008Dialect

## Whether generation of Hibernate statistics is enabled for Tracking.
#tracking.hibernate.generate_statistics=false

#### 2. Publishing  ###################################################################

#### 2.1. General properties  #########################################################
#orchestrator.name=EditorialOrchestrator
#orchestrator.editorial=true

## Credentials to log in with on orchestrator
#orchestrator.username=
#orchestrator.password=

## Allowed groups
#orchestrator.approvalgroups=manager,approvers
#orchestrator.publishgroups=manager,publishers

## Publish chains
#orchestrator.configuration.location=

## Location where publishing files will be stored
#orchestrator.filestorelocation=

## The maximum number of items that can be exported at one time. Defaults to 10000.
#orchestrator.export.items.maximum=10000

## The location of the Logback configuration file for Orchestrator.
#orchestrator.logging=

## The location of the Atom service document, relative to the context path. Set to atom by default.
## Orchestrator requires this property to import and export portal and widget archives with content items.
#orchestrator.contenthost.atompath


#### 2.2. Database configuration  #####################################################

## The location of the configuration file for Orchestrator caches. Prefix the location with either file:// or classpath://.
## If omitted, the default configuration is loaded.
## For more information, see https://docs.backbase.com/dev/portal/conf_publ_cach.html.
#orchestrator.cache.ehcache.persistence.config=classpath:/ehcache-orchestrator.xml

## Whether generation of Hibernate statistics is enabled for Orchestrator. Defaults to false.
## For more information, see https://docs.backbase.com/dev/portal/conf_publ_hibernate.html
#orchestrator.hibernate.generate_statistics=false

## Supported types: h2, mysql, db2, oracle, sqlserver

#### 2.2.1 H2 - DEFAULT ############
#orchestrator.database=h2
#database.orchestrator.hibernate.dialect.class=org.hibernate.dialect.H2Dialect

#### 2.2.2 DB2 - EXAMPLE ###########
#orchestrator.database=db2
#database.orchestrator.hibernate.dialect.class=org.hibernate.dialect.DB2Dialect

#### 2.2.3 Oracle - EXAMPLE ########
#orchestrator.database=oracle
#database.orchestrator.hibernate.dialect.class=org.hibernate.dialect.OracleDialect
##Oracle 9i
#database.orchestrator.hibernate.dialect.class=org.hibernate.dialect.Oracle9iDialect
##Oracle 10g
#database.orchestrator.hibernate.dialect.class=org.hibernate.dialect.Oracle10gDialect
##Oracle 11g
#database.orchestrator.hibernate.dialect.class=org.hibernate.dialect.Oracle10gDialect

#### 2.2.4 SqlServer - EXAMPLE ####
#orchestrator.database=sqlserver
##Microsoft SQL Server 2000
#database.orchestrator.hibernate.dialect.class=org.hibernate.dialect.SQLServerDialect
##Microsoft SQL Server 2005
#database.orchestrator.hibernate.dialect.class=org.hibernate.dialect.SQLServer2005Dialect
##Microsoft SQL Server 2008
#database.orchestrator.hibernate.dialect.class=org.hibernate.dialect.SQLServer2008Dialect


#### 2.3. Import/Export  ##############################################################
## Location where import files will be stored
#orchestrator.import.location=
## Location where export files will be stored
#orchestrator.export.location=
## location where export log files will be stored
#orchestrator.export.log.location=


#### 2.4. Environment Editorial orchestrators  ########################################
#### 2.4.1 self - DEFAULT ############
# values set for local development environment
orchestrator.orchestrators.names=EditorialOrchestrator
orchestrator.orchestrators.EditorialOrchestrator.address=http://localhost
orchestrator.orchestrators.EditorialOrchestrator.port=8080
orchestrator.orchestrators.EditorialOrchestrator.contextpath=orchestrator
orchestrator.orchestrators.EditorialOrchestrator.username=sys2sys
orchestrator.orchestrators.EditorialOrchestrator.password=sys2sys

#### 2.4.2 production - EXAMPLE ############
## editorial
#orchestrator.orchestrators.names=EditorialOrchestrator,StagingOrchestrator,LiveOrchestrator
#orchestrator.orchestrators.EditorialOrchestrator.address=http://localhost
#orchestrator.orchestrators.EditorialOrchestrator.port=8280
#orchestrator.orchestrators.EditorialOrchestrator.contextpath=orchestrator
#orchestrator.orchestrators.EditorialOrchestrator.username=sys2sys
#orchestrator.orchestrators.EditorialOrchestrator.password=sys2sys

## staging
#orchestrator.orchestrators.StagingOrchestrator.address=http://localhost
#orchestrator.orchestrators.StagingOrchestrator.port=8380
#orchestrator.orchestrators.StagingOrchestrator.contextpath=orchestrator
#orchestrator.orchestrators.StagingOrchestrator.username=sys2sys
#orchestrator.orchestrators.StagingOrchestrator.password=sys2sys

## live
#orchestrator.orchestrators.LiveOrchestrator.address=http://localhost
#orchestrator.orchestrators.LiveOrchestrator.port=8480
#orchestrator.orchestrators.LiveOrchestrator.contextpath=orchestrator
#orchestrator.orchestrators.LiveOrchestrator.username=sys2sys
#orchestrator.orchestrators.LiveOrchestrator.password=sys2sys


#### 2.5. Hosts  ######################################################################
## A user-defined name for the CMIS content repository solution.
# values set for local development environment
orchestrator.contenthost.name=contentservices
orchestrator.contenthost.address=http://localhost
orchestrator.contenthost.port=8080
orchestrator.contenthost.contextpath=contentservices
orchestrator.contenthost.repositoryid=contentRepository
orchestrator.contenthost.username=sys2sys
orchestrator.contenthost.password=sys2sys

## NOTE: the address of portal server hosts should not be localhost since browsers will use this configuration value
## portal host
# values set for local development environment
orchestrator.portalhost.name=editorial
orchestrator.portalhost.address=http://localhost
orchestrator.portalhost.port=8080
orchestrator.portalhost.contextpath=portalserver
orchestrator.portalhost.username=sys2sys
orchestrator.portalhost.password=sys2sys


#### 2.6. Thread pool configuration  ##################################################
#orchestrator.threadpool.coresize=5
#orchestrator.threadpool.maxsize=10
#orchestrator.threadpool.queuesize=1000
#orchestrator.auditing=false

#### 3. Content Services  ##################################################################

#### 3.1 General properties  ###############################################################

##The location of the Logback configuration file for Content Services.
#contentservices.logging=

## Whether the Quartz scheduler is enabled. Defaults to false.
## For more information, see https://docs.backbase.com/dev/portal/conf_cose_sche_jobs.html
#contentservices.repository.scheduler.enabled=false

## Whether WebDAV access is enabled. Defaults to false.
## For more information, see https://docs.backbase.com/dev/portal/conf_cose_prop_webdav.html
#contentservices.repository.webdav.enabled=false

## The list of active validators.
## For more information, see https://docs.backbase.com/dev/portal/devd_cuco_vldt.html
#contentservices.validators=com.backbase.portal.contentservices.validator.impl.RepositorySchemaValidator


#### 3.2 Caches  ###########################################################################
## The default caching configuration for Content Services content.
## Accepts any valid directive from http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
#contentservices.cache-control.default=

## A list of desired cache response directives, like public, private, or max-age. Separate the directives with a semi-colon ;.
## The index is a zero-based counter that allows you to configure cache-control headers for multiple MIME types.
#contentservices.cache-control.index.cache-value=

## The MIME type for this cache-header configuration. The index is a zero-based counter that allows you to configure cache-control headers for multiple MIME types.
#contentservices.cache-control.index.mime-type=

#### 3.3 Database  #########################################################################
## The fully qualified name of the Hibernate dialect in use.
## Accepted values are any of the dialects listed in the http://docs.jboss.org/hibernate/core/3.6/reference/en-US/html/session-configuration.html#configuration-optional-dialects.
## Defaults to org.hibernate.dialect.H2Dialect.
## Only required if the contentservices.repository.content.schemaUpdate property is set to true.

## H2 - DEFAULT
#contentservices.database.hibernate.dialect.class=org.hibernate.dialect.H2Dialect

## DB2 - EXAMPLE
#contentservices.database.hibernate.dialect.class=org.hibernate.dialect.DB2Dialect

## Oracle - EXAMPLE
#contentservices.database.hibernate.dialect.class=org.hibernate.dialect.OracleDialect
##Oracle 9i
#contentservices.database.hibernate.dialect.class=org.hibernate.dialect.Oracle9iDialect
##Oracle 10g
#contentservices.database.hibernate.dialect.class=org.hibernate.dialect.Oracle10gDialect
##Oracle 11g
#contentservices.database.hibernate.dialect.class=org.hibernate.dialect.Oracle10gDialect

## SqlServer - EXAMPLE
##Microsoft SQL Server 2000
#contentservices.database.hibernate.dialect.class=org.hibernate.dialect.SQLServerDialect
##Microsoft SQL Server 2005
#contentservices.database.hibernate.dialect.class=org.hibernate.dialect.SQLServer2005Dialect
##Microsoft SQL Server 2008
#contentservices.database.hibernate.dialect.class=org.hibernate.dialect.SQLServer2008Dialect

## MySql - EXAMPLE
##MySQL5
#contentservices.database.hibernate.dialect.class=org.hibernate.dialect.MySQL5Dialect
##MySQL5 with InnoDB
#contentservices.database.hibernate.dialect.class=org.hibernate.dialect.MySQL5InnoDBDialect
##MySQL with MyISAM
#contentservices.database.hibernate.dialect.class=org.hibernate.dialect.MySQLMyISAMDialect

## The maximum size in megabytes of content items that are stored in the database. Larger items are stored on the file system.
## Defaults to 0, meaning all content items are stored on the file system.
#contentservices.dbstore.max-size=0


#### 3.4 Content services bundle  ##########################################################
## Location where the files relevant for the contentservices bundle (of the portal archive) get stored during import.
## When not defined the standard OS temporary directory is used by default, for example, C:\Temp or /tmp.
#contentservices.importlocation=

## Location where the files relevant for the contentservices bundle (of the portal archive) get stored during export.
## When not defined the standard OS temporary directory is used by default, for example, C:\Temp or /tmp.
#contentservices.exportlocation=


#### 3.5 Repository  ########################################################################
## The location of the Ehcache configuration file for the content repository. Prefix the location with either file:// or classpath://.
## If omitted, the default Ehcache configuration is loaded.
#contentservices.repository.content.ehcache=classpath:/META-INF/cs-cache.xml

## The location of the content binaries for the content repository.
#contentservices.repository.content.fileLocation=${user.home}/.backbase/contentservices/fs/cs-content

## The Hibernate strategy when automatically updating the database schema for the content repository. Possible values are:
## . validate: validates the schema, makes no changes to the database.
## . update: updates the schema.
## . create: creates the schema, destroying previous data.
## . create-drop: drop the schema at the end of the session.
## . none: disables the feature.
## Defaults to the non-predefined value of none disabling the feature.
#contentservices.repository.content.hbm2ddl.auto=none

## Whether the system bootstrap can automatically update the database schema for the content repository. The default is false.
## If set to true, it requires the contentservices.database.hibernate.dialect.class property.
#contentservices.repository.content.schemaUpdate=false

#### 4. Integration Services  ##################################################################

## Keystore for Apache ActiveMQ client. The keystore is necessary for securing connections with SSL.
## Set this property on the server hosting Core Services when you want to use Integration Services stand-alone.
#integration.activemq.client.keyStore=

## Password for Apache ActiveMQ client keystore.
## Set this property on the server hosting Core Services when you want to use Integration Services stand-alone.
#integration.activemq.client.keyStorePassword=

## Truststore for Apache ActiveMQ client. The truststore is necessary for securing connections with SSL.
## Set this property on the server hosting Core Services when you want to use Integration Services stand-alone.
#integration.activemq.client.trustStore=

## Password for Apache ActiveMQ client truststore.
## Set this property on the server hosting Core Services when you want to use Integration Services stand-alone.
#integration.activemq.client.trustStorePassword=

## Default number of concurrent threads servicing the Java Message Service endpoint.
#integration.activemq.concurrentConsumers=3

## Folder for data storage of Apache ActiveMQ. Integration Services stand-alone needs access to this folder.
## Set this property on the server hosting Integration Services stand-alone.
#integration.activemq.datadir=${user.home}/.backbase/integrationservices/data

## The idle timeout value in seconds for connections.
#integration.activemq.idleTimeout=0

## The maximum number of connections.
#integration.activemq.maxConnections=5

## The maximum number of sessions per connection.
#integration.activemq.maximumActiveSessionPerConnection=50

## The port Apache ActiveMQ listens to.
## Set this property on the server hosting Integration Services stand-alone.
#integration.activemq.port=

## The server that hosts Integration Services stand-alone.
## Set this property on the server hosting Core Services when you want to use Integration Services stand-alone.
## Set the value to host:port where the host is the host name of Integration Services stand-alone and the port is the Apache ActiveMQ port, set in integration.activemq.port
#integration.activemq.remoteServer=

## Keystore for Apache ActiveMQ server. The keystore is necessary for securing connections with SSL.
## Set this property on the server hosting Integration Services stand-alone.
#integration.activemq.server.keyStore=

## Password for Apache ActiveMQ server keystore.
## Set this property on the server hosting Integration Services stand-alone.
#integration.activemq.server.keyStorePassword=

## Truststore for Apache ActiveMQ server. The truststore is necessary for securing connections with SSL.
## Set this property on the server hosting Integration Services stand-alone.
#integration.activemq.server.trustStore=

## Password for Apache ActiveMQ server truststore.
## Set this property on the server hosting Integration Services stand-alone.
#integration.activemq.server.trustStorePassword=

## Time in seconds to wait for the shutdown of Apache Camel to complete.
## Set this property on the server hosting Integration Services stand-alone.
#integration.defaultShutdownStrategy.timeout=30

## Comma-separated list of message headers to preserve.
#integration.headersToPreserve=cache-control,pragma,expires,transfer-encoding,set-cookie

## The location of the Logback configuration file
#integration.logging=

#### 5. Mashup Services  ##################################################################

## The location of the ptc-config.xml configuration file. Prepend the value with file: or classpath:.
#ptc.configfile.location=classpath:/ptc-config.xml

## The timeout in milliseconds until a HTTP connection is established.
#ptc.http.defaultConnectionTimeout=60000

## The timeout in milliseconds until a data transmission is completed.
#ptc.http.defaultDataProviderTimeout=60000

## The time in milliseconds an established HTTP connection waits for data transmission to begin.
#ptc.http.defaultSocketTimeout=60000

## Maximum number of concurrent requests for one remote resource.
#ptc.http.maxConnectionsPerHost=50

## Maximum total number of concurrent requests.
#ptc.http.maxTotalConnections=100

## Whether the configuration file is reloaded at each request.
## Setting to true allows for faster development because changing the configuration file does not require to restart the application server.
## Set to false in production environments.
#ptc.reload-config-at-eachrequest=false

## The character encoding used to parse POST request parameters and the request body.
#ptc.requestEncoding=UTF-8

## The character encoding used to parse the response.
#ptc.responseEncoding=UTF-8