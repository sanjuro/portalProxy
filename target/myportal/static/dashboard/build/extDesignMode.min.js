/**Copyright (c) 2011 Backbase B.V.*/
(function(k){var l=b$._private.htmlAPI,e,c,i,j,b,g=4000,a,h,d,f,p,m,o,n;b$.portal.editor={init:function(){var r,v,y,A,u,w,x,q,t,s,z;if(b$.portal.fnDelayStartup){b$.portal.fnDelayStartup()}window.parent.$(window.parent.document).trigger("iframeready");c=b$.portal.portalModel.getElementById(b$.portal.getCurrentPage().name);i=c.extendedItemName&&c.extendedItemName!=="";j=b$.portal.portalView.getElementById("VIEW-"+b$.portal.getCurrentPage().name);b=j.pageType!=="master";bd.contextRoot=b$.portal.config.serverRoot;bd.loggedInUserId=b$.portal.loggedInUserId;r=this;v=b$.portal.portalView;bd.selectedItem=null;y=false;A=function(B){window.location.reload()};u=function(E,C){var D=C.statusText,B=C.responseText.split("<message>")[1].split("</message>")[0];bc.component.notify({uid:"281269",icon:"attention",message:B,delay:2200})};w=function(B){window.location.reload()};k(document.body).on("click",".bd-icon-trash",function(D){var C=top.bd.PageMgmtTree.selectedLink.isMasterPage,B,E;r.currentItemVC=h(D.target);if(r.currentItemVC){B=r.currentItemVC.designTools.wasCreatedOnMasterPage;E=B&&!C?A:null;d(r.currentItemVC,E,u)}}).on("click",".bd-icon-edit",function(B){r.currentItemVC=h(B.target);p(B.target,1)}).on("click",".bd-icon-permissions",function(B){r.currentItemVC=h(B.target);p(B.target,2)}).on("mousedown",".bd-container-manageable, .bd-container-not-manageable, .bd-widget-manageable, .bd-widget-not-manageable, .bd-undefined-manageable",function(C){var B=this.className.indexOf("bd-container-")!==-1,D=k(this);r.currentItemVC=h(C.target);r.currentItemVC.model.manageable=r.currentItemVC.model.manageable=="true"?"false":"true";r.currentItemVC.model.save(function(E){if(B){D.toggleClass("bd-container-manageable bd-container-not-manageable")}else{D.toggleClass("bd-widget-manageable bd-widget-not-manageable")}r.currentItemVC.showDesignTools()})}).on("click",".bd-icon-revert",function(B){r.currentItemVC=h(B.target);be.utils.confirm({title:"Revert to default",message:"Are you sure you want to reset this item inherited from the master page to its original state? Any customizations will be removed.",okBtnText:"Ok",cancelBtnText:"Cancel",yesCallback:function(){if(r.currentItemVC){f(r.currentItemVC,w,null)}},closeIcon:false})});this.dmInit(r);if(i){x=b$.portal.portalView.getElementsByTagName("page")[0];q=false;t=x.ownerDocument.all;s=t.length;while(s--){if(t[s].getPreference("isManageableArea")){q=true}}if(!q&&x.pageType!=="master"){x.isPossibleDragTarget=false}}v.addEventListener("dragStart",function(E){var D=E.target.ownerDocument.dragManager,B=(E.target.getAttribute("src")||"").indexOf("CatalogBrowser")!==-1,C=B?b$(".pageDesignerWrapper",E.target.htmlNode)[0]:null;if(B){if(D.cancelDropTargets.indexOf(C)===-1){D.cancelDropTargets.push(C)}}});b$.portal.portalView.addEventListener("preferencesSaved",function(){if(bd&&bd.refreshPageTree){bd.refreshPageTree(500)}});bd.observer.addObserver(bd.notifications.publishing.PUBLISHED,function(){y=true});bd.observer.addObserver(bd.notifications.publishing.CHANGE,function(){if(y){y=false;window.location.reload()}});b$.portal.portalModel.addEventListener("DOMNodeRemovedFromDocument",function(B){if(bd&&bd.refreshPageTree){bd.refreshPageTree(500)}},true);this.enableHotkeys();z=b$.portal.portalView.documentElement;l.addClass(z.htmlNode,"designMode");z.enableDesignMode()},dmInit:function(y){var K=".bp-widget, .bp-container:not(.bp-tCont-selected)",F=k(window),J=k("body"),M=b$._private.simpleResponseCache_getData(b$.portal.config.serverRoot+"/static/portalclient/templates/dm_editbar.html"),H=function(N,P){if(k("> .bd-dm-edit-bar",N).length<1){var O=k(l.createElementFromString(Mustache.to_html(M,P)));O.prependTo(N)}};var t=function(T){if(T&&T.length===1){var U=T.find(".bd-dm-buttons"),S=T.width(),W;U.find("div").removeAttr("style");W=U.width();T.find(".bd-dm-item-name").css({width:S-W-10+"px"});T.removeClass("bd-dropdown");T.removeClass("bd-open-up");T.removeClass("bd-open-down");if(S-W<40){var Q=k(window),O=T.offset(),N=U.find("div").length*22+19,R=N+O.top-Q.scrollTop(),V=Q.height(),P;T.addClass("bd-dropdown");if(R>V){T.addClass("bd-open-up")}else{T.addClass("bd-open-down")}P=O.left+S-W;if(P<0){U.find("div").css({width:W+P+"px"})}}}};var u=function(Y){var V=Y.viewController,T=V&&V.model,W=T&&T.getPreference("title"),N=V&&V.parentNode&&V.parentNode.localName==="TCont"&&W==="Fall Back",S=V&&V.designTools,X;if(S&&!N){X=k(Y);if(S.hasFeatures){S.title=W;S.titleTag=S.title;H(X,S)}var Q=k(".pageContainer"),P=X.find(".bd-dm-edit-bar"),R=Q.length?Q.offset():k(document.body).offset(),O=R&&R.top||0,U=P.height();t(P.first());O=X.offset().top-O-U+Q.scrollTop();X.removeClass("bd-dm-nudged");if(O<20){X.addClass("bd-dm-nudged")}k(K).removeClass("bd-dm-hovered");if(!X.hasClass("bd-dm-clicked")){X.addClass("bd-dm-hovered")}}};var L=function(Q){var P=!this.viewController.designTools||this.viewController.designTools.hasFeatures,O=b$.getVC(Q.srcElement||Q.target),N=b$.getVC(Q.currentTarget);if(O===N&&P){u(this)}else{if(O.parentNode.localName=="TCont"&&N.localName=="TCont"){u(N.htmlNode)}}};var C=function(){bd.selectedItem=null;k(K).removeClass("bd-dm-clicked")};var w=function(P,N){P=k(P)[0];if(P&&(!P.viewController||P.viewController.isCatalog)){k(".bd-dm-item-name .parents").remove();return}C();k(P).addClass("bd-dm-clicked");k(P).find(".bd-dm-edit-bar").css({position:"",top:""});if(k("body").hasClass("bd-ckeditor-docked")&&k(P).offset().top<=k(".bd-ckeditor-container").height()){var O=P.viewController.parentNode;while(O){k(O.htmlNode).find(".bd-dm-edit-bar").css({position:"",top:""});k(O.htmlNode).removeClass("bd-dm-nudged");O=O.parentNode}k(P).find(".bd-dm-edit-bar").css({position:"relative",top:"0px"})}if(!N){bd.selectedItem=P}};var I=function(){var P=document.body,O={attributes:false,childList:true,characterData:false,subtree:true},N=new MutationObserver(function(Q){Q.forEach(function(S){if(S.addedNodes[0]&&S.addedNodes[0].nodeType===1){if(S.addedNodes[0].getAttribute("data-pid")){var R=b$.getVC(S.addedNodes[0]);w(R.htmlNode)}}})});N.observe(P,O)};I();var x=function(S,P){var R=k(".bc-dropdown-items"),T=R.find("a"),O=T.index(k(S).closest("a")),Q=P[O],N=null;if(Q){N=Q.htmlNode}return N};var G=function(Q,O,N){var R=null,P;k(".bc-selectbox").remove();if(O.length){R=bc.component.dropdown({target:Q,type:"action-icon-div",cssClass:"bd-ap-actionDD",staticLabel:true,options:O,wrapped:true,remove:true,beforeClose:function(S){k(".bc-selectbox").remove()}});P=R.view[0].dropdownOptions;k(P).on("click",function(T){var S=x(T.target,N);if(S){k(S).removeClass("bd-preselect-parent");w(S)}k(".bc-selectbox").remove()});k(P).on("mouseover",function(T){var S=x(T.target,N);if(S){k(S).addClass("bd-preselect-parent")}});k(P).on("mouseout",function(T){var S=x(T.target,N);if(S){k(S).removeClass("bd-preselect-parent")}})}return R};var E=function(R,T){var Q=[],S=R.htmlNode,P=k(".bd-dm-item-name",S),N=R.parentNode,O=[];if(!k(T).is(P)){return}while(N&&N.model.localName.toLowerCase()!=="page"){if(N.model.manageable!=="true"){Q.push(N);O.push({name:N,value:N._jxid,classname:""})}N=N.parentNode}G(T,O,Q)};var v=function(U){var S=b$.getVC(U.srcElement||U.target),Q=b$.getVC(U.currentTarget),T=S===Q,O=k(".parents:visible").length===0,P=top.bd.PageMgmtTree.selectedLink.isMasterPage===true,R=P&&S.getPreference&&S.getPreference("isManageableArea")===true,N=k(U.target);if((T&&O)){E(S,U.target);w(S.htmlNode,R)}else{if(S.parentNode.localName=="TCont"&&Q.localName=="TCont"){E(Q,U.target);w(Q.htmlNode)}else{if(R){C()}}}if(!U.emulatedClick&&N.hasClass("bd-dm-button")){U.emulatedClick=true;N.trigger("click")}};var B=function(Q){var P=b$.getVC(Q.srcElement||Q.target),O=b$.getVC(Q.currentTarget),N=k(".bd-dialog-container:visible");if((P===O)){if(!N){C()}}};var A=function(N){if(k(".parents:visible").length){k(".bd-dm-item-name .parents").remove()}if(this.viewController.designTools.hasFeatures&&!k(this).hasClass("bd-dm-clicked")){k(this).find(".bd-dm-edit-bar").css({position:"",top:""})}k(this).removeClass("bd-dm-hovered")};var s=function(N){var O;if(N.target===this){O=k("[data-pid] .bd-dm-clicked");if(O.length){bd.observer.notifyObserver("closeEditBar",O[0].viewController.model)}C();return false}};var r=function(N){if(this.viewController){w(this.viewController.htmlNode);u(this.viewController.htmlNode)}};var D={};J.on("mousedown.dm",s).on("mouseover.dm",K,L).on("mouseleave.dm",K,A).on("mousedown.dm",K,v).on("mousedown.dm",B).on("focus",".bp-widget",r).on("mouseover.dm",".bp-widget-head",function(){var N=k(this).closest("[data-pid]");if(N.length){u(N[0])}}).on("keydown",function(N){D[N.which]=true;if(D["71"]&&D["18"]){parent.$(".bd-show-grid-wrapper").find("div:not(.bc-view-active)").trigger("click")}}).on("keyup",function(N){delete D[N.which]});var q;var z=function(){var N=J.find(".bd-dm-hovered > .bd-dm-edit-bar, .bd-dm-clicked > .bd-dm-edit-bar");N.each(function(){t(k(this))})};F.on("resize",function(N){clearTimeout(q);q=setTimeout(z,100)});b$.portal.portalModel.addEventListener("PrefModified",function(O){var P,N,Q;if(!top.bd.PageMgmtTree.selectedLink.isMasterPage){P=b$.portal.portalView.getElementById("VIEW-"+O.target.name);if(P.designTools){P.designTools.isFromMasterPage=false}for(var N=P.model.preferences.array,Q=N.length;Q--;){if(N[Q].name==="isFromMasterPage"){N.splice(Q,1)}}P.showDesignTools();u(P.htmlNode)}});b$.portal.portalView.addEventListener("DOMNodeInserted",function(N){var O=N.target;if(O.nodeName!=="dragIndicator"){setTimeout(function(){u(O.htmlNode)},0)}if(bd&&bd.refreshPageTree&&O.nodeName!=="dragIndicator"&&O.model&&!O.model.getPreference("parentLinkUUID")){bd.refreshPageTree(500)}},false)},showForm:function(r,q){p(r,q)},enableHotkeys:function(){var v=this,r,s,q=true,x={w:function(z,y){t(y)},s:function(z,y){u(1,y)},a:function(z,y){u(2,y)},"alt+backspace":function(A,y){var C,B;if(bd.selectedItem){var z=b$.getVC(bd.selectedItem);if(z&&z.model&&z.model.manageable!=="false"){C=k(bd.selectedItem).data("state");B=C&&C.markForDeletion===true;if(!B){d()}}}else{w(y)}},enter:function(z,y){z.stopPropagation()},t:function(C,y){var A,B,D=k("#flip3DContainer"),z;if(k(".cke_dialog:visible").length){return}z=h();if(z&&z.localName==="Column_table"&&z.parentNode){if(z.parentNode.localName==="TCont"){z=z.parentNode}}if(!z||!z.designTools||!z.designTools.features.TCont){return}C.stopPropagation();if(D.length){B=D.find(".aa-tabLabel").eq(2).filter(":visible:not(.aa-activeTab)");if(B.length){B.click()}}else{v.showForm(z,3)}}};r=top.bd.pm.shortcuts.bindings||{};s=k.extend(true,{},r);top.bd.hotkeys.start(k.extend({},r,x),null,window);function w(y){q&&s[y]&&s[y].call(this)}function u(z,y){var B=k("#flip3DContainer");if(k(".cke_dialog:visible").length){return}if(bd.selectedItem){if(z==2&&!h(bd.selectedItem).designTools.features.Permission){z=1}if(B.length){if(B.filter(":visible").length){var A=B.find(".aa-tabLabel").eq(z-1).filter(":visible:not(.aa-activeTab)");if(A.length){A.click()}}else{B.remove();v.showForm(bd.selectedItem,z)}}else{v.showForm(bd.selectedItem,z)}}else{w(y)}}function t(y){if(be.animation.flipContainer.shown){be.animation.flipContainer.hide()}w(y)}}};a=function(q){return q.viewHint&&q.viewHint!==""&&(q.manageable===null||q.manageable===true)};h=function(r){var q;if(!r){return bd.selectedItem?h(bd.selectedItem):null}q=r.model?r:r.viewController;return q?q:r.parentNode?h(r.parentNode):h(bd.selectedItem)};d=function(s,w,r,u){var t,v,q;s=h(s);if(!s){return}t=s.getPreference&&s.getPreference("isManageableArea");q=t?s.getPreference("title"):s.model.localName;v="Are you sure you want to delete this "+q.toLowerCase()+"?";if(s.model.localName.toLowerCase()==="container"){v=t?"Manageable Areas allow the placement of elements within their regular pages.<br/>Are you sure you want to delete?<br/>This will also delete all elements on regular pages held within this Manageable Area.":"Are you sure you want to delete this layout, and all its contents?"}if(u){s.model.destroyAndSave(w,r);bd.selectedItem=null}else{k(bd.selectedItem).data("state",{markForDeletion:true});be.utils.confirm({title:"Delete "+q,message:v,okBtnText:"Delete",cancelBtnText:"Cancel",yesCallback:function(){s.model.destroyAndSave(w,r);bd.observer.notifyObserver("closeEditBar",s.model);bd.selectedItem=null},noCallback:function(){k(bd.selectedItem).data("state",{markForDeletion:false})},closeIcon:false})}};f=function(r,s,q){r=h(r);if(!r){return}r.model.revert(s,q)};p=function(y,q){var s,z=h(y),r,A,u,t,v,x,w;if(z&&z.localName==="Column_table"&&z.parentNode){if(z.parentNode.localName==="TCont"){z=z.parentNode}}if(!z||q===1&&z.designTools.features.Edit===false){return}s=z.designTools&&z.designTools.features||{TCont:true,Edit:false};q=q||1;r={showPermissionAndTargeting:true};A=z.model.preferences;u=A.getByName("TemplateName").value=="TCont";t=A.ownerElement.extendedItemName==="CXPNavigationWidget";v={permissions:s.Permission,targeting:s.TCont,css:u?{width:"750px"}:t?{width:"550px"}:{width:"600px"}};x=function(){var D,E=false,C=k(".aa-activeTab",e),B;e=jQuery("#flip3DContainer");B=function(F){e.css(v.css);be.animation.flipContainer.reposition(F)};e.find(".aa-tabLabels .aa-tab1").click(function(K){var J,I,F,G,L,H;C=C.length?C:k(".aa-activeTab",e);bc.component.addKeyboardAccess(C);if(E){return}E=true;I=z.model&&z.model.preferences&&z.model.preferences.array;H=function(){var P=k(this),M=z.model.preferences.getByName(P.data("id")),O=k(this).hasClass("bd-man-on")?true:false,R=O?"false":"true",N=O?"bd-man-off":"bd-man-on",Q=O?"Not editable on regular pages":"Editable on regular pages";if(M){M.setManageable(R);P.removeClass("bd-man-off bd-man-on").addClass(N+" bd-dm-mo-disabled").attr("title",Q).on("mouseout",function(){P.removeClass("bd-dm-mo-disabled")})}};if(I){for(J=0;J<I.length;J++){F=I[J];if(F.viewHint){G=k('.aa-PreferenceEditor input[name="'+F.name+'"]').closest("tr");if(b){G.toggle(a(F))}else{if(k("td",G).length<k(".aa-PreferenceEditor td[colspan]").attr("colspan")){G.append(k("<td></td>"))}L=a(F)?"Editable on regular pages":"Not editable on regular pages";G.append(k('<td><div data-id="'+F.name+'" title="'+L+'" class="bc-icn bd-man '+(a(F)?"bd-man-on":"bd-man-off")+'"></div></td>'))}}}if(!i&&G){k(".aa-PreferenceEditor td[colspan]").attr("colspan",k("td",G).length)}k(".bd-man",e).on("click",H)}});e.find(".aa-tabLabels .aa-tab2").toggle(s.Permission).click(function(F){if(s.Permission){if(!jQuery("#editWidgetTabs_Permissions .aa-permissionForm").length){m(z)}}});if(s.TCont&&!s.Edit){e.find(".aa-tabLabels .aa-tab1").hide()}e.find(".aa-tabLabels .aa-tab3").click(function(F){if(!k("#editWidgetTabs_Targeting .aa-targetingForm").length){if(k(".pageDesignerWrapper").hasClass("pageDesignerWrapper-open")){k(".tb-openClose").click()}bd.TargetingUI.loadTargeting(z)}});if(q){B();e.find(".aa-tabLabels .aa-tab"+q.toString()).trigger("click")}};w={context:z,permissions:true,params:v,callback:x};z.dispatchCustomEvent("preferences-form",true,true,w)};m=function(t){var s,r,q,u;if(!t.designTools.features.Permission){return}s=t.model.name;r=t.model.localName.toLowerCase();if(r!=="widget"&&r!=="container"){return}q="#editWidgetTabs_Permissions";u={portalName:b$.portal.portalName,itemName:s,itemType:r,context:b$.portal.config.serverRoot+"/portals/"+b$.portal.portalName+"/"+r+"s/"+s,domParent:q,closeCallback:function(){if(bd.portalName=="dashboard"){var v=jQuery("#editWidgetTabs_Permissions");if(v.length>0){be.closeCurrentDialog();v.hide();v.remove()}}else{be.animation.flipContainer.hide()}}};bd.Permission.loadPermissionsAndGroups(u)};o=function(r,q){while(r){if(r.nodeType===1&&k(r).hasClass(q)){return r}r=r.parentNode}};n=function(t,s){var q=jQuery(t).offset();return{x:q.left,y:q.top,left:q.left,top:q.top,w:t.offsetWidth,h:t.offsetHeight}}})(jQuery);var refreshTimeout=null;bd.refreshPageTree=function(a){try{if(a){clearTimeout(refreshTimeout);refreshTimeout=setTimeout(function(){if(top.bd&&top.bd.pm){top.bd.pm.view.refreshLinksAndDetails(top.bd.PageMgmtTree.selectedLink.uuid)}},a)}else{top.bd.pm.view.refreshLinksAndDetails(top.bd.PageMgmtTree.selectedLink.uuid)}}catch(b){console.log(b)}};bd.removeResize=function(){if(jQuery(".pageDesignerToolbar").hasClass("bd-ContentViewer-resizeHandle")){jQuery(".pageDesignerToolbar").removeClass("bd-ContentViewer-resizeHandle");jQuery(".pageDesignerToolbarWrapper").removeClass("bd-ContentViewer-resizeHandleWrapper")}};bd.previewPortal=function(c,a){var e=screen.width/2-1080/2,d=screen.height/2-600/2,b=window.open(bd.contextRoot+"/portals/"+c+"/pages/"+a+"?previewMode=true","preview","width=1080, height=600, status=yes, menubar=yes, scrollbars=yes, toolbar=no, resizable=yes,top="+d+", left="+e);if(window.focus){b.focus()}return false};bd.toggleWidgetCatalog=function(a){if(bd.WidgetCatalogDisplayed===true){bd.hideCatalog(a)}else{jQuery("body").addClass("pageDesignerWithCatalog");bd.removeResize();bd.WidgetCatalogDisplayed=true;bd.LayoutCatalogDisplayed=null;jQuery(".pageDesignerWrapper .tb-button").removeClass("tb-active");jQuery(a).addClass("tb-active");return bd.addCatalogItems("widget",a)}};bd.toggleLayoutCatalog=function(a){if(bd.LayoutCatalogDisplayed===true){bd.hideCatalog(a)}else{jQuery("body").addClass("pageDesignerWithCatalog");bd.removeResize();bd.LayoutCatalogDisplayed=true;bd.WidgetCatalogDisplayed=null;return bd.addCatalogItems("container",a)}};bd.toggleDrawer=function(){var a=jQuery(".pageDesignerCatalog");if(jQuery("body").hasClass("pageDesignerWithCatalog")){a.hide("fast");jQuery(".tb-button").removeClass("tb-active");jQuery("body").removeClass("pageDesignerWithCatalog");bd.LayoutCatalogDisplayed=null;bd.WidgetCatalogDisplayed=null}else{jQuery("body").addClass("pageDesignerWithCatalog");bd.removeResize();bd.LayoutCatalogDisplayed=true;bd.WidgetCatalogDisplayed=null;return bd.addCatalogItems("container",jQuery(".tb-layouts"))}};bd.hideCatalog=function(a){var c,b;bd.removeResize();c=function(){jQuery("body").removeClass("pageDesignerWithCatalog");jQuery(a).removeClass("tb-active");bd.LayoutCatalogDisplayed=null;bd.WidgetCatalogDisplayed=null;bd.pageDesignerCatalog=null};b=jQuery(".pageDesignerCatalog");b.hide("fast",c)};bd.addCatalogItems=function(c,e){var f,a,b,d;if(c!==null){bd.currentCatalogItems=c}else{c=bd.currentCatalogItems}bd.oCatalogView.clearItems();f=b$.require("portal.com.PortalCatalogDataSource");a=b$.require("portal.com.PortalClientDataRetrieveRequest");b=new f(bd.contextRoot+"/",bd.portalName);d=new a(bd.oPortal,function(){jQuery(".pageDesignerWrapper .tb-button").removeClass("tb-active");jQuery(e).addClass("tb-active");if(bd.pageDesignerCatalog===null){bd.pageDesignerCatalog=true;jQuery("body").addClass("pageDesignerWithCatalog")}bd.oCatalogView.addItems(this.responseObject.toArray())},function(){console.log("Error fetching catalog items",this.responseError)});jQuery(".pageDesignerCatalog").show();d.setParameter("f","type(eq)"+c.toUpperCase());d.setParameter("ps",bd.uiEditingOptions.catalog.itemsPerRequest);b.retrieve(d);return false};(function(){bd.notifications=bd.notifications||{};bd.notifications.targeting={VIEW_AVAILABLE:"TARGETING_VIEW_AVAILABLE",CONVERT_TO_TARGETED:"TARGETING_CONVERT_TO_TARGETED",UPDATE:"TARGETING_ALTERNATIVES_UPDATE"};bd.notifications.pageMgmt={START:"pageMgmt_START",STOP:"pageMgmt_STOP",IFRAME_RESOURCES:"pageMgmt_IFRAME_RESOURCES",IFRAME_READY:"pageMgmt_IFRAME_READY",JSTREE_SELECT:"pageMgmt_JSTREE_SELECT",JSTREE_DROP_CHECK:"pageMgmt_JSTREE_DROP_CHECK",JSTREE_DROP_FINISH:"pageMgmt_JSTREE_DROP_FINISH",PAGE_REQUEST:"pageMgmt_PAGE_REQUEST",PAGE_SETTINGS_REFRESH:"pageMgmt_PAGE_SETTINGS_REFRESH",ACTION_DROPDOWN_READY:"pageMgmt_ACTION_DROPDOWN_READY",LINK_ADDED:"pageMgmt_LINK_ADDED",JSTREE_UPDATED:"pageMgmt_JSTREE_UPDATED",TAB_ACTIVATED:"pageMgmt_TAB_ACTIVATED"};bd.notifications.publishing={TOGGLE_LOCK:"PUBLISHING_TOGGLE_LOCK",STOP:"PUBLISH_APP_STOP",PUBLISHED:"PUBLISHED",CHANGE:"PUBLISH_CHANGE"};bd.notifications.versions={PREVIEW:"VERSION_PREVIEW",HIDE:"VERSION_HIDE"};bd.notifications.session={TIMEOUT_OVERRIDE:"TIMEOUT_OVERRIDE"}})();bd.portalClientExt=(function(){var c=null;var h=function(n,m){var B=b$.require("b$.mvc.View");var z=b$.require("portal.models.holder.WidgetHolder");var D=b$.require("portal.views.holder.WidgetHolder");var i=b$.require("portal.widget.UserPreferenceField");var w=b$.require("portal.views.widget.UserPreferenceField");var r=b$.require("portal.widget.UserPreferencesForm");var t=b$.require("portal.views.widget.UserPreferencesForm");var s=b$.require("packages.portal4gadgets.widget.UserPreferencesForm");var x=b$.require("portal.widget.UserPreferenceFields");var A=b$.require("b$.mvc.SimpleViewFactory");var q=b$.require("packages.portal4gadgets.widget.Widget");var v=b$.require("portal.models.item.BooleanDataType");var y=b$.require("portal.widget.PerspectiveType");var j=b$.require("portal.widget.PerspectiveParameters");var o=b$.require("portal.models.item.SecurityProfile");var k=D.extend(function(H,E){D.call(this,H,E);this.form=new l(H.getPreferencesForm(),E);H.getPreferencesForm().addObserver("active",this.hideForm,this);var G=H.getItem();var F=function(I){if(I.attrName=="widgetChrome"){c=this}if(I.attrName.toLowerCase()=="title"){var J=G.getTitle();jQuery(".bd-widgetTitle",this.html).html(J);jQuery(".bd-editbarTitle",this.html).html(J)}};G.addObserver("PropertyModified",F,this);G.addObserver("PrefModified",F,this)});k.prototype.createHTML=function(K){var N=(bd.designMode=="true");var O=this.itemView;var P=this.getModel().getItem().getPreference("widgetChrome");if(P==null||P==""){P="$(contextRoot)/static/dashboard/templates/html/widgetChrome/defaultWidgetChrome.html"}var M=O.getHTML(K);var R=null;var S=o.CONSUMER;if(this.getModel().getItem().getSecurityProfile!=null){S=this.getModel().getItem().getSecurityProfile()}var F=(S==o.CONTRIBUTOR||S==o.COLLABORATOR||S==o.CREATOR||S==o.ADMIN);var J=F;var E=(S==o.CREATOR||S==o.ADMIN);var L=true;var I=true;if(N){J=false;E=false;I=false}if(bd.ssr==true){J=true;E=true;I=true}var G={contextRoot:bd.contextRoot,widgetTitle:this.getModel().getItem().getPreference("title"),widgetInstanceId:this.getModel().item.id,showEdit:J,showDelete:E,enableDND:I,showMaximize:L,ssr:(bd.ssr==true),designMode:N,widgetContent:""};var H=be.utils.replaceParams(P,bd.oPortalClient.params);var Q=be.utils.processHTMLTemplateByUrl(H,G);R=jQuery(Q,K);R.find(".bd-widgetBody").append(M);if(N&&bd.ssr!=true){R=u(this.getModel(),R)}this.addControls(R,K);if(bd.ssr==true){if(P=="$(contextRoot)/static/dashboard/templates/html/widgetChrome/noWidgetChrome.html"){R.hover(function(){jQuery(this).addClass("bd-widgetHover")},function(){jQuery(this).removeClass("bd-widgetHover")})}}return R.get(0)};var u=function(G,H){H.find(".bd-dragHandle").removeClass("bd-dragHandle");H.removeAttr("id");var F={widgetTitle:G.getItem().getPreference("title"),widgetInstanceId:G.item.id,widgetHTMLContent:""};var I=be.utils.processHTMLTemplate("itemDecorators/widgetEditBar",F);var E=jQuery(I);E.find(".bd-widgetPlaceholder").replaceWith(H);return E};k.prototype.getElementByHint=function(E){if(E=="draghandle"){var F=jQuery(".bd-dragHandle",this.html);var G=F.get(0);return G}else{return D.prototype.getElementByHint.call(this,E)}};k.prototype.addControls=function(K,E){var G=this;var J=this.getModel();var I=(bd.designMode=="true");K.find(".bd-maximizeButton").unbind();K.find(".bd-maximizeButton").click(function(){J.setCurrentPerspective(J.createPerspective(new y("Canvas"),new j()));G.loadMaximizedWidget(E)});K.find(".bd-refreshButton").unbind();K.find(".bd-refreshButton").click(function(){bd.oPortalClient.refreshWidget(G)});if(!I||bd.ssr==true){if(!this.isItemDraggable()){K.find(".bd-dragHandle").removeClass("bd-dragHandle")}K.find(".bd-deleteButton").unbind();K.find(".bd-deleteButton").bind("click",function(){be.utils.confirm({title:"Delete Widget",message:"Are you sure you want to delete this widget?",okBtnText:"Delete",cancelBtnText:"Cancel",yesCallback:function(){G.deleteButtonClicked();var L=J.getItem().getPreference("title");if(L=="Rich Content"||L=="Image Viewer"||L=="Image and Text"){bd.nicEditToolbar.removeContent(J.getItem().id)}},closeIcon:false})});K.find(".bd-showPreferences").unbind();K.find(".bd-showPreferences").click(jQuery.proxy(function(){this.showForm(1)},this))}else{var H=K;if(!K.hasClass("bd-widgetEditContainer")){H=K.parent()}if(H.hasClass("bd-widgetEditContainer")){var F=(H.data("events")!=undefined)||null;if(F==null){H.unbind();H.bind("mouseover",function(M){var L=jQuery(this).find(".bd-editOrClose-icon");if(L.is(":visible")){return}L.show()});H.bind("mouseout",function(M){var L=jQuery(this).find(".bd-editOrClose-icon");if(!L.is(":visible")||L.parent().hasClass("bd-editbarOpen")){return}L.hide()});H.find(".bd-editOrClose-icon").unbind();H.find(".bd-editOrClose-icon").bind("click",function(){var M=jQuery(this),L=M.parent();g(L,M)});H.find(".bd-icon-trash").unbind();H.find(".bd-icon-trash").bind("click",function(){be.utils.confirm({title:"Delete Widget",message:"Are you sure you want to delete this widget?",okBtnText:"Delete",cancelBtnText:"Cancel",yesCallback:function(){G.deleteButtonClicked();var L=J.getItem().getPreference("title");if(L=="Rich Content"||L=="Image Viewer"||L=="Image and Text"){bd.nicEditToolbar.removeContent(J.getItem().id)}},closeIcon:false})});H.find(".bd-icon-edit").unbind();H.find(".bd-icon-edit").click(jQuery.proxy(function(){this.showForm(1)},this));H.find(".bd-icon-permissions").unbind();H.find(".bd-icon-permissions").click(jQuery.proxy(function(){this.showForm(2)},this))}}}};k.prototype.bindControls=function(G,E){var F=(bd.designMode=="true");if(bd.ssr==true&&!F){this.addControls(G,E)}else{D.prototype.bindControls.call(this,G,E)}};k.prototype.showForm=function(E){oHtml=jQuery(this.form.getHTML(document));var F=this;oHtml.removeClass("portal-userPreferencesForm-active portal-userPreferencesForm-inactive").addClass("portal-userPreferencesForm-active");f(jQuery(this.html),oHtml);var G=jQuery("#flip3DContainer");G.find(".bd-tabLabels .bd-tab2").click(function(){if(!jQuery("#editWidgetTabs_Permissions .bd-permissionForm").length){bd.portalClientExt.loadWidgetPermission(F)}});if(E){G.find(".bd-tabLabels .bd-tab"+E.toString()).trigger("click")}};k.prototype.hideForm=function(E){if(!E.target.isActive()){var F=jQuery(this.html);e(F);this.form.release()}};k.prototype.loadMaximizedWidget=function(E){var G=this;var I=this.getModel();var H=jQuery(be.utils.processHTMLTemplate("widgetMaximized"),E).get(0);var F="width: "+(jQuery(E).width()-100)+"px; height: "+(jQuery(E).height()-100)+"px;";be.openDialog({htmlContent:H,closeIcon:true,wrapper:jQuery(".pageContainer").first(),callback:function(J){window.bd.oPortalClient.refreshWidget(G,function(M){jQuery(".bd-dialog-closeIcon",J).bind("click",function(){I.setCurrentPerspective(I.createPerspective(new y("Dashboard"),new j()));window.bd.oPortalClient.refreshWidget(G)});G.getItemView().release();var K=G.getFactory().getViewClass(M);var N=new K(M,G.getModel(),G.getFactory());var L=jQuery("#widgetContent",H);L.append(N.getHTML(E))})}})};var C=w.extend();C.prototype.createHTML=function(F){var E=this.model.getPreference().getName();var G=this.model.getPreference().getLabel()?this.model.getPreference().getLabel():E;var H=jQuery("<tr><td>"+G+'\n</td><td class="portalManagerPreferenceField-fieldHolder"></td><td></td></tr>',F);H.find(".portalManagerPreferenceField-fieldHolder").append(this.createFieldHTML(F));return H.get(0)};C.prototype.createUserInputElement=function(I){var K=this.model;var E=K.getPreference().getName();var N=bd.uiEditingOptions&&bd.uiEditingOptions.widgetPreferenceSelections?bd.uiEditingOptions.widgetPreferenceSelections[E]:null;var M=K.getValue();if(K.getPreference().getDataType() instanceof v){var F=jQuery('<input id="'+E+'_checkbox" type="checkbox"'+(M?' checked="checked"':"")+' name="'+E+'" />');var J=bd.enableSwitch(F,function(P){var Q=P.get(0).checked;setTimeout(function(){K.setValue(Q)},200)});return J}else{if(N){this.refresh=true;var O=[],L=M;for(option in N){if(N[option]==M){L=option}O.push({title:option,val:N[option],selected:N[option]==M})}var G={name:E,value:L,options:O};var H=be.utils.processHTMLTemplate("widgetDropdown",G);var J=jQuery(H);J.find(".bd-option").click(function(){var Q=jQuery(this);var P=Q.parent(".bd-dropdown");P.children().removeClass("bd-option-selected");Q.addClass("bd-option-selected");var S=Q.find(".bd-dropdown-label").text();var R=Q.attr("title");var T=jQuery("."+P.attr("for"),J).val(R);jQuery("."+P.attr("forlabel"),J).text(S);setTimeout(function(){K.setValue(R)},200)});return J}else{return w.prototype.createUserInputElement.call(this,I)}}};C.prototype.update=function(E,F){if(this.model.getPreference().getDataType() instanceof v||this.refresh){B.prototype.update.call(this,E,F)}else{w.prototype.update.call(this,E,F)}};var p=r.extend(function(E,F){r.call(this,E,F);var H=this;var G=[];E.getPreferences().each(function(J){var I=null;if(J.getViewHint()!=null&&J.getViewHint()!=""){I=H.createFieldFromUserPreference(J)}if(I){I.addObserver("value",H.fieldsValueChanged,H);G.push(I)}});this.fields=new x(G)});var l=t.extend(function(F,E){t.call(this,F,new A(i,C,E))});l.prototype.createHTML=function(){var I=this.model;var L=(bd.designMode=="true");var O=o.CONSUMER;if(this.model.widget.securityProfile!=null){O=this.model.widget.securityProfile}if(bd.designMode!="true"){if(I.fields.items!=null){var H=I.fields.items;var M=[];for(var N in H){var P=H[N].getPreference();var K=P.getName();var E="";if(P.getViewHint!=undefined){E=P.getViewHint()||""}if(E.indexOf("designModeOnly")==-1){M.push(H[N])}}}I.fields.items=M}var F={status:(I.isActive()?"active":"inactive"),showPermissionAndTargeting:L};var G=be.utils.processHTMLTemplate("preferenceEditor",F);var J=jQuery(G);this.fields.updateViews(I.getFields().getIterator());this.fields.render(J.find(".portalManagerPreferenceFieldView").get(0),J.find(".fieldsGoAfterMe").get(0),J.find(".fieldsGoBeforeMe").get(0));this.attachHandlers(J);return J.get(0)};l.prototype.attachHandlers=function(F){var H=this.model;var E=F.find(".portal-userPreferencesForm-okButton");var G=F.find(".portal-userPreferencesForm-cancelButton");E.click(function(){H.apply();H.deactivate()});G.click(function(){H.reset();H.deactivate()});if(!H.hasChanges()){E.addClass("bd-gradient-grey-disabled").get(0).disabled=true}};l.prototype.registerObservers=function(){var E=this;this.model.getFields().each(function(F){F.addObserver("value",E.valueChanged,E)})};bd.oParentRegistry.registerView(z,k);bd.oViewRegistry.setUserPreferencesFormFactory({createUserPreferencesFormForWidget:function(E){if(E instanceof q){return new s(E)}else{return new p(E)}}});l.prototype.valueChanged=function(E){var F=jQuery(this.html);if(E.target instanceof i){var G=this.model.hasChanges()&&this.model.isValid();var H=F.find(".portal-userPreferencesForm-okButton");H.get(0).disabled=!G;if(G){H.removeClass("bd-gradient-grey-disabled")}else{H.addClass("bd-gradient-grey-disabled")}}}};var f=function(j,n,m,i){var k=jQuery("#overlay");if(!k.length){jQuery("body").append('<div id="overlay" class="overlay"></div>');k=jQuery("#overlay")}k.css({opacity:0}).show().animate({opacity:0.5},800);if(m==null){m==""}var p=jQuery("#flip3DContainer");if(!p.length){jQuery("body").append('<div class="bd-FlipBoxContainer" id="flip3DContainer" style="display: none; '+m+'"></div>');p=jQuery("#flip3DContainer")}p.html(n);var l=function(){var q=(jQuery(window).height()-p.height())/2;p.css({left:(jQuery(window).width()-p.width())/2,top:(q>10?q:10)})};l();jQuery(window).bind("resize",l);var o=j.add(p).canvasFlip({radius:0,duration:1000,before:function(r,q){r.css({visibility:"hidden"})},after:function(r,q){q.show().css({visibility:""});if(i){i()}}});j.data("flip",o.next());bd.currentWidgetBox=j};var e=function(i){var j=jQuery("#overlay");j.animate({opacity:0},1000,function(){j.hide();j.remove()});if(i.data("flip")){i.data("flip").next({duration:800,after:function(l,k){l.remove();if(c){bd.oPortalClient.refreshWidget(c);c=null}else{k.show().css({visibility:""})}}});i.removeData("flip")}};var b=function(i){e(bd.currentWidgetBox);bd.currentWidgetBox=null;return false};var a=function(j){var k=j.getModel().getItem().getId();var i="#editWidgetTabs_Permissions";var l={portalName:bd.portalName,itemName:k,itemType:"widget",context:bd.contextRoot+"/portals/"+bd.portalName+"/widgets/"+k,domParent:i,closeCallback:function(){if(bd.portalName=="dashboard"){var m=jQuery("#editWidgetTabs_Permissions");if(m.length>0){be.closeCurrentDialog();m.hide();m.remove()}}else{j.form.getModel().deactivate()}}};bd.Permission.loadPermissionsAndGroups(l)};var d=null;var g=function(i,m){var j=i.find(".bd-editbarInner"),l=m,n=200;i.toggleClass("bd-editbarOpen");if(i.hasClass("bd-editbarOpen")){i.addClass("bd-dragHandle");j.fadeIn();l.attr("title","close menu bar");i.animate({width:"100%",top:"-=22px","margin-left":"0"},{duration:n});if(d!=null){var k=jQuery(d.find(".bd-editOrClose-icon").get(0));g(d,k);k.hide()}d=i}else{i.removeClass("bd-dragHandle");j.fadeOut();l.attr("title","open edit menu");i.animate({width:"20px",top:"+=22px","margin-left":"0"},{duration:n});d=null}};return{registerCustomSkin:h,closeMaximizedWidget:b,loadWidgetPermission:a}}());/*
 *	----------------------------------------------------------------
 *	Copyright Backbase b.v. 2012
 *	All rights reserved.
 *	----------------------------------------------------------------
 *	Author : Backbase R&D - Amsterdam - New York
 *	----------------------------------------------------------------
 *  Canvas flip 3D jQuery plugin
 *	----------------------------------------------------------------
 */


(function ($) {

// Default settings
var DEFAULT_SETTINGS = {
	// defaults
    radius: 0,          // radius
    duration: 600,      // animation duration
	showShadows: false, // show shadows during animation
	shadow: 0,
	useCanvas: true,
    zIndex: '1000',

	// Callbacks
    before: null,
    after: null
};


var canvasFlip = function(options){

	this.options = options;
	
	options.styles = [];

	var getStyles = function(i, el){
		var $el = jQuery(el);
		if(!$el.length) return {};
		var top, left,
            elTop, elLeft,
            getVal = function(attr, el, restrictNumber){
                var element = (jQuery(el).length ? jQuery(el) : $el),
                    attrValue = element.css(attr),
                    val = (attrValue === undefined || attrValue === null? '' : attrValue.replace('px', '')),
                    valNumber = parseInt(val, 10);
                return isNaN(valNumber) ? !restrictNumber ? val : 0 : valNumber;
            },
            bgColor = getVal('backgroundColor');
            bgColor = (bgColor == 'rgba(0, 0, 0, 0)' || bgColor == 'transparent' ? '#fff' : bgColor);

		// TODO: refactor this
		top = $el.offset().top || getVal('top');
		if(top == 'auto'){
			$el.parents().each(function(){
                var element = jQuery(this);
				top = jQuery(element).offset().top || getVal('top', element);
				if(top != 'auto') {
					return false;
				}
			});
		}

		left = $el.offset().left || getVal('left');
		if(left == 'auto'){
			$el.parents().each(function(){
                var element = jQuery(this);
				left = jQuery(element).offset().left || getVal('left', element);
				if(left != 'auto') {
					return false;
				}
			});
		}

		var width = $el.width() + 
			getVal("padding-left", null, true) + getVal("padding-right", null, true) + // Total Padding Width
			//getVal("margin-left") + getVal("margin-right") +  // Total Margin Width
			getVal("borderLeftWidth", null, true) + getVal("borderRightWidth", null, true); // Total Border Width

		var height = $el.height() + 
			getVal("padding-top", null, true) + getVal("padding-bottom", null, true) + // Total Padding Height
			//getVal("margin-top") + getVal("margin-bottom") +  // Total Margin Height
			getVal("borderTopWidth", null, true) + getVal("borderBottomWidth", null, true); // Total Border Height

		options.styles[i] = {
			top: top,
			left: left,
			width: width,
			height: height,
			bgColor: bgColor,
			radius: getVal('borderTopLeftRadius')
		};

		return options.styles[i];
	};
	
	//options.queue.each(getStyles);
	options.current = 0;

	// Create animation canvas
	var canvas = jQuery('#canvasFlip3D')[0];
	if (!canvas) {
		jQuery('body').append('<canvas id="canvasFlip3D" width="1" height="1" style="display:none; position:absolute; top:0; left:0; z-index:' + options.zIndex + ';"></canvas>');
		canvas = jQuery('#canvasFlip3D')[0];
	}
	

	// Detect canvas context
	var context = false,
		$flipDiv = false;
	if (options.useCanvas && canvas.getContext){
		context = canvas.getContext("2d");
	}
	else {
		// There is no canvas context

		$flipDiv = jQuery('<div id="divFlip3D" style="display: none; position: absolute; top:-10px; left: 0; z-index:' + options.zIndex + '"></div>');
		$flipDiv.appendTo('body');
	}

	//
	// Private functions
	//
		
	var draw = function (points, offset) {
		//console.log(points);
		//console.log(offset);
		var x, y, i;
		if(points && points.length) {

			context.clearRect(0, 0, canvas.width, canvas.height);

			// Draw a path
			context.beginPath();
			for (i in points) {
				x = points[i][0] + offset.left;
				y = points[i][1] + offset.top;

				if (i) {
					context.lineTo(x, y);
				} else {
					context.moveTo(x, y);
				}
			}
			context.closePath();
			context.fillStyle = options.bgColor;
			context.fill();

			// Stroke the inner outline
			context.lineWidth = options.radiusAnim*2;
			context.lineJoin = "round";
			context.strokeStyle = options.bgColor;
			context.stroke();

			// Add a shadow around the object
			// Slows down the animation
			//context.shadowBlur = 10;
			//context.shadowColor = "#888";
		}
	};
	


	var drawPlain = function (points) {
		//console.log(points);
		var x, y, i;
		if(points && points.length) {
			$flipDiv.css({
				width: Math.abs(points[1][0] - points[0][0])
			});
		}
	};


	var sign = function (a) {
		return a > 0 ? 1 : -1;
	};


	// Matrix multiplication
	var matMul = function (A, X) {
		var out = [];
		for(var i=0; i<3; i++) {
			var a = 0;
			for(var j=0; j<4; j++) {
				a += A[i][j] * X[j];
			}
			out[i] = a;
		}
		return out;
	};


	// Custom animation
	var flipAnimate = function (vars, curStyles) {
		var radius = (options.radiusAnim ? options.radiusAnim : options.radius);
		var alpha = vars.angle, flag = false;

		//A, B, C, D - 3D coordinates of rectangle
		//a, b, c, d - 2D coordinates of its projection
		var A=[], B=[], C=[], D=[], a, b, c, d;

		var R, // Radius
			Y, // Height
			K,
			P = .2, depth = 0;


		R = vars.xwidth / 2;
		if (options.useCanvas && context){
			R -= radius;
		}
		
		R = R < 1 ? 1 : R;

		//K = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 10, -R*3]];
		K = [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0]];

		Y = vars.xheight / 2 - radius;
		if($flipDiv){
			$flipDiv.css({
				height: vars.xheight,
				borderRadius: radius
			});
		}

		A[0] = R * Math.cos(alpha + Math.PI);
		A[1] = Y;
		A[2] = R * Math.sin(alpha + Math.PI);
		A[3] = 1;

		B[0] = R * Math.cos(alpha);
		B[1] = Y;
		B[2] = R * Math.sin(alpha);
		B[3] = 1;

		C[0] = R * Math.cos(alpha);
		C[1] = -Y;
		C[2] = R* Math.sin(alpha);
		C[3] = 1;

		D[0] = R * Math.cos(alpha + Math.PI);
		D[1] = -Y;
		D[2] = R * Math.sin(alpha + Math.PI);
		D[3] = 1;

		a = matMul(K, A);
		b = matMul(K, B);
		c = matMul(K, C);
		d = matMul(K, D);

		a[1] += Math.abs(A[2] * P) * sign(A[1]);
		b[1] -= Math.abs(A[2] * P) * sign(B[1]);
		c[1] -= Math.abs(C[2] * P) * sign(D[1]);
		d[1] += Math.abs(C[2] * P) * sign(C[1]);

		options.radiusAnim = Math.abs(b[0]-a[0]) / R / 2 * vars.radius;
	
		var offset = {
			left: vars.xleft + vars.xwidth/2, 
			top: vars.xtop + vars.xheight/2
		};

		if(context) {
			draw([a, b, c, d], offset);
			if(b[0]-a[0] < 0) {
				options.bgColor = options.nextBg;
			}
		} else {
			$flipDiv.css({
				marginTop: vars.xtop - curStyles.top + 'px',
				marginLeft: (R - Math.abs(b[0]-a[0])/2) + vars.xleft - curStyles.left + 'px'
			});
			if(b[0]-a[0] < 0) {
				$flipDiv.css({backgroundColor: options.nextBg});
			}
			drawPlain([a, b, c, d]);
		}
	};

	
	var rotate = function(curOptions) {
	
		var settings = $.extend({}, options, curOptions || {});

		options.next = options.queue.length > options.current + 1 ? options.current + 1 : 0;
		
		var current = options.current,
			curEl = options.queue.eq(current),
			next = options.next,
			nextEl = options.queue.eq(next);

		// update styles for current element
		var curStyles = getStyles(current, curEl),
			nextStyles = getStyles(next, nextEl);

		options.bgColor = curStyles.bgColor;
		options.nextBg = nextStyles.bgColor;

		var vars = $.extend(jQuery('<div>')[0], {
			xtop: curStyles.top,
			xleft: curStyles.left,
			xwidth: curStyles.width,
			xheight: curStyles.height,
			angle: 0,
			radius: settings.radius || curStyles.radius,
			customAnimate: true,
			updated: true
		});

		//var borderRadius = o.el.css('borderTopLeftRadius');
		//o.radius = borderRadius ? borderRadius.replace('px', '') : 0;
		//console.log(o.radius);
		
		if ($flipDiv){
			$flipDiv.show().css({
				left: curStyles.left + 'px',
				top: curStyles.top + 'px',
				width: curStyles.width + 'px',
				height: curStyles.height + 'px',
				backgroundColor: curStyles.bgColor
			});
		}

		// callback before
		if($.isFunction(settings.before)) {
			settings.before(curEl, nextEl);
		}
		
		if(canvas) { 
			canvas.width = jQuery(window).width();
			canvas.height = jQuery(document).height();
			jQuery(canvas).show();
		}
		
		jQuery(vars).animate({ 
			angle: Math.PI,
			xtop: nextStyles.top,
			xleft: nextStyles.left,
			xwidth: nextStyles.width,
			xheight: nextStyles.height,
			radius: settings.radius || nextStyles.radius
		}, {
			duration: settings.duration,
			complete: function() {
				if(canvas) jQuery(canvas).hide();
				if($flipDiv) $flipDiv.hide();
				
				// callback after
				if($.isFunction(settings.after)) {
					settings.after(curEl, nextEl);
				}
				options.radiusAnim = false;
				vars.updated = false;
				options.current = options.next;
			}
		});

		var animate = function () {
			if (!vars.updated) return;
			//vars.updated = false;
			flipAnimate(vars, curStyles);
			requestAnimFrame( animate );
		};
		
		animate();
		
	};

	this.next = function(options) {
		rotate(options);
		return this;
	};
	
	return false;	
	
};


$.fn.canvasFlip = function (options) {
	var settings = $.extend({queue: this}, DEFAULT_SETTINGS, options || {});
	return new canvasFlip(settings);
};


// Overwrite jQuery step function
var $_fx_step_default = $.fx.step._default;
$.fx.step._default = function (fx) {
	if (!fx.elem.customAnimate) return $_fx_step_default(fx);
	fx.elem[fx.prop] = fx.now;
	fx.elem.updated = true;
};

window.requestAnimFrame = (function(){
	return  window.requestAnimationFrame  || 
		window.webkitRequestAnimationFrame || 
		window.mozRequestAnimationFrame    || 
		window.oRequestAnimationFrame      || 
		window.msRequestAnimationFrame     || 
		function(/* function */ callback, /* DOMElement */ element){
			window.setTimeout(callback, 1000 / 60);
		};
})();

})(jQuery);

if(window.bd==null){bd={}}bd.removeWhiteSpaceNodes=function(a){var c=a.firstChild,b;while(c){b=c.nextSibling;if(c.nodeType==3&&/^\s*$/.test(c.nodeValue)){a.removeChild(c)}else{if(c.hasChildNodes()){bd.removeWhiteSpaceNodes(c)}}c=b}return a};bd._parseXML=function(d){var a,b,c=!!(navigator.userAgent.match(/Trident/)&&!navigator.userAgent.match(/MSIE/));if(!d||typeof d!=="string"){return null}try{if(window.DOMParser&&!c){b=new DOMParser();a=b.parseFromString(d,"text/xml")}else{a=new ActiveXObject("Microsoft.XMLDOM");a.async="false";a.loadXML(d)}}catch(f){a=undefined}if(!a||!a.documentElement||a.getElementsByTagName("parsererror").length){throw new Error("Invalid XML: "+d)}return a};bd.xmlToJson=function(t){var l=["value","approvalMessage"];var c=t.dataFormatter;var d=bd.removeWhiteSpaceNodes(t.xml);if(typeof d==="string"){d=bd._parseXML(d)}var g={};if(d.nodeType==1){for(var n=0,q=d.attributes.length;n<q;n++){var h=d.attributes.item(n);if(h.nodeValue!=null&&h.nodeValue!=""){g[h.nodeName]=h.nodeValue}if(h.nodeName=="type"&&h.nodeValue.toLowerCase()=="string"&&!d.childNodes.length&&l.indexOf(d.nodeName)>-1){return null}}}else{if(d.nodeType==3&&d.nodeValue!=null&&d.nodeValue!=""){g=d.nodeValue}}if(d.hasChildNodes()){for(var o=0;o<d.childNodes.length;o++){var s=d.childNodes.item(o);var b=s.nodeName;if(b=="#text"){if(s.nodeValue!=null){g=s.nodeValue}break}else{if(b=="properties"){g.properties={};g.propertiesArray=[];for(var m=0;m<s.childNodes.length;m++){var u=s.childNodes.item(m);var f=u.getAttribute("name");var r=bd.xmlToJson({xml:u,dataFormatter:c});g.properties[f]=r;g.propertiesArray.push(r)}if(c!=null){c(g)}}else{if(b=="tags"){g.tags=[];g.tagArray=[];for(var m=0;m<s.childNodes.length;m++){var u=s.childNodes.item(m);var e=u.getAttribute("type");var k=u.getAttribute("manageable");k=k==="false"?false:true;var r=bd.xmlToJson({xml:u,dataFormatter:c});g.tagArray.push(r);g.tags.push({type:e,manageable:k,value:r})}if(c!=null){c(g)}}else{if(typeof(g[b])=="undefined"||g[b]===null){g[b]=bd.xmlToJson({xml:s,dataFormatter:c})}else{if(Object.prototype.toString.call(g[b])!=="[object Array]"){var a=g[b];g[b]=[];g[b].push(a)}g[b].push(bd.xmlToJson({xml:s,dataFormatter:c}))}}}}}}return g};bd.Permission=(function(){var V="cannot be updated because it is locked";var F="CANNOT CHANGE PORTAL PERMISSIONS";var j="Some pages that need to be updated appear to be locked.";var m=null;var i=null;var u;var x={};var O="NONE";var E={sProfileToText:{ADMIN:"Can Administer",CREATOR:{ADMIN:"Can Edit",MANAGER:"Can Edit",USER:"Can Personalize",DEFAULT:"Can Personalize"},COLLABORATOR:"COLLABORATOR",CONTRIBUTOR:"CONTRIBUTOR",CONSUMER:"Can View"},TextToSProfile:{"Can Administer":"ADMIN","Can Edit":"CREATOR","Can Personalize":"CREATOR",COLLABORATOR:"COLLABORATOR",CONTRIBUTOR:"CONTRIBUTOR","Can View":"CONSUMER"}};E.sProfileToText[O]="No Access";E.TextToSProfile["No Access"]=O;var L=bd.isAdmin||window.top.bd.isAdmin,g="rights.xml",K="advancedrights.xml",b="advancedrights.xml",q="masterpage_root",Q="Yes",R="No",J=[{name:"manager",role:"MANAGER",securityProfile:"ADMIN"},{name:"master page designer",role:"MANAGER",securityProfile:"ADMIN"},{name:"user",role:"USER",securityProfile:"CONSUMER"}];var U=function(ac,ad,ab,Z){var af,ae="";if(ab){ae=ab}else{ae=m.context}var X=ae+"/"+g;if(X.indexOf("/links/")!=-1){X=ae+"/"+K}else{if(!ab&&m&&m.itemType==="portal"){X=ae+"/"+b}}try{var Y=be.utils.processXMLTemplate("portalRights",ac);af=be.utils.ajax({url:X,data:Y,type:"PUT",async:false,success:function(){M({showMsg:ad,successCallback:Z,defaultPortalRights:Y,templateData:ac})}})}catch(aa){console.log("setPermission exception",aa)}return af};var M=function(X){if(X.showMsg==null){if(m&&m.savedCallback){m.savedCallback(X.defaultPortalRights,X.templateData)}bc.component.notify({uid:"9985",icon:"checkbox",message:"Permissions have been applied successfully."})}if(X.successCallback){X.successCallback()}if(window!=window.top&&bd){bd.refreshPageTree(500)}else{if(bd&&bd.pm&&bd.pm.view&&bd.pm.observer&&bd.PageMgmtTree){bd.pm.view.refreshLinksAndDetails(bd.PageMgmtTree.selectedLink.uuid,true)}}};var W=function(Z){var X={title:"ERROR",message:jQuery(Z.xhr.responseText).find("message").text(),closeIcon:true,respondToEscKey:true,buttons:[{title:"OK",type:"white",callback:function(){}}]};var Y=Z.xhr;bc.component.dialog(X)};var a=function(ab){var Z=bc.component.dropdown({target:".bd-add-group-dd",label:"Add Group",uid:"8256",minWidth:"120px",icon:"group"});$groupDropDown=Z[0].dropdownOptions;var Y=function(aj){var ai=jQuery(".bd-permission-groupName",ab.$domParent);for(var ah=0,af=ai.length;ah<af;ah++){var ag=ai[ah].getAttribute("sid");if(ag=="group_"+aj){return true}}return false};var ae="";var ad=0;for(var X in ab.templateData.groupHashMap){var aa=ab.templateData.groupHashMap[X];var ac=aa.name;if(!Y(ac)){if(!L){if(aa.role!="ADMIN"&&aa.role!="MANAGER"&&aa.role!="SYS2SYS"){ae+='<a href="#" sid="group_'+ac+'" class="bc-dropdown-item bc-ellipsis" onclick="return false;" title="'+ac+'"><span class="bc-option-label">'+ac+"</span></a>";ad++}}else{ae+='<a href="#" sid="group_'+ac+'" class="bc-dropdown-item bc-ellipsis" onclick="return false;" title="'+ac+'"><span class="bc-option-label">'+ac+"</span></a>";ad++}}}$groupDropDown.html(ae);if(ad==0){jQuery(".bd-add-group-dd .bc-selectbox").addClass("bd-groups-empty");jQuery(".bd-groupsEmptyMsg").show()}$groupDropDown.undelegate("a","click").delegate("a","click",function(af){af.preventDefault();w(jQuery(this),ab)})};var d=function(){var X=(m.itemType=="portal");if(X){v(function(Y){t({masterPageRootRights:Y,isPortal:true})})}else{t({masterPageRootRights:null,isPortal:false})}};var t=function(Y){var X=X?X:top.bd;Y.linkTitle=m.linkTitle||null;Y.$domParent=jQuery(m.domParent);if(m==null||m.listOfGroupsForCurrentUser==null){m=m||{};m.listOfGroupsForCurrentUser={};be.utils.ajax({url:X.contextRoot+"/users/"+X.loggedInUserId+"/groups.xml?ps=0",success:function(Z){s(Y,Z)},dataType:"xml"})}else{r(Y)}};var s=function(Z,Y){var ab=be.utils.xpathNodes(Y,"/groups/group/name/text()");for(var X=0;X<ab.length;X++){var aa=ab[X].nodeValue;m.listOfGroupsForCurrentUser["group_"+aa]="group_"+aa}r(Z)};var r=function(Y){var X;if(m.context){X=m.context+"/"+g+"?lastModifiedTimestamp(dsc)"}if(X.indexOf("/links/")!=-1){X=m.context+"/"+K+"?lastModifiedTimestamp(dsc)"}if(X){be.utils.ajax({url:X,cache:false,dataType:"xml",success:function(Z){Y.responseDataXML=Z;p(Y)}})}};var p=function(X){jQuery(document).unbind("click.permissionDropDownList");be.utils.ajax({url:bd.contextRoot+"/groups.xml?ps=0",success:function(Y){o(X,Y)},error:function(Y){be.utils.alert({message:Y.responseText});n(X)},cache:false,data:null,dataType:"xml",type:"GET"})};var o=function(ab,aa){var Y=bd.xmlToJson({xml:aa});x={};for(var Z=0,X=Y.groups.group.length;Z<X;Z++){x[Y.groups.group[Z].name]=Y.groups.group[Z]}n(ab)};var n=function(ag){try{var al=bd.xmlToJson({xml:ag.responseDataXML});delete ag.responseDataXML;var X=false;var ah="No Access";var aa=al.rights.itemRight;var ae=true;var ab={},ak={};if(!aa.length||aa.length<1){aa=al.rights;ae=aa.itemRight.inherited=="false"?false:true}else{ae=aa[0].inherited=="false"?false:true}var aj=[];$.each(aa,function(am,an){an.role=an.sid.substring(6);an.role_anonymous=an.sid=="role_anonymous";an.can_change=(an.sid!="group_admin"&&!m.listOfGroupsForCurrentUser[an.sid]);if(typeof(E.sProfileToText[an.securityProfile])=="object"){if(x[an.role]){an.can=E.sProfileToText[an.securityProfile][x[an.role].role];if(an.can===undefined){an.can=E.sProfileToText[an.securityProfile]["DEFAULT"]}}else{if(an.role_anonymous){ah=E.sProfileToText[an.securityProfile]["USER"]}else{}}}else{if(an.role_anonymous){ah=E.sProfileToText[an.securityProfile]}else{an.can=E.sProfileToText[an.securityProfile]}}if(an.securityProfile=="CONSUMER"&&an.role_anonymous){X=true}ab[an.sid]={sid:an.sid,securityProfile:an.securityProfile};ak[an.sid]={sid:an.sid,securityProfile:an.securityProfile};if(!L&&x[an.role]){if(x[an.role].role=="MANAGER"||x[an.role].role=="ADMIN"||x[an.role].role=="SYS2SYS"){aj.push(am)}}if(!x[an.role]){aj.push(am)}});for(var ai=aj.length-1;ai>=0;ai--){al.rights.itemRight.splice(aj[ai],1)}var ad={data:al.rights,contextRoot:bd.contextRoot,isPortal:ag.isPortal,isPortalStyle:ag.isPortal&&L?"bc-1-3":"bc-1-2",masterPageRootRights:ag.masterPageRootRights,isAdmin:L,linkTitle:ag.linkTitle,itemIcon:m.itemIcon,CONSUMER_role_anonymous:X,anonymousRight:ah,isChecked:ae,currentDialogPrefix:m.itemType,hideEditButtons:m.hideEditButtons,hideCloseButtons:m.hideCloseButtons};ad.groupHashMap=x;x={};var ac=jQuery(be.utils.processHTMLTemplate("permissions/permissionsUI",ad));ac=A(ac,{templateData:ad},false);var Y=ag.$domParent;var af=jQuery("<div/>").append(ac).html();Y.html(af);Y.undelegate(".bd-permissionsEditButton","click").delegate(".bd-permissionsEditButton","click",function(am){am.preventDefault();B({templateData:ad,$domParent:Y,savedPermissionView:af,savedPermissionList:ab,originalPermissionList:ak})});Y.undelegate(".bd-permissionsCloseButton","click").delegate(".bd-permissionsCloseButton","click",function(am){am.preventDefault();l()});bc.component.addKeyboardAccess(Y)}catch(Z){console.log("Permissions: "+Z)}};var e=function(Y,X){m=Y;P(J,X)};var c=function(X){m=X;d();if(X.itemType=="portal"){i=X}be.closeCurrentDialogCallback=function(){try{if(i){bd.Permission.loadPermissionsAndGroups(i)}}catch(Y){console.log(Y)}}};var f=function(Y,aa){if(aa.sid=="anonymous"){var ab=Y.find(".bd-anonymous-dd")}else{var ab=Y.find(".bd-group-dd-"+aa.sid)}var X=bc.component.dropdown({target:ab,label:aa.label,uid:"9875",minWidth:"90px",options:aa.options,sid:aa.sid});var Z=X[0].dropdownOptions};var w=function(ac,aa){var ab=jQuery(".bd-permissionForm-list",aa.$domParent),ad=jQuery(".bd-permission-groupTable",aa.$domParent),Z={can:"Can View",can_change:(ac.attr("sid")!="group_admin"),isAdmin:L,sid:ac.attr("sid"),role:ac.attr("title"),securityProfile:"CONSUMER",contextRoot:bd.contextRoot,checkRole:aa.templateData.checkRole,isPortalStyle:aa.templateData.isPortalStyle},ae=ad.parents(".aa-activeTab, .bd-activeTab");aa.savedPermissionList[ac.attr("sid")]={sid:ac.attr("sid"),securityProfile:"CONSUMER"};var Y=$(be.utils.processHTMLTemplate("permissions/permissionGroup",Z));var X=k(Z.sid);f(Y,aa.templateData.optionsList[X]);A(Y,aa,true);ad.append(Y);ab.animate({scrollTop:ad.height()-24});var af=$(".bd-add-group-dd .bc-selectbox");if(ac.siblings().length<=0){af.addClass("bd-groups-empty");$(".bd-groupsEmptyMsg").show()}ac.remove();bc.component.addKeyboardAccess(ae);setTimeout(function(){af.focus()},400);return false};var z=function(ac,Z,ab){var X=$.trim(ac.text());var aa=ac.closest(".bc-permissions-dd");var ae=aa.attr("data-sid");var af=null;var ad=$(".bc-dd-sid-"+ae).parents(".tr-permission");var Y;if(ab){af=ab.parents(".tr-permission").find(".bd-permission-groupName")}else{af=ad.find(".bd-permission-groupName")}if(af.length>0){Y=af.attr("sid");Z.savedPermissionList[Y]={sid:Y,securityProfile:E.TextToSProfile[X]};if(Z.templateData.isPortal){C(ad.find(".td-permissionOpts-privileges").siblings(".td-permissionOpts-design-mp"),E.TextToSProfile[X],Y,Z)}}else{Z.savedPermissionList.role_anonymous={sid:"role_anonymous",securityProfile:E.TextToSProfile[X]}}return false};var l=function(){if(m.closeCallback!=null){try{m.closeCallback()}catch(X){console.log(X)}m=null}return false};var h=function(Z,aa){var X=Z.parents(".tr-permission");var Y=X.find(".bd-permission-groupName");var ab='<a onclick="return false;" class="bc-dropdown-item bc-ellipsis" sid="'+Y.attr("sid")+'" href="#" title="'+Y.attr("title")+'"><span class="bc-option-label">'+Y.text()+"</span></a>";$groupDropDown.append(ab).hide();jQuery(".bd-add-group-dd .bc-selectbox").removeClass("bd-groups-empty");jQuery(".bd-groupsEmptyMsg").hide();X.remove();if(aa.savedPermissionList[Y.attr("sid")]){aa.savedPermissionList[Y.attr("sid")].securityProfile=O}G(Y.attr("sid"),aa);return false};var T=function(X){X.$domParent.html(X.savedPermissionView);jQuery(document).unbind("click.permissionDropDownList")};var D=function(Z){var Y=[],aa=Z.templateData.groupHashMap,ac=jQuery(".bd-sameParentCheckbox",Z.$domParent).prop("checked")?true:false,ab=ac?Z.originalPermissionList:Z.savedPermissionList;for(var ae in ab){var ad=ab[ae];Y.push({sid:ad.sid,securityProfile:ac?O:ad.securityProfile})}if(ac){U({rightData:Y}).done(d)}else{var ag=function(){var ai=function(){if(m&&m.isMasterPage){bd.masterpage.setMPPermission(Y,aa,m.pageName).done(d)}else{d()}};U({rightData:Y}).done(ai)};if(Z.templateData.isPortal&&Z.templateData.masterPageRootRights){var af=[];for(var ah in Z.designMasterPagePermissions){var X=Z.designMasterPagePermissions[ah];af.push({sid:X.sid,securityProfile:X.securityProfile})}U({rightData:af},"",bd.contextRoot+"/portals/"+bd.selectedPortalName+"/links/"+q).done(ag)}else{ag()}}};var H=function(ab){var ad=ab.templateData.isChecked,aa=ab.$domParent,X=$(".bc-form-body",aa),ac=$(".bd-permissionsEditRegion",aa),Y=$(".bd-permission-dd,.bd-add-group-dd",aa).find(".bc-selectbox"),Z=aa.parents(".aa-activeTab");X.toggleClass("bd-whiteWrapper",!ad);ac.toggleClass("bd-permissionsEditDisabled",ad);Y.toggleClass("bc-gradient-grey",!ad).toggleClass("bd-gradient-grey-disabled",ad);if(Z.length==0){Z=aa}if(ad){$(".bd-permissionCaution, .tr-permissionGroup, .bd-permission-deleteGroup",ab.$domParent).css("display","none")}else{$(".bd-permissionCaution, .tr-permissionGroup",ab.$domParent).css("display","block");$(".bd-permission-deleteGroup",ab.$domParent).attr("style","")}bc.component.addKeyboardAccess(Z)};var B=function(ac){ac.templateData.checkRole=function(){return function(ao,ae){var ak={name:"Can Administer",href:"javascript:void(0);"};var ag={name:"Can Edit",href:"javascript:void(0);"};var an={name:"Can View",href:"javascript:void(0);"};var ah={name:"Can Personalize",href:"javascript:void(0);"};var aj={name:"No Access",href:"javascript:void(0);"};var af=this;var ap=[];var al=af.can?af.can:af.anonymousRight;var ad=this.sid?k(this.sid):"anonymous";var am=this.sid?'<div class="bd-permission-dd bd-group-dd-'+ad+'"></div>':'<div class="bd-permission-dd bd-anonymous-dd"></div>';if(af.role){if(ac.templateData.groupHashMap[af.role]){var ai=ac.templateData.groupHashMap[af.role].role;if(ai=="ADMIN"){ap.push(ak,ag,an)}else{if(ai=="MANAGER"){ap.push(ak,ag,an)}else{ap.push(ah,an)}}}else{if(ac.savedPermissionList[af.sid]){ac.savedPermissionList[af.sid].securityProfile=O}}}else{ap.push(ah,an,aj)}ac.templateData.optionsList[ad]={label:al,options:ap,sid:ad};return ae(am)}};if(!ac.templateData.optionsList){ac.templateData.optionsList={}}var Y=$(be.utils.processHTMLTemplate("permissions/editPermissions",ac.templateData));var Z=Y.find(".bd-sameParentWrapper");var ab=bc.component.toggleSwitch({target:Z,uid:"1227",name:"bd-sameParentCheckbox",checked:ac.templateData.isChecked,callback:function(){ac.templateData.isChecked=!ac.templateData.isChecked;H(ac);top.$(".bd-iframeContainer").height(top.$(".bd-iframeContainer").height()-1);setTimeout(function(){top.$(".bd-iframeContainer").height("")},100)}});ab.find("input").addClass("bd-sameParentCheckbox");for(var X in ac.templateData.optionsList){var aa=ac.templateData.optionsList[X];f(Y,aa)}A(Y,ac,true);ac.$domParent.html(Y);$(".bd-permissionForm-list").scroll(function(){if(jQuery(".bc-dropdown-items").length>0){jQuery(".bc-dropdown-items").slideUp("fast",function(){jQuery(".bc-dropdown-items").detach();jQuery(".bc-selectbox.bc-open").removeClass("bc-open")})}});a(ac);H(ac);ac.$domParent.undelegate(".bd-permission-savePermission","click").delegate(".bd-permission-savePermission","click",function(ad){ad.preventDefault();D(ac)});$("body").undelegate(".bc-permissions-dd a","click").delegate(".bc-permissions-dd a","click",function(ad){z(jQuery(this),ac)});ac.$domParent.undelegate(".bd-permission-deleteGroup","click").delegate(".bd-permission-deleteGroup","click",function(ad){ad.preventDefault();h(jQuery(this),ac)});ac.$domParent.undelegate(".bd-permission-cancelButton","click").delegate(".bd-permission-cancelButton","click",function(ad){ad.preventDefault();T(ac)});bc.component.addKeyboardAccess(Y)};var I=function(X){jQuery(".bd-permissionForm",X.$domParent).delegate(".bd-showInheritanceTree","click",function(){var Y=this;jQuery(this).parent().find(".bd-inheritanceTree").toggle(300,function(){var Z=jQuery(this).parent().find(".bd-inheritanceTree").is(":visible");jQuery(Y).html((Z?"Hide":"Show full inheritance tree."))})})};var S=function(Y){if(Y&&Y.role=="MANAGER"){m={context:bd.contextRoot+"/portals/"+bd.portalName};U({rightData:[{sid:"group_"+Y.name,securityProfile:"CONSUMER"}]});var X=function(ab){var Z=bd.xmlToJson({xml:ab});if(Z&&Z.templates){var aa=Z.templates.template;aa=aa.length?aa:[aa];$.each(aa,function(ac,ad){m={context:bd.contextRoot+"/templates/"+ad.name};U({rightData:[{sid:"group_"+Y.name,securityProfile:"ADMIN"}]})})}};be.utils.ajax({url:bd.contextRoot+"/templates.xml",cache:false,success:X,dataType:"xml"})}};var k=function(Y){var X=be.utils.replaceRefuzingChars(Y,"name");X=X.replace(/(\s)+/g,"");return X};var v=function(Z){var X=null,Y;be.utils.ajax({url:bd.contextRoot+"/portals/"+bd.selectedPortalName+"/links/"+q+"/rights.xml",cache:false,dataType:"xml",success:function(ac){Y=bd.xmlToJson({xml:ac});if(Y.rights&&Y.rights.itemRight){Y=Y.rights.itemRight}if(!Y.length){Y=[Y]}X={};var ab,aa,ad;for(ab=0,aa=Y.length;ab<aa;ab++){ad=Y[ab];X[ad.sid]=ad}Z(X)},error:function(ab,aa){var ac=ab.status;if(ac===403){}else{if(ac===404){X=null}}Z(X)}})};var A=function(Z,ac,af){if(!ac.templateData.masterPageRootRights){Z.find(".td-permissionOpts-design-mp").remove();return Z}var ah=Z.find(".bd-masterPageDesign-toggle-replacer"),ae,aa,X,ag,Y,ai,ad,ab=ac.templateData.isPortal;if(!ac.designMasterPagePermissions){ac.designMasterPagePermissions={}}for(ae=0,aa=ah.length;ae<aa;ae++){X=jQuery(ah[ae]);Y=X.attr("data-sid");ai=X.attr("data-securityProfile");ad=X.attr("data-role"),groupRole="COMSUMER",x=ac.templateData.groupHashMap,masterPageRootRights=ac.templateData.masterPageRootRights;if(ad){if(x[ad]){groupRole=x[ad].role}}if(Y==="group_admin"){ac.designMasterPagePermissions[Y]={sid:Y,securityProfile:"ADMIN"};X.html(Q);X.show()}else{if(groupRole==="MANAGER"){if(af){ag=bc.component.toggleSwitch({target:X,uid:"1257",name:"bd-designMasterPageCheckbox",checked:masterPageRootRights[Y]?true:false,callback:function(al,am){var ak=al.parent(),aj=ak.attr("data-sid");if(am.prop("checked")){N(aj,ac)}else{G(aj,ac)}}})}else{X.html(masterPageRootRights[Y]?Q:R)}if(ai==="ADMIN"){X.show()}}else{X.remove()}}}return Z};var C=function(aa,Y,X,Z){if(Y==="ADMIN"){aa.find(".bd-masterPageDesign-toggle-replacer").show()}else{aa.find(".bd-masterPageDesign-toggle-replacer").hide();G(X,Z)}};var N=function(X,Y){if(!Y.templateData.masterPageRootRights){return}if(!Y.designMasterPagePermissions[X]){Y.designMasterPagePermissions[X]={sid:X,securityProfile:"ADMIN"}}else{Y.designMasterPagePermissions[X].securityProfile="ADMIN"}};var G=function(X,Y){if(!Y.templateData.masterPageRootRights){return}if(Y.designMasterPagePermissions[X]){Y.designMasterPagePermissions[X].securityProfile=O}else{Y.designMasterPagePermissions[X]={sid:X,securityProfile:O}}};var y=function(ad){var ae,ac,ab,Y,af,X,Z={},aa=function(ag){ae=be.utils.xpathNodes(ag,"/groups/group/name/text()");ac=be.utils.xpathNodes(ag,"/groups/group/role/text()");for(ab=0,Y=ae.length;ab<Y;ab++){af=ae[ab].nodeValue;X=ac[ab].nodeValue;Z[af]={sid:"group_"+af,name:af,role:X}}if(ad){ad(Z)}};be.utils.ajax({url:bd.contextRoot+"/groups.xml?ps=0",success:aa,dataType:"xml"})};var P=function(X,Z,Y){y(function(af){var ad,ab,ag,aa,ae={},ac=[];for(ad=0,ab=X.length;ad<ab;ad++){ag=X[ad];aa=ag.name;if(af[aa]&&af[aa].role===ag.role){ac.push({sid:af[aa].sid,securityProfile:ag.securityProfile})}}if(!ac.length){return}ae.rightData=ac;U(ae,Z,Y)})};return{setDefaultPermission:e,loadPermissionsAndGroups:c,setDefaultGroupPermission:S,setPermission:U,setDefaultPermissionOnDemand:P}}());(function(b){window.bc=window.bc||{};window.bd=window.bd||{};window.be=window.be||{};var a={oldValue:"",newValue:"",setValue:function(c){this.newValue=be.utils.formatAllowedName(c)},sync:function(){this.oldValue=this.newValue},clear:function(){this.oldValue="";this.newValue=""},like:function(c){return this.oldValue===be.utils.formatAllowedName(c)},$template:function(c){return b('<span class="bd-inPlaceEditor"><input size="5" class="bd-newurl" value="'+c+'" /><button class="bd-button bd-green bd-roundcorner-3">Ok</button><button class="bd-buttonText">Cancel</button><label class="bd-editIncomplete error" style="display:none">Please click OK or Cancel.</label></span>')}};bd.initEditable=function(c){var f,e,d;c=c||jQuery(window);e=b(".bd-editable",c);a.clear();c.on("click.editable",".bd-editableContainer",function(g){bd.editable(e,c);return false}).on("keyup.editable blur.editable",".bd-titleInput",function(){a.setValue(this.value);f=f||jQuery(".bd-nameEditable",this.form);if(a.like(f.text())){f.text(a.newValue);d=d||(this.form.newPortalName?b(this.form.newPortalName):this.form.portalName?b(this.form.portalName):null);if(d){d.val(a.newValue).trigger("keyup")}}a.sync()})};bd.editable=function(d,o,f){var q,c,p;var s,k,i;d=jQuery(d);o=o||d.parents("form");f=f||be.utils.formatAllowedName;q=d.attr("for");c=jQuery("#"+q,o).first();s=c.attr("maxlength");k=d.parents(".bd-editableContainer");i=a.$template(d.text());if(k.length){k.after(i).hide()}else{d.after(i).hide()}var m=jQuery("input",i).select(),n=jQuery(".bd-button",i),h=jQuery(".bd-buttonText",i),r=jQuery(".bd-newurl",i),e=jQuery(".bd-buttonEditable"),g=jQuery(".bd-updatePage"),v=jQuery(".bd-editIncomplete");if(s){m.attr("maxlength",s)}var j=function(){if(k.length){k.show()}else{i.prev("span").show()}jQuery(":input",i).unbind();i.remove()};var t=function(w){if(w){v.text(w)}else{v.text("Please click OK or Cancel.")}v.delay(200).slideDown()};var l=function(){g.removeAttr("disabled").removeClass("bd-gradient-grey-disabled")};var u=function(x){x.preventDefault();var w=f(m.val());c.val(w);a.oldValue=w;d.text(w).show();c.trigger("keyup").trigger("changed");v.hide();l();j()};e.on("click",function(){g.attr("disabled","disabled").addClass("bd-gradient-grey-disabled")});r.bind("blur",function(){t()});n.on("click",u);h.on("click",function(w){w.preventDefault();l();j();bc.component.addKeyboardAccess(o)});o.submit(function(w){j()});bc.component.addKeyboardAccess(o);setTimeout(function(){m.focus()},400)};bd.ResourceTracker=function(){this.counter=0;this.numberOfResources=0;var c=this;this.isComplete=function(){return c.counter>=c.numberOfResources}};bd.showHover=function(h,d,g){var c=jQuery(h);var f=c.position().top-40;var e=c.position().left;c.append('<div id="propagatePopup" class="bd-operationCompleteMsg" style="position: absolute; top: '+f+"; left: "+e+';">'+g+"</div>")};bd.hideHover=function(d){var c=jQuery(d);c.find("#propagatePopup").remove()};bd.enableSwitch=function(h,g){if(typeof h==="string"){h=jQuery("#"+h)}var e="toggle-checked";var f,c,d;h.each(function(){var i=jQuery(this);var k=function(l){if(l){c.addClass(e)}else{c.removeClass(e)}};if(i.is('input[type="checkbox"]')){f=i;var j=f.attr("checked")=="checked";f.wrap('<p class="field toggle-switch"><label></label></p>');c=f.closest("label");d=f.closest("p.toggle-switch")}else{c=h.find("label");f=h.find('input[type="checkbox"]');d=h}c.append('<span class="toggle-mask"></span>');f.click(function(l){k(this.checked);f.attr("checked",this.checked);if(g){g(jQuery(this))}});k(f.attr("checked")=="checked")});return d};bd.operationCompleteMsg=function(f,c){console.log("DEPRECATED: bd.operationCompleteMsg - Please use bc.component.notify");if(c==null){c="checkbox˙Icon"}var e=jQuery("body");var d=jQuery('<div class="bd-msgWrapper" style="opacity:0;"><div class="bd-operationCompleteMsg"><div class="bd-msgIcon bd-'+c+'"></div>'+f+"</div></div>");jQuery(".bd-msgWrapper").remove();e.prepend(d);var g=0;if(jQuery(".bd-msgWrapper").length>1){g=jQuery(".bd-msgWrapper").length*30}d.css({"margin-left":-d.width()/2});d.animate({top:"+=10px",opacity:1},{duration:500,queue:false});d.fadeIn("slow").animate({top:"+=10px"},{duration:"slow",queue:false});setTimeout(function(){d.fadeOut("slow").animate({top:"+=10px"},{duration:"slow",queue:false},function(){d.remove()})},2000)};bd.publishItemAndChildren=function(d,c,e,f){console.log("Deprecated publish function.  Please remove from script.")};jQuery(document).ready(function(){if(be&&be.closeAllDialog&&be.closeCurrentDialog){jQuery(".bd-homeIcon").click(be.closeAllDialog);jQuery(".bd-closeIcon").click(be.closeCurrentDialog);var c=function(){var f=be.dialogContainersStack[be.dialogContainersStack.length-1];if(f&&f.attr("data-respondToEscKey")!="true"){be.utils.log("ESC action ignored by dialog preference","dashboard.js");return}var d=b(".bc-modal:visible");if(d.length){d.find(".bc-close").trigger("click");return}var e=jQuery(".bd-dialog-wrapper.standAlone");if(e.length>0){be.closeCurrentDialog(f.data("params"))}else{jQuery(".bd-closeIcon").click()}};jQuery(document).on("keydown.dashboard",function(d){d=d||window.event;if(d.keyCode==27){setTimeout(c,200)}})}});bd.populateForm=function(d,c){jQuery("[name]",d).each(function(){var e=this.getAttribute("name");if(c[e]&&c[e]["#text"]){var g=c[e]["#text"];var f=(this.getAttribute("type")||"").toLowerCase();switch(f){case"checkbox":this.checked=(g=="true");break;default:this.value=g}}})};jQuery(document).delegate(".bd-tabLabel","click",function(){var d=this.getAttribute("for")||this.getAttribute("data-for");if(d){var c=jQuery(this).parents(":has(.bd-tabs)");if(c.length&&!jQuery(this).hasClass("bd-activeTab")){jQuery(".bd-tabLabel, .bd-tab",c[0]).removeClass("bd-activeTab");jQuery(d,c[0]).addClass("bd-activeTab");jQuery(this).addClass("bd-activeTab");bd.observer.notifyObserver(bd.notifications.pageMgmt.TAB_ACTIVATED,{tab:d})}}});bd.openHelp=function(c){var d=be.utils.processHTMLTemplate("help-"+c);be.openDialog({htmlContent:d});return false};bd.toggleDropdown=function(d){var c=this;if(jQuery(".bd-dropdown",this).slideToggle("fast",function(){if(jQuery(this).is(":hidden")){jQuery(c).removeClass("bd-open")}}).is(":visible")){jQuery(c).addClass("bd-open")}if(typeof d=="object"){jQuery(".bd-dropdowncheckbox.bd-open").not(this).each(bd.toggleDropdown);d.stopImmediatePropagation()}};bd.toggleDropdownInit=function(){jQuery(document.body).delegate(".bd-dropdowncheckbox,.bd-slideupcheckbox","click",bd.toggleDropdown);jQuery(document.body).click(function(){jQuery(".bd-dropdowncheckbox.bd-open").each(bd.toggleDropdown)});jQuery(document.body).delegate(".bd-dropdowncheckbox .bd-checkbox, .bd-slideupcheckbox .bd-checkbox","click",function(c){c.stopPropagation()})}})(jQuery);(function(b,a){if(a&&a.utils&&a.utils.browserDetection){document.getElementsByTagName("html")[0].className+=a.utils.browserDetection()}if(!window.console){window.console={log:function(e,c){var d=function(g,f){if(typeof g==="object"||typeof g==="array"){var h="";b.each(g,function(j,k){h+=Array(f).join("\t")+j+": "+d(k,f+1)});return h+"\n"}else{return g+"\n"}};if(c){alert(d(e,0))}}}}})(window.jQuery,window.be);/*! jQuery UI - v1.9.2 - 2013-01-09
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.droppable.js, jquery.ui.resizable.js, jquery.ui.autocomplete.js, jquery.ui.button.js, jquery.ui.dialog.js, jquery.ui.menu.js, jquery.ui.tabs.js, jquery.ui.effect.js, jquery.ui.effect-explode.js, jquery.ui.effect-scale.js
* Copyright (c) 2013 jQuery Foundation and other contributors Licensed MIT */
(function(f,b){function a(j,m){var k,h,l,e=j.nodeName.toLowerCase();return"area"===e?(k=j.parentNode,h=k.name,!j.href||!h||k.nodeName.toLowerCase()!=="map"?!1:(l=f("img[usemap=#"+h+"]")[0],!!l&&c(l))):(/input|select|textarea|button|object/.test(e)?!j.disabled:"a"===e?j.href||m:m)&&c(j)}function c(e){return f.expr.filters.visible(e)&&!f(e).parents().andSelf().filter(function(){return f.css(this,"visibility")==="hidden"}).length}var g=0,d=/^ui-id-\d+$/;f.ui=f.ui||{};if(f.ui.version){return}f.extend(f.ui,{version:"1.9.2",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),f.fn.extend({_focus:f.fn.focus,focus:function(e,h){return typeof e=="number"?this.each(function(){var i=this;setTimeout(function(){f(i).focus(),h&&h.call(i)},e)}):this._focus.apply(this,arguments)},scrollParent:function(){var e;return f.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?e=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(f.css(this,"position"))&&/(auto|scroll)/.test(f.css(this,"overflow")+f.css(this,"overflow-y")+f.css(this,"overflow-x"))}).eq(0):e=this.parents().filter(function(){return/(auto|scroll)/.test(f.css(this,"overflow")+f.css(this,"overflow-y")+f.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!e.length?f(document):e},zIndex:function(k){if(k!==b){return this.css("zIndex",k)}if(this.length){var j=f(this[0]),e,h;while(j.length&&j[0]!==document){e=j.css("position");if(e==="absolute"||e==="relative"||e==="fixed"){h=parseInt(j.css("zIndex"),10);if(!isNaN(h)&&h!==0){return h}}j=j.parent()}}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++g)})},removeUniqueId:function(){return this.each(function(){d.test(this.id)&&f(this).removeAttr("id")})}}),f.extend(f.expr[":"],{data:f.expr.createPseudo?f.expr.createPseudo(function(e){return function(h){return !!f.data(h,e)}}):function(e,i,h){return !!f.data(e,h[3])},focusable:function(e){return a(e,!isNaN(f.attr(e,"tabindex")))},tabbable:function(e){var i=f.attr(e,"tabindex"),h=isNaN(i);return(h||i>=0)&&a(e,!h)}}),f(function(){var e=document.body,h=e.appendChild(h=document.createElement("div"));h.offsetHeight,f.extend(h.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),f.support.minHeight=h.offsetHeight===100,f.support.selectstart="onselectstart" in h,e.removeChild(h).style.display="none"}),f("<a>").outerWidth(1).jquery||f.each(["Width","Height"],function(m,k){function e(i,q,p,o){return f.each(h,function(){q-=parseFloat(f.css(i,"padding"+this))||0,p&&(q-=parseFloat(f.css(i,"border"+this+"Width"))||0),o&&(q-=parseFloat(f.css(i,"margin"+this))||0)}),q}var h=k==="Width"?["Left","Right"]:["Top","Bottom"],j=k.toLowerCase(),l={innerWidth:f.fn.innerWidth,innerHeight:f.fn.innerHeight,outerWidth:f.fn.outerWidth,outerHeight:f.fn.outerHeight};f.fn["inner"+k]=function(i){return i===b?l["inner"+k].call(this):this.each(function(){f(this).css(j,e(this,i)+"px")})},f.fn["outer"+k]=function(i,o){return typeof i!="number"?l["outer"+k].call(this,i):this.each(function(){f(this).css(j,e(this,i,!0,o)+"px")})}}),f("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(f.fn.removeData=function(e){return function(h){return arguments.length?e.call(this,f.camelCase(h)):e.call(this)}}(f.fn.removeData)),function(){var e=/msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase())||[];f.ui.ie=e.length?!0:!1,f.ui.ie6=parseFloat(e[1],10)===6}(),f.fn.extend({disableSelection:function(){return this.bind((f.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(h){h.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),f.extend(f.ui,{plugin:{add:function(h,l,k){var e,j=f.ui[h].prototype;for(e in k){j.plugins[e]=j.plugins[e]||[],j.plugins[e].push([l,k[e]])}},call:function(l,j,m){var k,h=l.plugins[j];if(!h||!l.element[0].parentNode||l.element[0].parentNode.nodeType===11){return}for(k=0;k<h.length;k++){l.options[h[k][0]]&&h[k][1].apply(l.element,m)}}},contains:f.contains,hasScroll:function(h,k){if(f(h).css("overflow")==="hidden"){return !1}var j=k&&k==="left"?"scrollLeft":"scrollTop",e=!1;return h[j]>0?!0:(h[j]=1,e=h[j]>0,h[j]=0,e)},isOverAxis:function(i,h,j){return i>h&&i<h+j},isOver:function(h,m,k,e,j,l){return f.ui.isOverAxis(h,k,j)&&f.ui.isOverAxis(m,e,l)}})})(jQuery);(function(d,b){var f=0,c=Array.prototype.slice,a=d.cleanData;d.cleanData=function(e){for(var i=0,h;(h=e[i])!=null;i++){try{d(h).triggerHandler("remove")}catch(g){}}a(e)},d.widget=function(j,p,l){var h,k,m,g,e=j.split(".")[0];j=j.split(".")[1],h=e+"-"+j,l||(l=p,p=d.Widget),d.expr[":"][h.toLowerCase()]=function(i){return !!d.data(i,h)},d[e]=d[e]||{},k=d[e][j],m=d[e][j]=function(n,i){if(!this._createWidget){return new m(n,i)}arguments.length&&this._createWidget(n,i)},d.extend(m,k,{version:l.version,_proto:d.extend({},l),_childConstructors:[]}),g=new p,g.options=d.widget.extend({},g.options),d.each(l,function(o,n){d.isFunction(n)&&(l[o]=function(){var q=function(){return p.prototype[o].apply(this,arguments)},i=function(r){return p.prototype[o].apply(this,r)};return function(){var r=this._super,v=this._superApply,u;return this._super=q,this._superApply=i,u=n.apply(this,arguments),this._super=r,this._superApply=v,u}}())}),m.prototype=d.widget.extend(g,{widgetEventPrefix:k?g.widgetEventPrefix:j},l,{constructor:m,namespace:e,widgetName:j,widgetBaseClass:h,widgetFullName:h}),k?(d.each(k._childConstructors,function(i,q){var o=q.prototype;d.widget(o.namespace+"."+o.widgetName,m,q._proto)}),delete k._childConstructors):p._childConstructors.push(m),d.widget.bridge(j,m)},d.widget.extend=function(l){var h=c.call(arguments,1),j=0,k=h.length,g,e;for(;j<k;j++){for(g in h[j]){e=h[j][g],h[j].hasOwnProperty(g)&&e!==b&&(d.isPlainObject(e)?l[g]=d.isPlainObject(l[g])?d.widget.extend({},l[g],e):d.widget.extend({},e):l[g]=e)}}return l},d.widget.bridge=function(h,e){var g=e.prototype.widgetFullName||h;d.fn[h]=function(l){var j=typeof l=="string",i=c.call(arguments,1),k=this;return l=!j&&i.length?d.widget.extend.apply(null,[l].concat(i)):l,j?this.each(function(){var n,m=d.data(this,g);if(!m){return d.error("cannot call methods on "+h+" prior to initialization; attempted to call method '"+l+"'")}if(!d.isFunction(m[l])||l.charAt(0)==="_"){return d.error("no such method '"+l+"' for "+h+" widget instance")}n=m[l].apply(m,i);if(n!==m&&n!==b){return k=n&&n.jquery?k.pushStack(n.get()):n,!1}}):this.each(function(){var m=d.data(this,g);m?m.option(l||{})._init():d.data(this,g,new e(l,this))}),k}},d.Widget=function(){},d.Widget._childConstructors=[],d.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(e,g){g=d(g||this.defaultElement||this)[0],this.element=d(g),this.uuid=f++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=d.widget.extend({},this.options,this._getCreateOptions(),e),this.bindings=d(),this.hoverable=d(),this.focusable=d(),g!==this&&(d.data(g,this.widgetName,this),d.data(g,this.widgetFullName,this),this._on(!0,this.element,{remove:function(h){h.target===g&&this.destroy()}}),this.document=d(g.style?g.ownerDocument:g.document||g),this.window=d(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:d.noop,_getCreateEventData:d.noop,_create:d.noop,_init:d.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(d.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:d.noop,widget:function(){return this.element},option:function(l,j){var g=l,h,k,e;if(arguments.length===0){return d.widget.extend({},this.options)}if(typeof l=="string"){g={},h=l.split("."),l=h.shift();if(h.length){k=g[l]=d.widget.extend({},this.options[l]);for(e=0;e<h.length-1;e++){k[h[e]]=k[h[e]]||{},k=k[h[e]]}l=h.pop();if(j===b){return k[l]===b?null:k[l]}k[l]=j}else{if(j===b){return this.options[l]===b?null:this.options[l]}g[l]=j}}return this._setOptions(g),this},_setOptions:function(h){var g;for(g in h){this._setOption(g,h[g])}return this},_setOption:function(h,g){return this.options[h]=g,h==="disabled"&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!g).attr("aria-disabled",g),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(g,k,j){var e,h=this;typeof g!="boolean"&&(j=k,k=g,g=!1),j?(k=e=d(k),this.bindings=this.bindings.add(k)):(j=k,k=this.element,e=this.widget()),d.each(j,function(p,s){function n(){if(!g&&(h.options.disabled===!0||d(this).hasClass("ui-state-disabled"))){return}return(typeof s=="string"?h[s]:s).apply(h,arguments)}typeof s!="string"&&(n.guid=s.guid=s.guid||n.guid||d.guid++);var m=p.match(/^(\w+)\s*(.*)$/),q=m[1]+h.eventNamespace,i=m[2];i?e.delegate(i,q,n):k.bind(q,n)})},_off:function(h,g){g=(g||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,h.unbind(g).undelegate(g)},_delay:function(i,g){function j(){return(typeof i=="string"?h[i]:i).apply(h,arguments)}var h=this;return setTimeout(j,g||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(g){d(g.currentTarget).addClass("ui-state-hover")},mouseleave:function(g){d(g.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(g){d(g.currentTarget).addClass("ui-state-focus")},focusout:function(g){d(g.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(g,l,j){var e,h,k=this.options[g];j=j||{},l=d.Event(l),l.type=(g===this.widgetEventPrefix?g:this.widgetEventPrefix+g).toLowerCase(),l.target=this.element[0],h=l.originalEvent;if(h){for(e in h){e in l||(l[e]=h[e])}}return this.element.trigger(l,j),!(d.isFunction(k)&&k.apply(this.element[0],[l].concat(j))===!1||l.isDefaultPrevented())}},d.each({show:"fadeIn",hide:"fadeOut"},function(e,g){d.Widget.prototype["_"+e]=function(l,j,k){typeof j=="string"&&(j={effect:j});var m,h=j?j===!0||typeof j=="number"?g:j.effect||g:e;j=j||{},typeof j=="number"&&(j={duration:j}),m=!d.isEmptyObject(j),j.complete=k,j.delay&&l.delay(j.delay),m&&d.effects&&(d.effects.effect[h]||d.uiBackCompat!==!1&&d.effects[h])?l[e](j):h!==e&&l[h]?l[h](j.duration,j.easing,k):l.queue(function(i){d(this)[e](),k&&k.call(l[0]),i()})}}),d.uiBackCompat!==!1&&(d.Widget.prototype._getCreateOptions=function(){return d.metadata&&d.metadata.get(this.element[0])[this.widgetName]})})(jQuery);(function(b,a){var c=!1;b(document).mouseup(function(d){c=!1}),b.widget("ui.mouse",{version:"1.9.2",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var d=this;this.element.bind("mousedown."+this.widgetName,function(f){return d._mouseDown(f)}).bind("click."+this.widgetName,function(e){if(!0===b.data(e.target,d.widgetName+".preventClickEvent")){return b.removeData(e.target,d.widgetName+".preventClickEvent"),e.stopImmediatePropagation(),!1}}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&b(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(e){if(c){return}this._mouseStarted&&this._mouseUp(e),this._mouseDownEvent=e;var g=this,d=e.which===1,f=typeof this.options.cancel=="string"&&e.target.nodeName?b(e.target).closest(this.options.cancel).length:!1;if(!d||f||!this._mouseCapture(e)){return !0}this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){g.mouseDelayMet=!0},this.options.delay));if(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)){this._mouseStarted=this._mouseStart(e)!==!1;if(!this._mouseStarted){return e.preventDefault(),!0}}return !0===b.data(e.target,this.widgetName+".preventClickEvent")&&b.removeData(e.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(h){return g._mouseMove(h)},this._mouseUpDelegate=function(h){return g._mouseUp(h)},b(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),e.preventDefault(),c=!0,!0},_mouseMove:function(d){return !b.ui.ie||document.documentMode>=9||!!d.button?this._mouseStarted?(this._mouseDrag(d),d.preventDefault()):(this._mouseDistanceMet(d)&&this._mouseDelayMet(d)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,d)!==!1,this._mouseStarted?this._mouseDrag(d):this._mouseUp(d)),!this._mouseStarted):this._mouseUp(d)},_mouseUp:function(d){return b(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,d.target===this._mouseDownEvent.target&&b.data(d.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(d)),!1},_mouseDistanceMet:function(d){return Math.max(Math.abs(this._mouseDownEvent.pageX-d.pageX),Math.abs(this._mouseDownEvent.pageY-d.pageY))>=this.options.distance},_mouseDelayMet:function(d){return this.mouseDelayMet},_mouseStart:function(d){},_mouseDrag:function(d){},_mouseStop:function(d){},_mouseCapture:function(d){return !0}})})(jQuery);(function(w,A){function q(c,a,f){return[parseInt(c[0],10)*(k.test(c[0])?a/100:1),parseInt(c[1],10)*(k.test(c[1])?f/100:1)]}function d(a,c){return parseInt(w.css(a,c),10)||0}w.ui=w.ui||{};var j,b=Math.max,m=Math.abs,B=Math.round,g=/left|center|right/,z=/top|center|bottom/,y=/[\+\-]\d+%?/,v=/^\w+/,k=/%$/,x=w.fn.position;w.position={scrollbarWidth:function(){if(j!==A){return j}var e,a,c=w("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),f=c.children()[0];return w("body").append(c),e=f.offsetWidth,c.css("overflow","scroll"),a=f.offsetWidth,e===a&&(a=c[0].clientWidth),c.remove(),j=e-a},getScrollInfo:function(c){var h=c.isWindow?"":c.element.css("overflow-x"),f=c.isWindow?"":c.element.css("overflow-y"),a=h==="scroll"||h==="auto"&&c.width<c.element[0].scrollWidth,e=f==="scroll"||f==="auto"&&c.height<c.element[0].scrollHeight;return{width:a?w.position.scrollbarWidth():0,height:e?w.position.scrollbarWidth():0}},getWithinInfo:function(a){var e=w(a||window),c=w.isWindow(e[0]);return{element:e,isWindow:c,offset:e.offset()||{left:0,top:0},scrollLeft:e.scrollLeft(),scrollTop:e.scrollTop(),width:c?e.width():e.outerWidth(),height:c?e.height():e.outerHeight()}}},w.fn.position=function(u){if(!u||!u.of){return x.apply(this,arguments)}u=w.extend({},u);var a,e,i,s,c,h=w(u.of),p=w.position.getWithinInfo(u.within),o=w.position.getScrollInfo(p),r=h[0],C=(u.collision||"flip").split(" "),f={};return r.nodeType===9?(e=h.width(),i=h.height(),s={top:0,left:0}):w.isWindow(r)?(e=h.width(),i=h.height(),s={top:h.scrollTop(),left:h.scrollLeft()}):r.preventDefault?(u.at="left top",e=i=0,s={top:r.pageY,left:r.pageX}):(e=h.outerWidth(),i=h.outerHeight(),s=h.offset()),c=w.extend({},s),w.each(["my","at"],function(){var t=(u[this]||"").split(" "),D,l;t.length===1&&(t=g.test(t[0])?t.concat(["center"]):z.test(t[0])?["center"].concat(t):["center","center"]),t[0]=g.test(t[0])?t[0]:"center",t[1]=z.test(t[1])?t[1]:"center",D=y.exec(t[0]),l=y.exec(t[1]),f[this]=[D?D[0]:0,l?l[0]:0],u[this]=[v.exec(t[0])[0],v.exec(t[1])[0]]}),C.length===1&&(C[1]=C[0]),u.at[0]==="right"?c.left+=e:u.at[0]==="center"&&(c.left+=e/2),u.at[1]==="bottom"?c.top+=i:u.at[1]==="center"&&(c.top+=i/2),a=q(f.at,e,i),c.left+=a[0],c.top+=a[1],this.each(function(){var n,K,H=w(this),E=H.outerWidth(),G=H.outerHeight(),J=d(this,"marginLeft"),I=d(this,"marginTop"),D=E+J+d(this,"marginRight")+o.width,F=G+I+d(this,"marginBottom")+o.height,l=w.extend({},c),t=q(f.my,H.outerWidth(),H.outerHeight());u.my[0]==="right"?l.left-=E:u.my[0]==="center"&&(l.left-=E/2),u.my[1]==="bottom"?l.top-=G:u.my[1]==="center"&&(l.top-=G/2),l.left+=t[0],l.top+=t[1],w.support.offsetFractions||(l.left=B(l.left),l.top=B(l.top)),n={marginLeft:J,marginTop:I},w.each(["left","top"],function(M,L){w.ui.position[C[M]]&&w.ui.position[C[M]][L](l,{targetWidth:e,targetHeight:i,elemWidth:E,elemHeight:G,collisionPosition:n,collisionWidth:D,collisionHeight:F,offset:[a[0]+t[0],a[1]+t[1]],my:u.my,at:u.at,within:p,elem:H})}),w.fn.bgiframe&&H.bgiframe(),u.using&&(K=function(O){var Q=s.left-l.left,N=Q+e-E,P=s.top-l.top,L=P+i-G,M={target:{element:h,left:s.left,top:s.top,width:e,height:i},element:{element:H,left:l.left,top:l.top,width:E,height:G},horizontal:N<0?"left":Q>0?"right":"center",vertical:L<0?"top":P>0?"bottom":"middle"};e<E&&m(Q+N)<e&&(M.horizontal="center"),i<G&&m(P+L)<i&&(M.vertical="middle"),b(m(Q),m(N))>b(m(P),m(L))?M.important="horizontal":M.important="vertical",u.using.call(this,O,M)}),H.offset(w.extend(l,{using:K}))})},w.ui.position={fit:{left:function(r,E){var h=E.within,l=h.isWindow?h.scrollLeft:h.offset.left,F=h.width,c=r.left-E.collisionPosition.marginLeft,D=l-c,C=c+E.collisionWidth-F-l,p;E.collisionWidth>F?D>0&&C<=0?(p=r.left+D+E.collisionWidth-F-l,r.left+=D-p):C>0&&D<=0?r.left=l:D>C?r.left=l+F-E.collisionWidth:r.left=l:D>0?r.left+=D:C>0?r.left-=C:r.left=b(r.left-c,r.left)},top:function(r,E){var h=E.within,l=h.isWindow?h.scrollTop:h.offset.top,F=E.within.height,c=r.top-E.collisionPosition.marginTop,D=l-c,C=c+E.collisionHeight-F-l,p;E.collisionHeight>F?D>0&&C<=0?(p=r.top+D+E.collisionHeight-F-l,r.top+=D-p):C>0&&D<=0?r.top=l:D>C?r.top=l+F-E.collisionHeight:r.top=l:D>0?r.top+=D:C>0?r.top-=C:r.top=b(r.top-c,r.top)}},flip:{left:function(I,N){var E=N.within,i=E.offset.left+E.scrollLeft,O=E.width,D=E.isWindow?E.scrollLeft:E.offset.left,M=I.left-N.collisionPosition.marginLeft,L=M-D,H=M+N.collisionWidth-O-D,F=N.my[0]==="left"?-N.elemWidth:N.my[0]==="right"?N.elemWidth:0,K=N.at[0]==="left"?N.targetWidth:N.at[0]==="right"?-N.targetWidth:0,G=-2*N.offset[0],C,J;if(L<0){C=I.left+F+K+G+N.collisionWidth-O-i;if(C<0||C<m(L)){I.left+=F+K+G}}else{if(H>0){J=I.left-N.collisionPosition.marginLeft+F+K+G-D;if(J>0||m(J)<H){I.left+=F+K+G}}}},top:function(I,O){var E=O.within,i=E.offset.top+E.scrollTop,P=E.height,D=E.isWindow?E.scrollTop:E.offset.top,N=I.top-O.collisionPosition.marginTop,L=N-D,H=N+O.collisionHeight-P-D,F=O.my[1]==="top",K=F?-O.elemHeight:O.my[1]==="bottom"?O.elemHeight:0,G=O.at[1]==="top"?O.targetHeight:O.at[1]==="bottom"?-O.targetHeight:0,C=-2*O.offset[1],J,M;L<0?(M=I.top+K+G+C+O.collisionHeight-P-i,I.top+K+G+C>L&&(M<0||M<m(L))&&(I.top+=K+G+C)):H>0&&(J=I.top-O.collisionPosition.marginTop+K+G+C-D,I.top+K+G+C>H&&(J>0||m(J)<H)&&(I.top+=K+G+C))}},flipfit:{left:function(){w.ui.position.flip.left.apply(this,arguments),w.ui.position.fit.left.apply(this,arguments)},top:function(){w.ui.position.flip.top.apply(this,arguments),w.ui.position.fit.top.apply(this,arguments)}}},function(){var e,p,h,c,f,l=document.getElementsByTagName("body")[0],a=document.createElement("div");e=document.createElement(l?"div":"body"),h={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},l&&w.extend(h,{position:"absolute",left:"-1000px",top:"-1000px"});for(f in h){e.style[f]=h[f]}e.appendChild(a),p=l||document.documentElement,p.insertBefore(e,p.firstChild),a.style.cssText="position: absolute; left: 10.7432222px;",c=w(a).offset().left,w.support.offsetFractions=c>10&&c<11,e.innerHTML="",p.removeChild(e)}(),w.uiBackCompat!==!1&&function(a){var c=a.fn.position;a.fn.position=function(h){if(!h||!h.offset){return c.call(this,h)}var e=h.offset.split(" "),f=h.at.split(" ");return e.length===1&&(e[1]=e[0]),/^\d/.test(e[0])&&(e[0]="+"+e[0]),/^\d/.test(e[1])&&(e[1]="+"+e[1]),f.length===1&&(/left|center|right/.test(f[0])?f[1]="center":(f[1]=f[0],f[0]="center")),c.call(this,a.extend(h,{at:f[0]+e[0]+" "+f[1]+e[1],offset:A}))}}(jQuery)})(jQuery);(function(b,a){b.widget("ui.draggable",b.ui.mouse,{version:"1.9.2",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1},_create:function(){this.options.helper=="original"&&!/^(?:r|a|f)/.test(this.element.css("position"))&&(this.element[0].style.position="relative"),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._mouseInit()},_destroy:function(){this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._mouseDestroy()},_mouseCapture:function(c){var d=this.options;return this.helper||d.disabled||b(c.target).is(".ui-resizable-handle")?!1:(this.handle=this._getHandle(c),this.handle?(b(d.iframeFix===!0?"iframe":d.iframeFix).each(function(){b('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth+"px",height:this.offsetHeight+"px",position:"absolute",opacity:"0.001",zIndex:1000}).css(b(this).offset()).appendTo("body")}),!0):!1)},_mouseStart:function(c){var d=this.options;return this.helper=this._createHelper(c),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),b.ui.ddmanager&&(b.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},b.extend(this.offset,{click:{left:c.pageX-this.offset.left,top:c.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(c),this.originalPageX=c.pageX,this.originalPageY=c.pageY,d.cursorAt&&this._adjustOffsetFromHelper(d.cursorAt),d.containment&&this._setContainment(),this._trigger("start",c)===!1?(this._clear(),!1):(this._cacheHelperProportions(),b.ui.ddmanager&&!d.dropBehaviour&&b.ui.ddmanager.prepareOffsets(this,c),this._mouseDrag(c,!0),b.ui.ddmanager&&b.ui.ddmanager.dragStart(this,c),!0)},_mouseDrag:function(c,e){this.position=this._generatePosition(c),this.positionAbs=this._convertPositionTo("absolute");if(!e){var d=this._uiHash();if(this._trigger("drag",c,d)===!1){return this._mouseUp({}),!1}this.position=d.position}if(!this.options.axis||this.options.axis!="y"){this.helper[0].style.left=this.position.left+"px"}if(!this.options.axis||this.options.axis!="x"){this.helper[0].style.top=this.position.top+"px"}return b.ui.ddmanager&&b.ui.ddmanager.drag(this,c),!1},_mouseStop:function(d){var g=!1;b.ui.ddmanager&&!this.options.dropBehaviour&&(g=b.ui.ddmanager.drop(this,d)),this.dropped&&(g=this.dropped,this.dropped=!1);var f=this.element[0],c=!1;while(f&&(f=f.parentNode)){f==document&&(c=!0)}if(!c&&this.options.helper==="original"){return !1}if(this.options.revert=="invalid"&&!g||this.options.revert=="valid"&&g||this.options.revert===!0||b.isFunction(this.options.revert)&&this.options.revert.call(this.element,g)){var e=this;b(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){e._trigger("stop",d)!==!1&&e._clear()})}else{this._trigger("stop",d)!==!1&&this._clear()}return !1},_mouseUp:function(c){return b("div.ui-draggable-iframeFix").each(function(){this.parentNode.removeChild(this)}),b.ui.ddmanager&&b.ui.ddmanager.dragStop(this,c),b.ui.mouse.prototype._mouseUp.call(this,c)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(c){var d=!this.options.handle||!b(this.options.handle,this.element).length?!0:!1;return b(this.options.handle,this.element).find("*").andSelf().each(function(){this==c.target&&(d=!0)}),d},_createHelper:function(c){var e=this.options,d=b.isFunction(e.helper)?b(e.helper.apply(this.element[0],[c])):e.helper=="clone"?this.element.clone().removeAttr("id"):this.element;return d.parents("body").length||d.appendTo(e.appendTo=="parent"?this.element[0].parentNode:e.appendTo),d[0]!=this.element[0]&&!/(fixed|absolute)/.test(d.css("position"))&&d.css("position","absolute"),d},_adjustOffsetFromHelper:function(c){typeof c=="string"&&(c=c.split(" ")),b.isArray(c)&&(c={left:+c[0],top:+c[1]||0}),"left" in c&&(this.offset.click.left=c.left+this.margins.left),"right" in c&&(this.offset.click.left=this.helperProportions.width-c.right+this.margins.left),"top" in c&&(this.offset.click.top=c.top+this.margins.top),"bottom" in c&&(this.offset.click.top=this.helperProportions.height-c.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var c=this.offsetParent.offset();this.cssPosition=="absolute"&&this.scrollParent[0]!=document&&b.contains(this.scrollParent[0],this.offsetParent[0])&&(c.left+=this.scrollParent.scrollLeft(),c.top+=this.scrollParent.scrollTop());if(this.offsetParent[0]==document.body||this.offsetParent[0].tagName&&this.offsetParent[0].tagName.toLowerCase()=="html"&&b.ui.ie){c={top:0,left:0}}return{top:c.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:c.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if(this.cssPosition=="relative"){var c=this.element.position();return{top:c.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:c.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var d=this.options;d.containment=="parent"&&(d.containment=this.helper[0].parentNode);if(d.containment=="document"||d.containment=="window"){this.containment=[d.containment=="document"?0:b(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,d.containment=="document"?0:b(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,(d.containment=="document"?0:b(window).scrollLeft())+b(d.containment=="document"?document:window).width()-this.helperProportions.width-this.margins.left,(d.containment=="document"?0:b(window).scrollTop())+(b(d.containment=="document"?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]}if(!/^(document|window|parent)$/.test(d.containment)&&d.containment.constructor!=Array){var g=b(d.containment),f=g[0];if(!f){return}var c=g.offset(),e=b(f).css("overflow")!="hidden";this.containment=[(parseInt(b(f).css("borderLeftWidth"),10)||0)+(parseInt(b(f).css("paddingLeft"),10)||0),(parseInt(b(f).css("borderTopWidth"),10)||0)+(parseInt(b(f).css("paddingTop"),10)||0),(e?Math.max(f.scrollWidth,f.offsetWidth):f.offsetWidth)-(parseInt(b(f).css("borderLeftWidth"),10)||0)-(parseInt(b(f).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(f.scrollHeight,f.offsetHeight):f.offsetHeight)-(parseInt(b(f).css("borderTopWidth"),10)||0)-(parseInt(b(f).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=g}else{d.containment.constructor==Array&&(this.containment=d.containment)}},_convertPositionTo:function(d,h){h||(h=this.position);var f=d=="absolute"?1:-1,c=this.options,e=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!b.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,g=/(html|body)/i.test(e[0].tagName);return{top:h.top+this.offset.relative.top*f+this.offset.parent.top*f-(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():g?0:e.scrollTop())*f,left:h.left+this.offset.relative.left*f+this.offset.parent.left*f-(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():g?0:e.scrollLeft())*f}},_generatePosition:function(p){var e=this.options,c=this.cssPosition!="absolute"||this.scrollParent[0]!=document&&!!b.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,h=/(html|body)/i.test(c[0].tagName),q=p.pageX,d=p.pageY;if(this.originalPosition){var m;if(this.containment){if(this.relative_container){var k=this.relative_container.offset();m=[this.containment[0]+k.left,this.containment[1]+k.top,this.containment[2]+k.left,this.containment[3]+k.top]}else{m=this.containment}p.pageX-this.offset.click.left<m[0]&&(q=m[0]+this.offset.click.left),p.pageY-this.offset.click.top<m[1]&&(d=m[1]+this.offset.click.top),p.pageX-this.offset.click.left>m[2]&&(q=m[2]+this.offset.click.left),p.pageY-this.offset.click.top>m[3]&&(d=m[3]+this.offset.click.top)}if(e.grid){var j=e.grid[1]?this.originalPageY+Math.round((d-this.originalPageY)/e.grid[1])*e.grid[1]:this.originalPageY;d=m?j-this.offset.click.top<m[1]||j-this.offset.click.top>m[3]?j-this.offset.click.top<m[1]?j+e.grid[1]:j-e.grid[1]:j:j;var g=e.grid[0]?this.originalPageX+Math.round((q-this.originalPageX)/e.grid[0])*e.grid[0]:this.originalPageX;q=m?g-this.offset.click.left<m[0]||g-this.offset.click.left>m[2]?g-this.offset.click.left<m[0]?g+e.grid[0]:g-e.grid[0]:g:g}}return{top:d-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(this.cssPosition=="fixed"?-this.scrollParent.scrollTop():h?0:c.scrollTop()),left:q-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(this.cssPosition=="fixed"?-this.scrollParent.scrollLeft():h?0:c.scrollLeft())}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]!=this.element[0]&&!this.cancelHelperRemoval&&this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(c,e,d){return d=d||this._uiHash(),b.ui.plugin.call(this,c,[e,d]),c=="drag"&&(this.positionAbs=this._convertPositionTo("absolute")),b.Widget.prototype._trigger.call(this,c,e,d)},plugins:{},_uiHash:function(c){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),b.ui.plugin.add("draggable","connectToSortable",{start:function(d,g){var f=b(this).data("draggable"),c=f.options,e=b.extend({},g,{item:f.element});f.sortables=[],b(c.connectToSortable).each(function(){var h=b.data(this,"sortable");h&&!h.options.disabled&&(f.sortables.push({instance:h,shouldRevert:h.options.revert}),h.refreshPositions(),h._trigger("activate",d,e))})},stop:function(d,f){var e=b(this).data("draggable"),c=b.extend({},f,{item:e.element});b.each(e.sortables,function(){this.instance.isOver?(this.instance.isOver=0,e.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=!0),this.instance._mouseStop(d),this.instance.options.helper=this.instance.options._helper,e.options.helper=="original"&&this.instance.currentItem.css({top:"auto",left:"auto"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger("deactivate",d,c))})},drag:function(d,g){var f=b(this).data("draggable"),c=this,e=function(v){var k=this.offset.click.top,h=this.offset.click.left,l=this.positionAbs.top,w=this.positionAbs.left,j=v.height,q=v.width,p=v.top,m=v.left;return b.ui.isOver(l+k,w+h,p,m,j,q)};b.each(f.sortables,function(i){var j=!1,h=this;this.instance.positionAbs=f.positionAbs,this.instance.helperProportions=f.helperProportions,this.instance.offset.click=f.offset.click,this.instance._intersectsWith(this.instance.containerCache)&&(j=!0,b.each(f.sortables,function(){return this.instance.positionAbs=f.positionAbs,this.instance.helperProportions=f.helperProportions,this.instance.offset.click=f.offset.click,this!=h&&this.instance._intersectsWith(this.instance.containerCache)&&b.ui.contains(h.instance.element[0],this.instance.element[0])&&(j=!1),j})),j?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=b(c).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return g.helper[0]},d.target=this.instance.currentItem[0],this.instance._mouseCapture(d,!0),this.instance._mouseStart(d,!0,!0),this.instance.offset.click.top=f.offset.click.top,this.instance.offset.click.left=f.offset.click.left,this.instance.offset.parent.left-=f.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=f.offset.parent.top-this.instance.offset.parent.top,f._trigger("toSortable",d),f.dropped=this.instance.element,f.currentItem=f.element,this.instance.fromOutside=f),this.instance.currentItem&&this.instance._mouseDrag(d)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger("out",d,this.instance._uiHash(this.instance)),this.instance._mouseStop(d,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),f._trigger("fromSortable",d),f.dropped=!1)})}}),b.ui.plugin.add("draggable","cursor",{start:function(d,f){var e=b("body"),c=b(this).data("draggable").options;e.css("cursor")&&(c._cursor=e.css("cursor")),e.css("cursor",c.cursor)},stop:function(c,e){var d=b(this).data("draggable").options;d._cursor&&b("body").css("cursor",d._cursor)}}),b.ui.plugin.add("draggable","opacity",{start:function(d,f){var e=b(f.helper),c=b(this).data("draggable").options;e.css("opacity")&&(c._opacity=e.css("opacity")),e.css("opacity",c.opacity)},stop:function(c,e){var d=b(this).data("draggable").options;d._opacity&&b(e.helper).css("opacity",d._opacity)}}),b.ui.plugin.add("draggable","scroll",{start:function(c,e){var d=b(this).data("draggable");d.scrollParent[0]!=document&&d.scrollParent[0].tagName!="HTML"&&(d.overflowOffset=d.scrollParent.offset())},drag:function(d,g){var f=b(this).data("draggable"),c=f.options,e=!1;if(f.scrollParent[0]!=document&&f.scrollParent[0].tagName!="HTML"){if(!c.axis||c.axis!="x"){f.overflowOffset.top+f.scrollParent[0].offsetHeight-d.pageY<c.scrollSensitivity?f.scrollParent[0].scrollTop=e=f.scrollParent[0].scrollTop+c.scrollSpeed:d.pageY-f.overflowOffset.top<c.scrollSensitivity&&(f.scrollParent[0].scrollTop=e=f.scrollParent[0].scrollTop-c.scrollSpeed)}if(!c.axis||c.axis!="y"){f.overflowOffset.left+f.scrollParent[0].offsetWidth-d.pageX<c.scrollSensitivity?f.scrollParent[0].scrollLeft=e=f.scrollParent[0].scrollLeft+c.scrollSpeed:d.pageX-f.overflowOffset.left<c.scrollSensitivity&&(f.scrollParent[0].scrollLeft=e=f.scrollParent[0].scrollLeft-c.scrollSpeed)}}else{if(!c.axis||c.axis!="x"){d.pageY-b(document).scrollTop()<c.scrollSensitivity?e=b(document).scrollTop(b(document).scrollTop()-c.scrollSpeed):b(window).height()-(d.pageY-b(document).scrollTop())<c.scrollSensitivity&&(e=b(document).scrollTop(b(document).scrollTop()+c.scrollSpeed))}if(!c.axis||c.axis!="y"){d.pageX-b(document).scrollLeft()<c.scrollSensitivity?e=b(document).scrollLeft(b(document).scrollLeft()-c.scrollSpeed):b(window).width()-(d.pageX-b(document).scrollLeft())<c.scrollSensitivity&&(e=b(document).scrollLeft(b(document).scrollLeft()+c.scrollSpeed))}}e!==!1&&b.ui.ddmanager&&!c.dropBehaviour&&b.ui.ddmanager.prepareOffsets(f,d)}}),b.ui.plugin.add("draggable","snap",{start:function(d,f){var e=b(this).data("draggable"),c=e.options;e.snapElements=[],b(c.snap.constructor!=String?c.snap.items||":data(draggable)":c.snap).each(function(){var g=b(this),h=g.offset();this!=e.element[0]&&e.snapElements.push({item:this,width:g.outerWidth(),height:g.outerHeight(),top:h.top,left:h.left})})},drag:function(q,B){var x=b(this).data("draggable"),E=x.options,w=E.snapTolerance,A=B.offset.left,k=A+x.helperProportions.width,L=B.offset.top,H=L+x.helperProportions.height;for(var D=x.snapElements.length-1;D>=0;D--){var J=x.snapElements[D].left,F=J+x.snapElements[D].width,z=x.snapElements[D].top,I=z+x.snapElements[D].height;if(!(J-w<A&&A<F+w&&z-w<L&&L<I+w||J-w<A&&A<F+w&&z-w<H&&H<I+w||J-w<k&&k<F+w&&z-w<L&&L<I+w||J-w<k&&k<F+w&&z-w<H&&H<I+w)){x.snapElements[D].snapping&&x.options.snap.release&&x.options.snap.release.call(x.element,q,b.extend(x._uiHash(),{snapItem:x.snapElements[D].item})),x.snapElements[D].snapping=!1;continue}if(E.snapMode!="inner"){var j=Math.abs(z-H)<=w,C=Math.abs(I-L)<=w,G=Math.abs(J-k)<=w,e=Math.abs(F-A)<=w;j&&(B.position.top=x._convertPositionTo("relative",{top:z-x.helperProportions.height,left:0}).top-x.margins.top),C&&(B.position.top=x._convertPositionTo("relative",{top:I,left:0}).top-x.margins.top),G&&(B.position.left=x._convertPositionTo("relative",{top:0,left:J-x.helperProportions.width}).left-x.margins.left),e&&(B.position.left=x._convertPositionTo("relative",{top:0,left:F}).left-x.margins.left)}var K=j||C||G||e;if(E.snapMode!="outer"){var j=Math.abs(z-L)<=w,C=Math.abs(I-H)<=w,G=Math.abs(J-A)<=w,e=Math.abs(F-k)<=w;j&&(B.position.top=x._convertPositionTo("relative",{top:z,left:0}).top-x.margins.top),C&&(B.position.top=x._convertPositionTo("relative",{top:I-x.helperProportions.height,left:0}).top-x.margins.top),G&&(B.position.left=x._convertPositionTo("relative",{top:0,left:J}).left-x.margins.left),e&&(B.position.left=x._convertPositionTo("relative",{top:0,left:F-x.helperProportions.width}).left-x.margins.left)}!x.snapElements[D].snapping&&(j||C||G||e||K)&&x.options.snap.snap&&x.options.snap.snap.call(x.element,q,b.extend(x._uiHash(),{snapItem:x.snapElements[D].item})),x.snapElements[D].snapping=j||C||G||e||K}}}),b.ui.plugin.add("draggable","stack",{start:function(d,g){var f=b(this).data("draggable").options,c=b.makeArray(b(f.stack)).sort(function(h,i){return(parseInt(b(h).css("zIndex"),10)||0)-(parseInt(b(i).css("zIndex"),10)||0)});if(!c.length){return}var e=parseInt(c[0].style.zIndex)||0;b(c).each(function(h){this.style.zIndex=e+h}),this[0].style.zIndex=e+c.length}}),b.ui.plugin.add("draggable","zIndex",{start:function(d,f){var e=b(f.helper),c=b(this).data("draggable").options;e.css("zIndex")&&(c._zIndex=e.css("zIndex")),e.css("zIndex",c.zIndex)},stop:function(c,e){var d=b(this).data("draggable").options;d._zIndex&&b(e.helper).css("zIndex",d._zIndex)}})})(jQuery);(function(b,a){b.widget("ui.droppable",{version:"1.9.2",widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect"},_create:function(){var c=this.options,d=c.accept;this.isover=0,this.isout=1,this.accept=b.isFunction(d)?d:function(f){return f.is(d)},this.proportions={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight},b.ui.ddmanager.droppables[c.scope]=b.ui.ddmanager.droppables[c.scope]||[],b.ui.ddmanager.droppables[c.scope].push(this),c.addClasses&&this.element.addClass("ui-droppable")},_destroy:function(){var c=b.ui.ddmanager.droppables[this.options.scope];for(var d=0;d<c.length;d++){c[d]==this&&c.splice(d,1)}this.element.removeClass("ui-droppable ui-droppable-disabled")},_setOption:function(c,d){c=="accept"&&(this.accept=b.isFunction(d)?d:function(f){return f.is(d)}),b.Widget.prototype._setOption.apply(this,arguments)},_activate:function(c){var d=b.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),d&&this._trigger("activate",c,this.ui(d))},_deactivate:function(c){var d=b.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),d&&this._trigger("deactivate",c,this.ui(d))},_over:function(c){var d=b.ui.ddmanager.current;if(!d||(d.currentItem||d.element)[0]==this.element[0]){return}this.accept.call(this.element[0],d.currentItem||d.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger("over",c,this.ui(d)))},_out:function(c){var d=b.ui.ddmanager.current;if(!d||(d.currentItem||d.element)[0]==this.element[0]){return}this.accept.call(this.element[0],d.currentItem||d.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("out",c,this.ui(d)))},_drop:function(d,f){var e=f||b.ui.ddmanager.current;if(!e||(e.currentItem||e.element)[0]==this.element[0]){return !1}var c=!1;return this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function(){var g=b.data(this,"droppable");if(g.options.greedy&&!g.options.disabled&&g.options.scope==e.options.scope&&g.accept.call(g.element[0],e.currentItem||e.element)&&b.ui.intersect(e,b.extend(g,{offset:g.element.offset()}),g.options.tolerance)){return c=!0,!1}}),c?!1:this.accept.call(this.element[0],e.currentItem||e.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("drop",d,this.ui(e)),this.element):!1},ui:function(c){return{draggable:c.currentItem||c.element,helper:c.helper,position:c.position,offset:c.positionAbs}}}),b.ui.intersect=function(B,k,e){if(!k.offset){return !1}var q=(B.positionAbs||B.position.absolute).left,C=q+B.helperProportions.width,j=(B.positionAbs||B.position.absolute).top,A=j+B.helperProportions.height,z=k.offset.left,w=z+k.proportions.width,m=k.offset.top,y=m+k.proportions.height;switch(e){case"fit":return z<=q&&C<=w&&m<=j&&A<=y;case"intersect":return z<q+B.helperProportions.width/2&&C-B.helperProportions.width/2<w&&m<j+B.helperProportions.height/2&&A-B.helperProportions.height/2<y;case"pointer":var v=(B.positionAbs||B.position.absolute).left+(B.clickOffset||B.offset.click).left,g=(B.positionAbs||B.position.absolute).top+(B.clickOffset||B.offset.click).top,x=b.ui.isOver(g,v,m,z,k.proportions.height,k.proportions.width);return x;case"touch":return(j>=m&&j<=y||A>=m&&A<=y||j<m&&A>y)&&(q>=z&&q<=w||C>=z&&C<=w||q<z&&C>w);default:return !1}},b.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(e,j){var g=b.ui.ddmanager.droppables[e.options.scope]||[],d=j?j.type:null,f=(e.currentItem||e.element).find(":data(droppable)").andSelf();b:for(var h=0;h<g.length;h++){if(g[h].options.disabled||e&&!g[h].accept.call(g[h].element[0],e.currentItem||e.element)){continue}for(var c=0;c<f.length;c++){if(f[c]==g[h].element[0]){g[h].proportions.height=0;continue b}}g[h].visible=g[h].element.css("display")!="none";if(!g[h].visible){continue}d=="mousedown"&&g[h]._activate.call(g[h],j),g[h].offset=g[h].element.offset(),g[h].proportions={width:g[h].element[0].offsetWidth,height:g[h].element[0].offsetHeight}}},drop:function(c,e){var d=!1;return b.each(b.ui.ddmanager.droppables[c.options.scope]||[],function(){if(!this.options){return}!this.options.disabled&&this.visible&&b.ui.intersect(c,this,this.options.tolerance)&&(d=this._drop.call(this,e)||d),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],c.currentItem||c.element)&&(this.isout=1,this.isover=0,this._deactivate.call(this,e))}),d},dragStart:function(c,d){c.element.parentsUntil("body").bind("scroll.droppable",function(){c.options.refreshPositions||b.ui.ddmanager.prepareOffsets(c,d)})},drag:function(c,d){c.options.refreshPositions&&b.ui.ddmanager.prepareOffsets(c,d),b.each(b.ui.ddmanager.droppables[c.options.scope]||[],function(){if(this.options.disabled||this.greedyChild||!this.visible){return}var h=b.ui.intersect(c,this,this.options.tolerance),f=!h&&this.isover==1?"isout":h&&this.isover==0?"isover":null;if(!f){return}var g;if(this.options.greedy){var j=this.options.scope,e=this.element.parents(":data(droppable)").filter(function(){return b.data(this,"droppable").options.scope===j});e.length&&(g=b.data(e[0],"droppable"),g.greedyChild=f=="isover"?1:0)}g&&f=="isover"&&(g.isover=0,g.isout=1,g._out.call(g,d)),this[f]=1,this[f=="isout"?"isover":"isout"]=0,this[f=="isover"?"_over":"_out"].call(this,d),g&&f=="isout"&&(g.isout=0,g.isover=1,g._over.call(g,d))})},dragStop:function(c,d){c.element.parentsUntil("body").unbind("scroll.droppable"),c.options.refreshPositions||b.ui.ddmanager.prepareOffsets(c,d)}}})(jQuery);(function(c,a){c.widget("ui.resizable",c.ui.mouse,{version:"1.9.2",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:1000},_create:function(){var g=this,l=this.options;this.element.addClass("ui-resizable"),c.extend(this,{_aspectRatio:!!l.aspectRatio,aspectRatio:l.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:l.helper||l.ghost||l.animate?l.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(c('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("resizable",this.element.data("resizable")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=l.handles||(c(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se");if(this.handles.constructor==String){this.handles=="all"&&(this.handles="n,e,s,w,se,sw,ne,nw");var j=this.handles.split(",");this.handles={};for(var f=0;f<j.length;f++){var h=c.trim(j[f]),k="ui-resizable-"+h,e=c('<div class="ui-resizable-handle '+k+'"></div>');e.css({zIndex:l.zIndex}),"se"==h&&e.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[h]=".ui-resizable-"+h,this.element.append(e)}}this._renderAxis=function(o){o=o||this.element;for(var u in this.handles){this.handles[u].constructor==String&&(this.handles[u]=c(this.handles[u],this.element).show());if(this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)){var q=c(this.handles[u],this.element),m=0;m=/sw|ne|nw|se|n|s/.test(u)?q.outerHeight():q.outerWidth();var p=["padding",/ne|nw|n/.test(u)?"Top":/se|sw|s/.test(u)?"Bottom":/^e$/.test(u)?"Right":"Left"].join("");o.css(p,m),this._proportionallyResize()}if(!c(this.handles[u]).length){continue}}},this._renderAxis(this.element),this._handles=c(".ui-resizable-handle",this.element).disableSelection(),this._handles.mouseover(function(){if(!g.resizing){if(this.className){var i=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)}g.axis=i&&i[1]?i[1]:"se"}}),l.autoHide&&(this._handles.hide(),c(this.element).addClass("ui-resizable-autohide").mouseenter(function(){if(l.disabled){return}c(this).removeClass("ui-resizable-autohide"),g._handles.show()}).mouseleave(function(){if(l.disabled){return}g.resizing||(c(this).addClass("ui-resizable-autohide"),g._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var e=function(g){c(g).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};if(this.elementIsWrapper){e(this.element);var f=this.element;this.originalElement.css({position:f.css("position"),width:f.outerWidth(),height:f.outerHeight(),top:f.css("top"),left:f.css("left")}).insertAfter(f),f.remove()}return this.originalElement.css("resize",this.originalResizeStyle),e(this.originalElement),this},_mouseCapture:function(e){var g=!1;for(var f in this.handles){c(this.handles[f])[0]==e.target&&(g=!0)}return !this.options.disabled&&g},_mouseStart:function(h){var k=this.options,g=this.element.position(),j=this.element;this.resizing=!0,this.documentScroll={top:c(document).scrollTop(),left:c(document).scrollLeft()},(j.is(".ui-draggable")||/absolute/.test(j.css("position")))&&j.css({position:"absolute",top:g.top,left:g.left}),this._renderProxy();var l=d(this.helper.css("left")),f=d(this.helper.css("top"));k.containment&&(l+=c(k.containment).scrollLeft()||0,f+=c(k.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:l,top:f},this.size=this._helper?{width:j.outerWidth(),height:j.outerHeight()}:{width:j.width(),height:j.height()},this.originalSize=this._helper?{width:j.outerWidth(),height:j.outerHeight()}:{width:j.width(),height:j.height()},this.originalPosition={left:l,top:f},this.sizeDiff={width:j.outerWidth()-j.width(),height:j.outerHeight()-j.height()},this.originalMousePosition={left:h.pageX,top:h.pageY},this.aspectRatio=typeof k.aspectRatio=="number"?k.aspectRatio:this.originalSize.width/this.originalSize.height||1;var e=c(".ui-resizable-"+this.axis).css("cursor");return c("body").css("cursor",e=="auto"?this.axis+"-resize":e),j.addClass("ui-resizable-resizing"),this._propagate("start",h),!0},_mouseDrag:function(q){var x=this.helper,j=this.options,g={},m=this,y=this.originalMousePosition,h=this.axis,w=q.pageX-y.left||0,v=q.pageY-y.top||0,p=this._change[h];if(!p){return !1}var k=p.apply(this,[q,w,v]);this._updateVirtualBoundaries(q.shiftKey);if(this._aspectRatio||q.shiftKey){k=this._updateRatio(k,q)}return k=this._respectSize(k,q),this._propagate("resize",q),x.css({top:this.position.top+"px",left:this.position.left+"px",width:this.size.width+"px",height:this.size.height+"px"}),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),this._updateCache(k),this._trigger("resize",q,this.ui()),!1},_mouseStop:function(v){this.resizing=!1;var h=this.options,e=this;if(this._helper){var k=this._proportionallyResizeElements,w=k.length&&/textarea/i.test(k[0].nodeName),g=w&&c.ui.hasScroll(k[0],"left")?0:e.sizeDiff.height,q=w?0:e.sizeDiff.width,p={width:e.helper.width()-q,height:e.helper.height()-g},m=parseInt(e.element.css("left"),10)+(e.position.left-e.originalPosition.left)||null,j=parseInt(e.element.css("top"),10)+(e.position.top-e.originalPosition.top)||null;h.animate||this.element.css(c.extend(p,{top:j,left:m})),e.helper.height(e.size.height),e.helper.width(e.size.width),this._helper&&!h.animate&&this._proportionallyResize()}return c("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",v),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(k){var h=this.options,m,g,j,l,f;f={minWidth:b(h.minWidth)?h.minWidth:0,maxWidth:b(h.maxWidth)?h.maxWidth:Infinity,minHeight:b(h.minHeight)?h.minHeight:0,maxHeight:b(h.maxHeight)?h.maxHeight:Infinity};if(this._aspectRatio||k){m=f.minHeight*this.aspectRatio,j=f.minWidth/this.aspectRatio,g=f.maxHeight*this.aspectRatio,l=f.maxWidth/this.aspectRatio,m>f.minWidth&&(f.minWidth=m),j>f.minHeight&&(f.minHeight=j),g<f.maxWidth&&(f.maxWidth=g),l<f.maxHeight&&(f.maxHeight=l)}this._vBoundaries=f},_updateCache:function(g){var f=this.options;this.offset=this.helper.offset(),b(g.left)&&(this.position.left=g.left),b(g.top)&&(this.position.top=g.top),b(g.height)&&(this.size.height=g.height),b(g.width)&&(this.size.width=g.width)},_updateRatio:function(j,g){var l=this.options,f=this.position,h=this.size,k=this.axis;return b(j.height)?j.width=j.height*this.aspectRatio:b(j.width)&&(j.height=j.width/this.aspectRatio),k=="sw"&&(j.left=f.left+(h.width-j.width),j.top=null),k=="nw"&&(j.top=f.top+(h.height-j.height),j.left=f.left+(h.width-j.width)),j},_respectSize:function(x,D){var k=this.helper,q=this._vBoundaries,E=this._aspectRatio||D.shiftKey,j=this.axis,C=b(x.width)&&q.maxWidth&&q.maxWidth<x.width,A=b(x.height)&&q.maxHeight&&q.maxHeight<x.height,w=b(x.width)&&q.minWidth&&q.minWidth>x.width,m=b(x.height)&&q.minHeight&&q.minHeight>x.height;w&&(x.width=q.minWidth),m&&(x.height=q.minHeight),C&&(x.width=q.maxWidth),A&&(x.height=q.maxHeight);var z=this.originalPosition.left+this.originalSize.width,r=this.position.top+this.size.height,g=/sw|nw|w/.test(j),y=/nw|ne|n/.test(j);w&&g&&(x.left=z-q.minWidth),C&&g&&(x.left=z-q.maxWidth),m&&y&&(x.top=r-q.minHeight),A&&y&&(x.top=r-q.maxHeight);var B=!x.width&&!x.height;return B&&!x.left&&x.top?x.top=null:B&&!x.top&&x.left&&(x.left=null),x},_proportionallyResize:function(){var f=this.options;if(!this._proportionallyResizeElements.length){return}var k=this.helper||this.element;for(var h=0;h<this._proportionallyResizeElements.length;h++){var e=this._proportionallyResizeElements[h];if(!this.borderDif){var g=[e.css("borderTopWidth"),e.css("borderRightWidth"),e.css("borderBottomWidth"),e.css("borderLeftWidth")],j=[e.css("paddingTop"),e.css("paddingRight"),e.css("paddingBottom"),e.css("paddingLeft")];this.borderDif=c.map(g,function(m,i){var o=parseInt(m,10)||0,l=parseInt(j[i],10)||0;return o+l})}e.css({height:k.height()-this.borderDif[0]-this.borderDif[2]||0,width:k.width()-this.borderDif[1]-this.borderDif[3]||0})}},_renderProxy:function(){var f=this.element,h=this.options;this.elementOffset=f.offset();if(this._helper){this.helper=this.helper||c('<div style="overflow:hidden;"></div>');var g=c.ui.ie6?1:0,e=c.ui.ie6?2:-1;this.helper.addClass(this._helper).css({width:this.element.outerWidth()+e,height:this.element.outerHeight()+e,position:"absolute",left:this.elementOffset.left-g+"px",top:this.elementOffset.top-g+"px",zIndex:++h.zIndex}),this.helper.appendTo("body").disableSelection()}else{this.helper=this.element}},_change:{e:function(g,f,h){return{width:this.originalSize.width+f}},w:function(k,g,l){var j=this.options,f=this.originalSize,h=this.originalPosition;return{left:h.left+g,width:f.width-g}},n:function(k,g,l){var j=this.options,f=this.originalSize,h=this.originalPosition;return{top:h.top+l,height:f.height-l}},s:function(g,f,h){return{height:this.originalSize.height+h}},se:function(e,g,f){return c.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,g,f]))},sw:function(e,g,f){return c.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,g,f]))},ne:function(e,g,f){return c.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,g,f]))},nw:function(e,g,f){return c.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,g,f]))}},_propagate:function(e,f){c.ui.plugin.call(this,e,[f,this.ui()]),e!="resize"&&this._trigger(e,f,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),c.ui.plugin.add("resizable","alsoResize",{start:function(f,j){var h=c(this).data("resizable"),e=h.options,g=function(i){c(i).each(function(){var k=c(this);k.data("resizable-alsoresize",{width:parseInt(k.width(),10),height:parseInt(k.height(),10),left:parseInt(k.css("left"),10),top:parseInt(k.css("top"),10)})})};typeof e.alsoResize=="object"&&!e.alsoResize.parentNode?e.alsoResize.length?(e.alsoResize=e.alsoResize[0],g(e.alsoResize)):c.each(e.alsoResize,function(i){g(i)}):g(e.alsoResize)},resize:function(h,m){var k=c(this).data("resizable"),g=k.options,j=k.originalSize,l=k.originalPosition,f={height:k.size.height-j.height||0,width:k.size.width-j.width||0,top:k.position.top-l.top||0,left:k.position.left-l.left||0},e=function(i,n){c(i).each(function(){var q=c(this),p=c(this).data("resizable-alsoresize"),r={},u=n&&n.length?n:q.parents(m.originalElement[0]).length?["width","height"]:["width","height","top","left"];c.each(u,function(s,o){var v=(p[o]||0)+(f[o]||0);v&&v>=0&&(r[o]=v||null)}),q.css(r)})};typeof g.alsoResize=="object"&&!g.alsoResize.nodeType?c.each(g.alsoResize,function(n,i){e(n,i)}):e(g.alsoResize)},stop:function(e,f){c(this).removeData("resizable-alsoresize")}}),c.ui.plugin.add("resizable","animate",{stop:function(w,h){var e=c(this).data("resizable"),k=e.options,x=e._proportionallyResizeElements,g=x.length&&/textarea/i.test(x[0].nodeName),v=g&&c.ui.hasScroll(x[0],"left")?0:e.sizeDiff.height,q=g?0:e.sizeDiff.width,m={width:e.size.width-q,height:e.size.height-v},j=parseInt(e.element.css("left"),10)+(e.position.left-e.originalPosition.left)||null,p=parseInt(e.element.css("top"),10)+(e.position.top-e.originalPosition.top)||null;e.element.animate(c.extend(m,p&&j?{top:p,left:j}:{}),{duration:k.animateDuration,easing:k.animateEasing,step:function(){var f={width:parseInt(e.element.css("width"),10),height:parseInt(e.element.css("height"),10),top:parseInt(e.element.css("top"),10),left:parseInt(e.element.css("left"),10)};x&&x.length&&c(x[0]).css({width:f.width,height:f.height}),e._updateCache(f),e._propagate("resize",w)}})}}),c.ui.plugin.add("resizable","containment",{start:function(B,e){var m=c(this).data("resizable"),C=m.options,j=m.element,A=C.containment,y=A instanceof c?A.get(0):/parent/.test(A)?j.parent().get(0):A;if(!y){return}m.containerElement=c(y);if(/document/.test(A)||A==document){m.containerOffset={left:0,top:0},m.containerPosition={left:0,top:0},m.parentData={element:c(document),left:0,top:0,width:c(document).width(),height:c(document).height()||document.body.parentNode.scrollHeight}}else{var q=c(y),k=[];c(["Top","Right","Left","Bottom"]).each(function(h,f){k[h]=d(q.css("padding"+f))}),m.containerOffset=q.offset(),m.containerPosition=q.position(),m.containerSize={height:q.innerHeight()-k[3],width:q.innerWidth()-k[1]};var x=m.containerOffset,n=m.containerSize.height,g=m.containerSize.width,w=c.ui.hasScroll(y,"left")?y.scrollWidth:g,z=c.ui.hasScroll(y)?y.scrollHeight:n;m.parentData={element:y,left:x.left,top:x.top,width:w,height:z}}},resize:function(D,k){var e=c(this).data("resizable"),q=e.options,E=e.containerSize,j=e.containerOffset,C=e.size,A=e.position,x=e._aspectRatio||D.shiftKey,m={top:0,left:0},z=e.containerElement;z[0]!=document&&/static/.test(z.css("position"))&&(m=j),A.left<(e._helper?j.left:0)&&(e.size.width=e.size.width+(e._helper?e.position.left-j.left:e.position.left-m.left),x&&(e.size.height=e.size.width/e.aspectRatio),e.position.left=q.helper?j.left:0),A.top<(e._helper?j.top:0)&&(e.size.height=e.size.height+(e._helper?e.position.top-j.top:e.position.top),x&&(e.size.width=e.size.height*e.aspectRatio),e.position.top=e._helper?j.top:0),e.offset.left=e.parentData.left+e.position.left,e.offset.top=e.parentData.top+e.position.top;var w=Math.abs((e._helper?e.offset.left-m.left:e.offset.left-m.left)+e.sizeDiff.width),g=Math.abs((e._helper?e.offset.top-m.top:e.offset.top-j.top)+e.sizeDiff.height),y=e.containerElement.get(0)==e.element.parent().get(0),B=/relative|absolute/.test(e.containerElement.css("position"));y&&B&&(w-=e.parentData.left),w+e.size.width>=e.parentData.width&&(e.size.width=e.parentData.width-w,x&&(e.size.height=e.size.width/e.aspectRatio)),g+e.size.height>=e.parentData.height&&(e.size.height=e.parentData.height-g,x&&(e.size.width=e.size.height*e.aspectRatio))},stop:function(y,j){var e=c(this).data("resizable"),m=e.options,z=e.position,g=e.containerOffset,x=e.containerPosition,w=e.containerElement,q=c(e.helper),k=q.offset(),v=q.outerWidth()-e.sizeDiff.width,p=q.outerHeight()-e.sizeDiff.height;e._helper&&!m.animate&&/relative/.test(w.css("position"))&&c(this).css({left:k.left-x.left-g.left,width:v,height:p}),e._helper&&!m.animate&&/static/.test(w.css("position"))&&c(this).css({left:k.left-x.left-g.left,width:v,height:p})}}),c.ui.plugin.add("resizable","ghost",{start:function(f,j){var h=c(this).data("resizable"),e=h.options,g=h.size;h.ghost=h.originalElement.clone(),h.ghost.css({opacity:0.25,display:"block",position:"relative",height:g.height,width:g.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass(typeof e.ghost=="string"?e.ghost:""),h.ghost.appendTo(h.helper)},resize:function(f,h){var g=c(this).data("resizable"),e=g.options;g.ghost&&g.ghost.css({position:"relative",height:g.size.height,width:g.size.width})},stop:function(f,h){var g=c(this).data("resizable"),e=g.options;g.ghost&&g.helper&&g.helper.get(0).removeChild(g.ghost.get(0))}}),c.ui.plugin.add("resizable","grid",{resize:function(w,h){var e=c(this).data("resizable"),k=e.options,x=e.size,g=e.originalSize,v=e.originalPosition,q=e.axis,m=k._aspectRatio||w.shiftKey;k.grid=typeof k.grid=="number"?[k.grid,k.grid]:k.grid;var j=Math.round((x.width-g.width)/(k.grid[0]||1))*(k.grid[0]||1),p=Math.round((x.height-g.height)/(k.grid[1]||1))*(k.grid[1]||1);/^(se|s|e)$/.test(q)?(e.size.width=g.width+j,e.size.height=g.height+p):/^(ne)$/.test(q)?(e.size.width=g.width+j,e.size.height=g.height+p,e.position.top=v.top-p):/^(sw)$/.test(q)?(e.size.width=g.width+j,e.size.height=g.height+p,e.position.left=v.left-j):(e.size.width=g.width+j,e.size.height=g.height+p,e.position.top=v.top-p,e.position.left=v.left-j)}});var d=function(f){return parseInt(f,10)||0},b=function(f){return !isNaN(parseInt(f,10))}})(jQuery);(function(b,a){var c=0;b.widget("ui.autocomplete",{version:"1.9.2",defaultElement:"<input>",options:{appendTo:"body",autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},pending:0,_create:function(){var d,f,e;this.isMultiLine=this._isMultiLine(),this.valueMethod=this.element[this.element.is("input,textarea")?"val":"text"],this.isNewMenu=!0,this.element.addClass("ui-autocomplete-input").attr("autocomplete","off"),this._on(this.element,{keydown:function(g){if(this.element.prop("readOnly")){d=!0,e=!0,f=!0;return}d=!1,e=!1,f=!1;var h=b.ui.keyCode;switch(g.keyCode){case h.PAGE_UP:d=!0,this._move("previousPage",g);break;case h.PAGE_DOWN:d=!0,this._move("nextPage",g);break;case h.UP:d=!0,this._keyEvent("previous",g);break;case h.DOWN:d=!0,this._keyEvent("next",g);break;case h.ENTER:case h.NUMPAD_ENTER:this.menu.active&&(d=!0,g.preventDefault(),this.menu.select(g));break;case h.TAB:this.menu.active&&this.menu.select(g);break;case h.ESCAPE:this.menu.element.is(":visible")&&(this._value(this.term),this.close(g),g.preventDefault());break;default:f=!0,this._searchTimeout(g)}},keypress:function(h){if(d){d=!1,h.preventDefault();return}if(f){return}var g=b.ui.keyCode;switch(h.keyCode){case g.PAGE_UP:this._move("previousPage",h);break;case g.PAGE_DOWN:this._move("nextPage",h);break;case g.UP:this._keyEvent("previous",h);break;case g.DOWN:this._keyEvent("next",h)}},input:function(g){if(e){e=!1,g.preventDefault();return}this._searchTimeout(g)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(g){if(this.cancelBlur){delete this.cancelBlur;return}clearTimeout(this.searching),this.close(g),this._change(g)}}),this._initSource(),this.menu=b("<ul>").addClass("ui-autocomplete").appendTo(this.document.find(this.options.appendTo||"body")[0]).menu({input:b(),role:null}).zIndex(this.element.zIndex()+1).hide().data("menu"),this._on(this.menu.element,{mousedown:function(g){g.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var h=this.menu.element[0];b(g.target).closest(".ui-menu-item").length||this._delay(function(){var i=this;this.document.one("mousedown",function(j){j.target!==i.element[0]&&j.target!==h&&!b.contains(h,j.target)&&i.close()})})},menufocus:function(g,i){if(this.isNewMenu){this.isNewMenu=!1;if(g.originalEvent&&/^mouse/.test(g.originalEvent.type)){this.menu.blur(),this.document.one("mousemove",function(){b(g.target).trigger(g.originalEvent)});return}}var h=i.item.data("ui-autocomplete-item")||i.item.data("item.autocomplete");!1!==this._trigger("focus",g,{item:h})?g.originalEvent&&/^key/.test(g.originalEvent.type)&&this._value(h.value):this.liveRegion.text(h.value)},menuselect:function(i,g){var j=g.item.data("ui-autocomplete-item")||g.item.data("item.autocomplete"),h=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=h,this._delay(function(){this.previous=h,this.selectedItem=j})),!1!==this._trigger("select",i,{item:j})&&this._value(j.value),this.term=this._value(),this.close(i),this.selectedItem=j}}),this.liveRegion=b("<span>",{role:"status","aria-live":"polite"}).addClass("ui-helper-hidden-accessible").insertAfter(this.element),b.fn.bgiframe&&this.menu.element.bgiframe(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(f,d){this._super(f,d),f==="source"&&this._initSource(),f==="appendTo"&&this.menu.element.appendTo(this.document.find(d||"body")[0]),f==="disabled"&&d&&this.xhr&&this.xhr.abort()},_isMultiLine:function(){return this.element.is("textarea")?!0:this.element.is("input")?!1:this.element.prop("isContentEditable")},_initSource:function(){var d,f,e=this;b.isArray(this.options.source)?(d=this.options.source,this.source=function(h,g){g(b.ui.autocomplete.filter(d,h.term))}):typeof this.options.source=="string"?(f=this.options.source,this.source=function(h,g){e.xhr&&e.xhr.abort(),e.xhr=b.ajax({url:f,data:h,dataType:"json",success:function(i){g(i)},error:function(){g([])}})}):this.source=this.options.source},_searchTimeout:function(d){clearTimeout(this.searching),this.searching=this._delay(function(){this.term!==this._value()&&(this.selectedItem=null,this.search(null,d))},this.options.delay)},search:function(f,d){f=f!=null?f:this._value(),this.term=this._value();if(f.length<this.options.minLength){return this.close(d)}if(this._trigger("search",d)===!1){return}return this._search(f)},_search:function(d){this.pending++,this.element.addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:d},this._response())},_response:function(){var f=this,d=++c;return function(e){d===c&&f.__response(e),f.pending--,f.pending||f.element.removeClass("ui-autocomplete-loading")}},__response:function(d){d&&(d=this._normalize(d)),this._trigger("response",null,{content:d}),!this.options.disabled&&d&&d.length&&!this.cancelSearch?(this._suggest(d),this._trigger("open")):this._close()},close:function(d){this.cancelSearch=!0,this._close(d)},_close:function(d){this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",d))},_change:function(d){this.previous!==this._value()&&this._trigger("change",d,{item:this.selectedItem})},_normalize:function(d){return d.length&&d[0].label&&d[0].value?d:b.map(d,function(e){return typeof e=="string"?{label:e,value:e}:b.extend({label:e.label||e.value,value:e.value||e.label},e)})},_suggest:function(d){var e=this.menu.element.empty().zIndex(this.element.zIndex()+1);this._renderMenu(e,d),this.menu.refresh(),e.show(),this._resizeMenu(),e.position(b.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var d=this.menu.element;d.outerWidth(Math.max(d.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(d,f){var e=this;b.each(f,function(g,h){e._renderItemData(d,h)})},_renderItemData:function(f,d){return this._renderItem(f,d).data("ui-autocomplete-item",d)},_renderItem:function(d,e){return b("<li>").append(b("<a>").text(e.label)).appendTo(d)},_move:function(f,d){if(!this.menu.element.is(":visible")){this.search(null,d);return}if(this.menu.isFirstItem()&&/^previous/.test(f)||this.menu.isLastItem()&&/^next/.test(f)){this._value(this.term),this.menu.blur();return}this.menu[f](d)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(f,d){if(!this.isMultiLine||this.menu.element.is(":visible")){this._move(f,d),d.preventDefault()}}}),b.extend(b.ui.autocomplete,{escapeRegex:function(d){return d.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(d,f){var e=new RegExp(b.ui.autocomplete.escapeRegex(f),"i");return b.grep(d,function(g){return e.test(g.label||g.value||g)})}}),b.widget("ui.autocomplete",b.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(d){return d+(d>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(f){var d;this._superApply(arguments);if(this.options.disabled||this.cancelSearch){return}f&&f.length?d=this.options.messages.results(f.length):d=this.options.messages.noResults,this.liveRegion.text(d)}})})(jQuery);(function(k,q){var d,b,h,v,c="ui-button ui-widget ui-state-default ui-corner-all",p="ui-state-hover ui-state-active ",m="ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",j=function(){var a=k(this).find(":ui-button");setTimeout(function(){a.button("refresh")},1)},g=function(e){var l=e.name,f=e.form,a=k([]);return l&&(f?a=k(f).find("[name='"+l+"']"):a=k("[name='"+l+"']",e.ownerDocument).filter(function(){return !this.form})),a};k.widget("ui.button",{version:"1.9.2",defaultElement:"<button>",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset"+this.eventNamespace).bind("reset"+this.eventNamespace,j),typeof this.options.disabled!="boolean"?this.options.disabled=!!this.element.prop("disabled"):this.element.prop("disabled",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr("title");var i=this,f=this.options,e=this.type==="checkbox"||this.type==="radio",n=e?"":"ui-state-active",l="ui-state-focus";f.label===null&&(f.label=this.type==="input"?this.buttonElement.val():this.buttonElement.html()),this._hoverable(this.buttonElement),this.buttonElement.addClass(c).attr("role","button").bind("mouseenter"+this.eventNamespace,function(){if(f.disabled){return}this===d&&k(this).addClass("ui-state-active")}).bind("mouseleave"+this.eventNamespace,function(){if(f.disabled){return}k(this).removeClass(n)}).bind("click"+this.eventNamespace,function(a){f.disabled&&(a.preventDefault(),a.stopImmediatePropagation())}),this.element.bind("focus"+this.eventNamespace,function(){i.buttonElement.addClass(l)}).bind("blur"+this.eventNamespace,function(){i.buttonElement.removeClass(l)}),e&&(this.element.bind("change"+this.eventNamespace,function(){if(v){return}i.refresh()}),this.buttonElement.bind("mousedown"+this.eventNamespace,function(a){if(f.disabled){return}v=!1,b=a.pageX,h=a.pageY}).bind("mouseup"+this.eventNamespace,function(a){if(f.disabled){return}if(b!==a.pageX||h!==a.pageY){v=!0}})),this.type==="checkbox"?this.buttonElement.bind("click"+this.eventNamespace,function(){if(f.disabled||v){return !1}k(this).toggleClass("ui-state-active"),i.buttonElement.attr("aria-pressed",i.element[0].checked)}):this.type==="radio"?this.buttonElement.bind("click"+this.eventNamespace,function(){if(f.disabled||v){return !1}k(this).addClass("ui-state-active"),i.buttonElement.attr("aria-pressed","true");var a=i.element[0];g(a).not(a).map(function(){return k(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")}):(this.buttonElement.bind("mousedown"+this.eventNamespace,function(){if(f.disabled){return !1}k(this).addClass("ui-state-active"),d=this,i.document.one("mouseup",function(){d=null})}).bind("mouseup"+this.eventNamespace,function(){if(f.disabled){return !1}k(this).removeClass("ui-state-active")}).bind("keydown"+this.eventNamespace,function(a){if(f.disabled){return !1}(a.keyCode===k.ui.keyCode.SPACE||a.keyCode===k.ui.keyCode.ENTER)&&k(this).addClass("ui-state-active")}).bind("keyup"+this.eventNamespace,function(){k(this).removeClass("ui-state-active")}),this.buttonElement.is("a")&&this.buttonElement.keyup(function(a){a.keyCode===k.ui.keyCode.SPACE&&k(this).click()})),this._setOption("disabled",f.disabled),this._resetButton()},_determineButtonType:function(){var f,a,i;this.element.is("[type=checkbox]")?this.type="checkbox":this.element.is("[type=radio]")?this.type="radio":this.element.is("input")?this.type="input":this.type="button",this.type==="checkbox"||this.type==="radio"?(f=this.element.parents().last(),a="label[for='"+this.element.attr("id")+"']",this.buttonElement=f.find(a),this.buttonElement.length||(f=f.length?f.siblings():this.element.siblings(),this.buttonElement=f.filter(a),this.buttonElement.length||(this.buttonElement=f.find(a))),this.element.addClass("ui-helper-hidden-accessible"),i=this.element.is(":checked"),i&&this.buttonElement.addClass("ui-state-active"),this.buttonElement.prop("aria-pressed",i)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass("ui-helper-hidden-accessible"),this.buttonElement.removeClass(c+" "+p+" "+m).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),this.hasTitle||this.buttonElement.removeAttr("title")},_setOption:function(f,a){this._super(f,a);if(f==="disabled"){a?this.element.prop("disabled",!0):this.element.prop("disabled",!1);return}this._resetButton()},refresh:function(){var a=this.element.is("input, button")?this.element.is(":disabled"):this.element.hasClass("ui-button-disabled");a!==this.options.disabled&&this._setOption("disabled",a),this.type==="radio"?g(this.element[0]).each(function(){k(this).is(":checked")?k(this).button("widget").addClass("ui-state-active").attr("aria-pressed","true"):k(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}):this.type==="checkbox"&&(this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false"))},_resetButton:function(){if(this.type==="input"){this.options.label&&this.element.val(this.options.label);return}var e=this.buttonElement.removeClass(m),o=k("<span></span>",this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(e.empty()).text(),l=this.options.icons,a=l.primary&&l.secondary,f=[];l.primary||l.secondary?(this.options.text&&f.push("ui-button-text-icon"+(a?"s":l.primary?"-primary":"-secondary")),l.primary&&e.prepend("<span class='ui-button-icon-primary ui-icon "+l.primary+"'></span>"),l.secondary&&e.append("<span class='ui-button-icon-secondary ui-icon "+l.secondary+"'></span>"),this.options.text||(f.push(a?"ui-button-icons-only":"ui-button-icon-only"),this.hasTitle||e.attr("title",k.trim(o)))):f.push("ui-button-text-only"),e.addClass(f.join(" "))}}),k.widget("ui.buttonset",{version:"1.9.2",options:{items:"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(f,a){f==="disabled"&&this.buttons.button("option",f,a),this._super(f,a)},refresh:function(){var a=this.element.css("direction")==="rtl";this.buttons=this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function(){return k(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(a?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(a?"ui-corner-left":"ui-corner-right").end().end()},_destroy:function(){this.element.removeClass("ui-buttonset"),this.buttons.map(function(){return k(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy")}})})(jQuery);(function(d,b){var f="ui-dialog ui-widget ui-widget-content ui-corner-all ",c={buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},a={maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0};d.widget("ui.dialog",{version:"1.9.2",options:{autoOpen:!0,buttons:{},closeOnEscape:!0,closeText:"close",dialogClass:"",draggable:!0,hide:null,height:"auto",maxHeight:!1,maxWidth:!1,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(e){var g=d(this).css(e).offset().top;g<0&&d(this).css("top",e.top-g)}},resizable:!0,show:null,stack:!0,title:"",width:300,zIndex:1000},_create:function(){this.originalTitle=this.element.attr("title"),typeof this.originalTitle!="string"&&(this.originalTitle=""),this.oldPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.options.title=this.options.title||this.originalTitle;var j=this,l=this.options,h=l.title||"&#160;",k,n,g,e,m;k=(this.uiDialog=d("<div>")).addClass(f+l.dialogClass).css({display:"none",outline:0,zIndex:l.zIndex}).attr("tabIndex",-1).keydown(function(i){l.closeOnEscape&&!i.isDefaultPrevented()&&i.keyCode&&i.keyCode===d.ui.keyCode.ESCAPE&&(j.close(i),i.preventDefault())}).mousedown(function(i){j.moveToTop(!1,i)}).appendTo("body"),this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(k),n=(this.uiDialogTitlebar=d("<div>")).addClass("ui-dialog-titlebar  ui-widget-header  ui-corner-all  ui-helper-clearfix").bind("mousedown",function(){k.focus()}).prependTo(k),g=d("<a href='#'></a>").addClass("ui-dialog-titlebar-close  ui-corner-all").attr("role","button").click(function(i){i.preventDefault(),j.close(i)}).appendTo(n),(this.uiDialogTitlebarCloseText=d("<span>")).addClass("ui-icon ui-icon-closethick").text(l.closeText).appendTo(g),e=d("<span>").uniqueId().addClass("ui-dialog-title").html(h).prependTo(n),m=(this.uiDialogButtonPane=d("<div>")).addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),(this.uiButtonSet=d("<div>")).addClass("ui-dialog-buttonset").appendTo(m),k.attr({role:"dialog","aria-labelledby":e.attr("id")}),n.find("*").add(n).disableSelection(),this._hoverable(g),this._focusable(g),l.draggable&&d.fn.draggable&&this._makeDraggable(),l.resizable&&d.fn.resizable&&this._makeResizable(),this._createButtons(l.buttons),this._isOpen=!1,d.fn.bgiframe&&k.bgiframe(),this._on(k,{keydown:function(q){if(!l.modal||q.keyCode!==d.ui.keyCode.TAB){return}var s=d(":tabbable",k),p=s.filter(":first"),r=s.filter(":last");if(q.target===r[0]&&!q.shiftKey){return p.focus(1),!1}if(q.target===p[0]&&q.shiftKey){return r.focus(1),!1}}})},_init:function(){this.options.autoOpen&&this.open()},_destroy:function(){var h,g=this.oldPosition;this.overlay&&this.overlay.destroy(),this.uiDialog.hide(),this.element.removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body"),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),h=g.parent.children().eq(g.index),h.length&&h[0]!==this.element[0]?h.before(this.element):g.parent.append(this.element)},widget:function(){return this.uiDialog},close:function(g){var j=this,h,e;if(!this._isOpen){return}if(!1===this._trigger("beforeClose",g)){return}return this._isOpen=!1,this.overlay&&this.overlay.destroy(),this.options.hide?this._hide(this.uiDialog,this.options.hide,function(){j._trigger("close",g)}):(this.uiDialog.hide(),this._trigger("close",g)),d.ui.dialog.overlay.resize(),this.options.modal&&(h=0,d(".ui-dialog").each(function(){this!==j.uiDialog[0]&&(e=d(this).css("z-index"),isNaN(e)||(h=Math.max(h,e)))}),d.ui.dialog.maxZ=h),this},isOpen:function(){return this._isOpen},moveToTop:function(g,j){var h=this.options,e;return h.modal&&!g||!h.stack&&!h.modal?this._trigger("focus",j):(h.zIndex>d.ui.dialog.maxZ&&(d.ui.dialog.maxZ=h.zIndex),this.overlay&&(d.ui.dialog.maxZ+=1,d.ui.dialog.overlay.maxZ=d.ui.dialog.maxZ,this.overlay.$el.css("z-index",d.ui.dialog.overlay.maxZ)),e={scrollTop:this.element.scrollTop(),scrollLeft:this.element.scrollLeft()},d.ui.dialog.maxZ+=1,this.uiDialog.css("z-index",d.ui.dialog.maxZ),this.element.attr(e),this._trigger("focus",j),this)},open:function(){if(this._isOpen){return}var e,h=this.options,g=this.uiDialog;return this._size(),this._position(h.position),g.show(h.show),this.overlay=h.modal?new d.ui.dialog.overlay(this):null,this.moveToTop(!0),e=this.element.find(":tabbable"),e.length||(e=this.uiDialogButtonPane.find(":tabbable"),e.length||(e=g)),e.eq(0).focus(),this._isOpen=!0,this._trigger("open"),this},_createButtons:function(e){var h=this,g=!1;this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),typeof e=="object"&&e!==null&&d.each(e,function(){return !(g=!0)}),g?(d.each(e,function(k,m){var j,l;m=d.isFunction(m)?{click:m,text:k}:m,m=d.extend({type:"button"},m),l=m.click,m.click=function(){l.apply(h.element[0],arguments)},j=d("<button></button>",m).appendTo(h.uiButtonSet),d.fn.button&&j.button()}),this.uiDialog.addClass("ui-dialog-buttons"),this.uiDialogButtonPane.appendTo(this.uiDialog)):this.uiDialog.removeClass("ui-dialog-buttons")},_makeDraggable:function(){function g(i){return{position:i.position,offset:i.offset}}var e=this,h=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(k,j){d(this).addClass("ui-dialog-dragging"),e._trigger("dragStart",k,g(j))},drag:function(i,j){e._trigger("drag",i,g(j))},stop:function(j,k){h.position=[k.position.left-e.document.scrollLeft(),k.position.top-e.document.scrollTop()],d(this).removeClass("ui-dialog-dragging"),e._trigger("dragStop",j,g(k)),d.ui.dialog.overlay.resize()}})},_makeResizable:function(l){function e(i){return{originalPosition:i.originalPosition,originalSize:i.originalSize,position:i.position,size:i.size}}l=l===b?this.options.resizable:l;var j=this,g=this.options,h=this.uiDialog.css("position"),k=typeof l=="string"?l:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:g.maxWidth,maxHeight:g.maxHeight,minWidth:g.minWidth,minHeight:this._minHeight(),handles:k,start:function(i,m){d(this).addClass("ui-dialog-resizing"),j._trigger("resizeStart",i,e(m))},resize:function(m,i){j._trigger("resize",m,e(i))},stop:function(i,m){d(this).removeClass("ui-dialog-resizing"),g.height=d(this).height(),g.width=d(this).width(),j._trigger("resizeStop",i,e(m)),d.ui.dialog.overlay.resize()}}).css("position",h).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")},_minHeight:function(){var g=this.options;return g.height==="auto"?g.minHeight:Math.min(g.minHeight,g.height)},_position:function(g){var j=[],h=[0,0],e;if(g){if(typeof g=="string"||typeof g=="object"&&"0" in g){j=g.split?g.split(" "):[g[0],g[1]],j.length===1&&(j[1]=j[0]),d.each(["left","top"],function(k,i){+j[k]===j[k]&&(h[k]=j[k],j[k]=i)}),g={my:j[0]+(h[0]<0?h[0]:"+"+h[0])+" "+j[1]+(h[1]<0?h[1]:"+"+h[1]),at:j.join(" ")}}g=d.extend({},d.ui.dialog.prototype.options.position,g)}else{g=d.ui.dialog.prototype.options.position}e=this.uiDialog.is(":visible"),e||this.uiDialog.show(),this.uiDialog.position(g),e||this.uiDialog.hide()},_setOptions:function(e){var i=this,g={},h=!1;d.each(e,function(k,j){i._setOption(k,j),k in c&&(h=!0),k in a&&(g[k]=j)}),h&&this._size(),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option",g)},_setOption:function(g,j){var e,h,k=this.uiDialog;switch(g){case"buttons":this._createButtons(j);break;case"closeText":this.uiDialogTitlebarCloseText.text(""+j);break;case"dialogClass":k.removeClass(this.options.dialogClass).addClass(f+j);break;case"disabled":j?k.addClass("ui-dialog-disabled"):k.removeClass("ui-dialog-disabled");break;case"draggable":e=k.is(":data(draggable)"),e&&!j&&k.draggable("destroy"),!e&&j&&this._makeDraggable();break;case"position":this._position(j);break;case"resizable":h=k.is(":data(resizable)"),h&&!j&&k.resizable("destroy"),h&&typeof j=="string"&&k.resizable("option","handles",j),!h&&j!==!1&&this._makeResizable(j);break;case"title":d(".ui-dialog-title",this.uiDialogTitlebar).html(""+(j||"&#160;"))}this._super(g,j)},_size:function(){var g,k,j,e=this.options,h=this.uiDialog.is(":visible");this.element.show().css({width:"auto",minHeight:0,height:0}),e.minWidth>e.width&&(e.width=e.minWidth),g=this.uiDialog.css({height:"auto",width:e.width}).outerHeight(),k=Math.max(0,e.minHeight-g),e.height==="auto"?d.support.minHeight?this.element.css({minHeight:k,height:"auto"}):(this.uiDialog.show(),j=this.element.css("height","auto").height(),h||this.uiDialog.hide(),this.element.height(Math.max(j,k))):this.element.height(Math.max(e.height-g,0)),this.uiDialog.is(":data(resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())}}),d.extend(d.ui.dialog,{uuid:0,maxZ:0,getTitleId:function(h){var g=h.attr("id");return g||(this.uuid+=1,g=this.uuid),"ui-dialog-title-"+g},overlay:function(e){this.$el=d.ui.dialog.overlay.create(e)}}),d.extend(d.ui.dialog.overlay,{instances:[],oldInstances:[],maxZ:0,events:d.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),function(g){return g+".dialog-overlay"}).join(" "),create:function(e){this.instances.length===0&&(setTimeout(function(){d.ui.dialog.overlay.instances.length&&d(document).bind(d.ui.dialog.overlay.events,function(h){if(d(h.target).zIndex()<d.ui.dialog.overlay.maxZ){return !1}})},1),d(window).bind("resize.dialog-overlay",d.ui.dialog.overlay.resize));var g=this.oldInstances.pop()||d("<div>").addClass("ui-widget-overlay");return d(document).bind("keydown.dialog-overlay",function(j){var h=d.ui.dialog.overlay.instances;h.length!==0&&h[h.length-1]===g&&e.options.closeOnEscape&&!j.isDefaultPrevented()&&j.keyCode&&j.keyCode===d.ui.keyCode.ESCAPE&&(e.close(j),j.preventDefault())}),g.appendTo(document.body).css({width:this.width(),height:this.height()}),d.fn.bgiframe&&g.bgiframe(),this.instances.push(g),g},destroy:function(e){var h=d.inArray(e,this.instances),g=0;h!==-1&&this.oldInstances.push(this.instances.splice(h,1)[0]),this.instances.length===0&&d([document,window]).unbind(".dialog-overlay"),e.height(0).width(0).remove(),d.each(this.instances,function(){g=Math.max(g,this.css("z-index"))}),this.maxZ=g},height:function(){var e,g;return d.ui.ie?(e=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),g=Math.max(document.documentElement.offsetHeight,document.body.offsetHeight),e<g?d(window).height()+"px":e+"px"):d(document).height()+"px"},width:function(){var e,g;return d.ui.ie?(e=Math.max(document.documentElement.scrollWidth,document.body.scrollWidth),g=Math.max(document.documentElement.offsetWidth,document.body.offsetWidth),e<g?d(window).width()+"px":e+"px"):d(document).width()+"px"},resize:function(){var e=d([]);d.each(d.ui.dialog.overlay.instances,function(){e=e.add(this)}),e.css({width:0,height:0}).css({width:d.ui.dialog.overlay.width(),height:d.ui.dialog.overlay.height()})}}),d.extend(d.ui.dialog.overlay.prototype,{destroy:function(){d.ui.dialog.overlay.destroy(this.$el)}})})(jQuery);(function(b,a){var c=!1;b.widget("ui.menu",{version:"1.9.2",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-carat-1-e"},menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length).attr({role:this.options.role,tabIndex:0}).bind("click"+this.eventNamespace,b.proxy(function(d){this.options.disabled&&d.preventDefault()},this)),this.options.disabled&&this.element.addClass("ui-state-disabled").attr("aria-disabled","true"),this._on({"mousedown .ui-menu-item > a":function(d){d.preventDefault()},"click .ui-state-disabled > a":function(d){d.preventDefault()},"click .ui-menu-item:has(a)":function(d){var e=b(d.target).closest(".ui-menu-item");!c&&e.not(".ui-state-disabled").length&&(c=!0,this.select(d),e.has(".ui-menu").length?this.expand(d):this.element.is(":focus")||(this.element.trigger("focus",[!0]),this.active&&this.active.parents(".ui-menu").length===1&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(d){var e=b(d.currentTarget);e.siblings().children(".ui-state-active").removeClass("ui-state-active"),this.focus(d,e)},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(f,d){var g=this.active||this.element.children(".ui-menu-item").eq(0);d||this.focus(f,g)},blur:function(d){this._delay(function(){b.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(d)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(d){b(d.target).closest(".ui-menu").length||this.collapseAll(d),c=!1}})},_destroy:function(){this.element.removeAttr("aria-activedescendant").find(".ui-menu").andSelf().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function(){var d=b(this);d.data("ui-menu-submenu-carat")&&d.remove()}),this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")},_keydown:function(g){function d(i){return i.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}var l,j,f,h,k,e=!0;switch(g.keyCode){case b.ui.keyCode.PAGE_UP:this.previousPage(g);break;case b.ui.keyCode.PAGE_DOWN:this.nextPage(g);break;case b.ui.keyCode.HOME:this._move("first","first",g);break;case b.ui.keyCode.END:this._move("last","last",g);break;case b.ui.keyCode.UP:this.previous(g);break;case b.ui.keyCode.DOWN:this.next(g);break;case b.ui.keyCode.LEFT:this.collapse(g);break;case b.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(g);break;case b.ui.keyCode.ENTER:case b.ui.keyCode.SPACE:this._activate(g);break;case b.ui.keyCode.ESCAPE:this.collapse(g);break;default:e=!1,j=this.previousFilter||"",f=String.fromCharCode(g.keyCode),h=!1,clearTimeout(this.filterTimer),f===j?h=!0:f=j+f,k=new RegExp("^"+d(f),"i"),l=this.activeMenu.children(".ui-menu-item").filter(function(){return k.test(b(this).children("a").text())}),l=h&&l.index(this.active.next())!==-1?this.active.nextAll(".ui-menu-item"):l,l.length||(f=String.fromCharCode(g.keyCode),k=new RegExp("^"+d(f),"i"),l=this.activeMenu.children(".ui-menu-item").filter(function(){return k.test(b(this).children("a").text())})),l.length?(this.focus(g,l),l.length>1?(this.previousFilter=f,this.filterTimer=this._delay(function(){delete this.previousFilter},1000)):delete this.previousFilter):delete this.previousFilter}e&&g.preventDefault()},_activate:function(d){this.active.is(".ui-state-disabled")||(this.active.children("a[aria-haspopup='true']").length?this.expand(d):this.select(d))},refresh:function(){var d,f=this.options.icons.submenu,e=this.element.find(this.options.menus);e.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var h=b(this),j=h.prev("a"),g=b("<span>").addClass("ui-menu-icon ui-icon "+f).data("ui-menu-submenu-carat",!0);j.attr("aria-haspopup","true").prepend(g),h.attr("aria-labelledby",j.attr("id"))}),d=e.add(this.element),d.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role","presentation").children("a").uniqueId().addClass("ui-corner-all").attr({tabIndex:-1,role:this._itemRole()}),d.children(":not(.ui-menu-item)").each(function(){var g=b(this);/[^\-—–\s]/.test(g.text())||g.addClass("ui-widget-content ui-menu-divider")}),d.children(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!b.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},focus:function(g,d){var h,f;this.blur(g,g&&g.type==="focus"),this._scrollIntoView(d),this.active=d.first(),f=this.active.children("a").addClass("ui-state-focus"),this.options.role&&this.element.attr("aria-activedescendant",f.attr("id")),this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active"),g&&g.type==="keydown"?this._close():this.timer=this._delay(function(){this._close()},this.delay),h=d.children(".ui-menu"),h.length&&/^mouse/.test(g.type)&&this._startOpening(h),this.activeMenu=d.parent(),this._trigger("focus",g,{item:d})},_scrollIntoView:function(f){var k,h,e,g,j,d;this._hasScroll()&&(k=parseFloat(b.css(this.activeMenu[0],"borderTopWidth"))||0,h=parseFloat(b.css(this.activeMenu[0],"paddingTop"))||0,e=f.offset().top-this.activeMenu.offset().top-k-h,g=this.activeMenu.scrollTop(),j=this.activeMenu.height(),d=f.height(),e<0?this.activeMenu.scrollTop(g+e):e+d>j&&this.activeMenu.scrollTop(g+e-j+d))},blur:function(f,d){d||clearTimeout(this.timer);if(!this.active){return}this.active.children("a").removeClass("ui-state-focus"),this.active=null,this._trigger("blur",f,{item:this.active})},_startOpening:function(d){clearTimeout(this.timer);if(d.attr("aria-hidden")!=="true"){return}this.timer=this._delay(function(){this._close(),this._open(d)},this.delay)},_open:function(d){var e=b.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(d.parents(".ui-menu")).hide().attr("aria-hidden","true"),d.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(e)},collapseAll:function(d,e){clearTimeout(this.timer),this.timer=this._delay(function(){var f=e?this.element:b(d&&d.target).closest(this.element.find(".ui-menu"));f.length||(f=this.element),this._close(f),this.blur(d),this.activeMenu=f},this.delay)},_close:function(d){d||(d=this.active?this.active.parent():this.element),d.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false").end().find("a.ui-state-active").removeClass("ui-state-active")},collapse:function(f){var d=this.active&&this.active.parent().closest(".ui-menu-item",this.element);d&&d.length&&(this._close(),this.focus(f,d))},expand:function(f){var d=this.active&&this.active.children(".ui-menu ").children(".ui-menu-item").first();d&&d.length&&(this._open(d.parent()),this._delay(function(){this.focus(f,d)}))},next:function(d){this._move("next","first",d)},previous:function(d){this._move("prev","last",d)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(g,d,h){var f;this.active&&(g==="first"||g==="last"?f=this.active[g==="first"?"prevAll":"nextAll"](".ui-menu-item").eq(-1):f=this.active[g+"All"](".ui-menu-item").eq(0));if(!f||!f.length||!this.active){f=this.activeMenu.children(".ui-menu-item")[d]()}this.focus(h,f)},nextPage:function(e){var g,f,d;if(!this.active){this.next(e);return}if(this.isLastItem()){return}this._hasScroll()?(f=this.active.offset().top,d=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return g=b(this),g.offset().top-f-d<0}),this.focus(e,g)):this.focus(e,this.activeMenu.children(".ui-menu-item")[this.active?"last":"first"]())},previousPage:function(e){var g,f,d;if(!this.active){this.next(e);return}if(this.isFirstItem()){return}this._hasScroll()?(f=this.active.offset().top,d=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return g=b(this),g.offset().top-f+d>0}),this.focus(e,g)):this.focus(e,this.activeMenu.children(".ui-menu-item").first())},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(d){this.active=this.active||b(d.target).closest(".ui-menu-item");var e={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(d,!0),this._trigger("select",d,e)}})})(jQuery);(function(f,b){function a(){return ++g}function c(h){return h.hash.length>1&&h.href.replace(d,"")===location.href.replace(d,"").replace(/\s/g,"%20")}var g=0,d=/#.*$/;f.widget("ui.tabs",{version:"1.9.2",delay:300,options:{active:null,collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_create:function(){var h=this,k=this.options,j=k.active,e=location.hash.substring(1);this.running=!1,this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible",k.collapsible).delegate(".ui-tabs-nav > li","mousedown"+this.eventNamespace,function(i){f(this).is(".ui-state-disabled")&&i.preventDefault()}).delegate(".ui-tabs-anchor","focus"+this.eventNamespace,function(){f(this).closest("li").is(".ui-state-disabled")&&this.blur()}),this._processTabs();if(j===null){e&&this.tabs.each(function(i,l){if(f(l).attr("aria-controls")===e){return j=i,!1}}),j===null&&(j=this.tabs.index(this.tabs.filter(".ui-tabs-active")));if(j===null||j===-1){j=this.tabs.length?0:!1}}j!==!1&&(j=this.tabs.index(this.tabs.eq(j)),j===-1&&(j=k.collapsible?!1:0)),k.active=j,!k.collapsible&&k.active===!1&&this.anchors.length&&(k.active=0),f.isArray(k.disabled)&&(k.disabled=f.unique(k.disabled.concat(f.map(this.tabs.filter(".ui-state-disabled"),function(i){return h.tabs.index(i)}))).sort()),this.options.active!==!1&&this.anchors.length?this.active=this._findActive(this.options.active):this.active=f(),this._refresh(),this.active.length&&this.load(k.active)},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):f()}},_tabKeydown:function(h){var k=f(this.document[0].activeElement).closest("li"),j=this.tabs.index(k),e=!0;if(this._handlePageNav(h)){return}switch(h.keyCode){case f.ui.keyCode.RIGHT:case f.ui.keyCode.DOWN:j++;break;case f.ui.keyCode.UP:case f.ui.keyCode.LEFT:e=!1,j--;break;case f.ui.keyCode.END:j=this.anchors.length-1;break;case f.ui.keyCode.HOME:j=0;break;case f.ui.keyCode.SPACE:h.preventDefault(),clearTimeout(this.activating),this._activate(j);return;case f.ui.keyCode.ENTER:h.preventDefault(),clearTimeout(this.activating),this._activate(j===this.options.active?!1:j);return;default:return}h.preventDefault(),clearTimeout(this.activating),j=this._focusNextTab(j,e),h.ctrlKey||(k.attr("aria-selected","false"),this.tabs.eq(j).attr("aria-selected","true"),this.activating=this._delay(function(){this.option("active",j)},this.delay))},_panelKeydown:function(e){if(this._handlePageNav(e)){return}e.ctrlKey&&e.keyCode===f.ui.keyCode.UP&&(e.preventDefault(),this.active.focus())},_handlePageNav:function(e){if(e.altKey&&e.keyCode===f.ui.keyCode.PAGE_UP){return this._activate(this._focusNextTab(this.options.active-1,!1)),!0}if(e.altKey&&e.keyCode===f.ui.keyCode.PAGE_DOWN){return this._activate(this._focusNextTab(this.options.active+1,!0)),!0}},_findNextTab:function(h,k){function e(){return h>j&&(h=0),h<0&&(h=j),h}var j=this.tabs.length-1;while(f.inArray(e(),this.options.disabled)!==-1){h=k?h+1:h-1}return h},_focusNextTab:function(i,h){return i=this._findNextTab(i,h),this.tabs.eq(i).focus(),i},_setOption:function(i,h){if(i==="active"){this._activate(h);return}if(i==="disabled"){this._setupDisabled(h);return}this._super(i,h),i==="collapsible"&&(this.element.toggleClass("ui-tabs-collapsible",h),!h&&this.options.active===!1&&this._activate(0)),i==="event"&&this._setupEvents(h),i==="heightStyle"&&this._setupHeightStyle(h)},_tabId:function(h){return h.attr("aria-controls")||"ui-tabs-"+a()},_sanitizeSelector:function(h){return h?h.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var e=this.options,h=this.tablist.children(":has(a[href])");e.disabled=f.map(h.filter(".ui-state-disabled"),function(i){return h.index(i)}),this._processTabs(),e.active===!1||!this.anchors.length?(e.active=!1,this.active=f()):this.active.length&&!f.contains(this.tablist[0],this.active[0])?this.tabs.length===e.disabled.length?(e.active=!1,this.active=f()):this._activate(this._findNextTab(Math.max(0,e.active-1),!1)):e.active=this.tabs.index(this.active),this._refresh()},_refresh:function(){this._setupDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-expanded":"false","aria-hidden":"true"}),this.active.length?(this.active.addClass("ui-tabs-active ui-state-active").attr({"aria-selected":"true",tabIndex:0}),this._getPanelForTab(this.active).show().attr({"aria-expanded":"true","aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var e=this;this.tablist=this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role","tablist"),this.tabs=this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({role:"tab",tabIndex:-1}),this.anchors=this.tabs.map(function(){return f("a",this)[0]}).addClass("ui-tabs-anchor").attr({role:"presentation",tabIndex:-1}),this.panels=f(),this.anchors.each(function(t,p){var m,s,k,j=f(p).uniqueId().attr("id"),q=f(p).closest("li"),h=q.attr("aria-controls");c(p)?(m=p.hash,s=e.element.find(e._sanitizeSelector(m))):(k=e._tabId(q),m="#"+k,s=e.element.find(m),s.length||(s=e._createPanel(k),s.insertAfter(e.panels[t-1]||e.tablist)),s.attr("aria-live","polite")),s.length&&(e.panels=e.panels.add(s)),h&&q.data("ui-tabs-aria-controls",h),q.attr({"aria-controls":m.substring(1),"aria-labelledby":j}),s.attr("aria-labelledby",j)}),this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role","tabpanel")},_getList:function(){return this.element.find("ol,ul").eq(0)},_createPanel:function(e){return f("<div>").attr("id",e).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy",!0)},_setupDisabled:function(e){f.isArray(e)&&(e.length?e.length===this.anchors.length&&(e=!0):e=!1);for(var i=0,h;h=this.tabs[i];i++){e===!0||f.inArray(i,e)!==-1?f(h).addClass("ui-state-disabled").attr("aria-disabled","true"):f(h).removeClass("ui-state-disabled").removeAttr("aria-disabled")}this.options.disabled=e},_setupEvents:function(e){var h={click:function(i){i.preventDefault()}};e&&f.each(e.split(" "),function(j,i){h[i]="_eventHandler"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(this.anchors,h),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(h){var k,j,e=this.element.parent();h==="fill"?(f.support.minHeight||(j=e.css("overflow"),e.css("overflow","hidden")),k=e.height(),this.element.siblings(":visible").each(function(){var i=f(this),l=i.css("position");if(l==="absolute"||l==="fixed"){return}k-=i.outerHeight(!0)}),j&&e.css("overflow",j),this.element.children().not(this.panels).each(function(){k-=f(this).outerHeight(!0)}),this.panels.each(function(){f(this).height(Math.max(0,k-f(this).innerHeight()+f(this).height()))}).css("overflow","auto")):h==="auto"&&(k=0,this.panels.each(function(){k=Math.max(k,f(this).height("").height())}).height(k))},_eventHandler:function(w){var j=this.options,e=this.active,m=f(w.currentTarget),x=m.closest("li"),h=x[0]===e[0],v=h&&j.collapsible,q=v?f():this._getPanelForTab(x),p=e.length?this._getPanelForTab(e):f(),k={oldTab:e,oldPanel:p,newTab:v?f():x,newPanel:q};w.preventDefault();if(x.hasClass("ui-state-disabled")||x.hasClass("ui-tabs-loading")||this.running||h&&!j.collapsible||this._trigger("beforeActivate",w,k)===!1){return}j.active=v?!1:this.tabs.index(x),this.active=h?f():x,this.xhr&&this.xhr.abort(),!p.length&&!q.length&&f.error("jQuery UI Tabs: Mismatching fragment identifier."),q.length&&this.load(this.tabs.index(x),w),this._toggle(w,k)},_toggle:function(j,p){function m(){l.running=!1,l._trigger("activate",j,p)}function e(){p.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),h.length&&l.options.show?l._show(h,l.options.show,m):(h.show(),m())}var l=this,h=p.newPanel,k=p.oldPanel;this.running=!0,k.length&&this.options.hide?this._hide(k,this.options.hide,function(){p.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),e()}):(p.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),k.hide(),e()),k.attr({"aria-expanded":"false","aria-hidden":"true"}),p.oldTab.attr("aria-selected","false"),h.length&&k.length?p.oldTab.attr("tabIndex",-1):h.length&&this.tabs.filter(function(){return f(this).attr("tabIndex")===0}).attr("tabIndex",-1),h.attr({"aria-expanded":"true","aria-hidden":"false"}),p.newTab.attr({"aria-selected":"true",tabIndex:0})},_activate:function(e){var i,h=this._findActive(e);if(h[0]===this.active[0]){return}h.length||(h=this.active),i=h.find(".ui-tabs-anchor")[0],this._eventHandler({target:i,currentTarget:i,preventDefault:f.noop})},_findActive:function(e){return e===!1?f():this.tabs.eq(e)},_getIndex:function(h){return typeof h=="string"&&(h=this.anchors.index(this.anchors.filter("[href$='"+h+"']"))),h},_destroy:function(){this.xhr&&this.xhr.abort(),this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"),this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"),this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeData("href.tabs").removeData("load.tabs").removeUniqueId(),this.tabs.add(this.panels).each(function(){f.data(this,"ui-tabs-destroy")?f(this).remove():f(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")}),this.tabs.each(function(){var e=f(this),h=e.data("ui-tabs-aria-controls");h?e.attr("aria-controls",h):e.removeAttr("aria-controls")}),this.panels.show(),this.options.heightStyle!=="content"&&this.panels.css("height","")},enable:function(h){var e=this.options.disabled;if(e===!1){return}h===b?e=!1:(h=this._getIndex(h),f.isArray(e)?e=f.map(e,function(i){return i!==h?i:null}):e=f.map(this.tabs,function(j,i){return i!==h?i:null})),this._setupDisabled(e)},disable:function(h){var e=this.options.disabled;if(e===!0){return}if(h===b){e=!0}else{h=this._getIndex(h);if(f.inArray(h,e)!==-1){return}f.isArray(e)?e=f.merge([h],e).sort():e=[h]}this._setupDisabled(e)},load:function(k,p){k=this._getIndex(k);var l=this,j=this.tabs.eq(k),m=j.find(".ui-tabs-anchor"),h=this._getPanelForTab(j),e={tab:j,panel:h};if(c(m[0])){return}this.xhr=f.ajax(this._ajaxSettings(m,p,e)),this.xhr&&this.xhr.statusText!=="canceled"&&(j.addClass("ui-tabs-loading"),h.attr("aria-busy","true"),this.xhr.success(function(i){setTimeout(function(){h.html(i),l._trigger("load",p,e)},1)}).complete(function(n,i){setTimeout(function(){i==="abort"&&l.panels.stop(!1,!0),j.removeClass("ui-tabs-loading"),h.removeAttr("aria-busy"),n===l.xhr&&delete l.xhr},1)}))},_ajaxSettings:function(h,k,j){var e=this;return{url:h.attr("href"),beforeSend:function(i,l){return e._trigger("beforeLoad",k,f.extend({jqXHR:i,ajaxSettings:l},j))}}},_getPanelForTab:function(e){var h=f(e).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+h))}}),f.uiBackCompat!==!1&&(f.ui.tabs.prototype._ui=function(i,h){return{tab:i,panel:h,index:this.anchors.index(i)}},f.widget("ui.tabs",f.ui.tabs,{url:function(i,h){this.anchors.eq(i).attr("href",h)}}),f.widget("ui.tabs",f.ui.tabs,{options:{ajaxOptions:null,cache:!1},_create:function(){this._super();var e=this;this._on({tabsbeforeload:function(i,h){if(f.data(h.tab[0],"cache.tabs")){i.preventDefault();return}h.jqXHR.success(function(){e.options.cache&&f.data(h.tab[0],"cache.tabs",!0)})}})},_ajaxSettings:function(h,k,j){var e=this.options.ajaxOptions;return f.extend({},e,{error:function(l,i){try{e.error(l,i,j.tab.closest("li").index(),j.tab[0])}catch(m){}}},this._superApply(arguments))},_setOption:function(i,h){i==="cache"&&h===!1&&this.anchors.removeData("cache.tabs"),this._super(i,h)},_destroy:function(){this.anchors.removeData("cache.tabs"),this._super()},url:function(h){this.anchors.eq(h).removeData("cache.tabs"),this._superApply(arguments)}}),f.widget("ui.tabs",f.ui.tabs,{abort:function(){this.xhr&&this.xhr.abort()}}),f.widget("ui.tabs",f.ui.tabs,{options:{spinner:"<em>Loading&#8230;</em>"},_create:function(){this._super(),this._on({tabsbeforeload:function(j,h){if(j.target!==this.element[0]||!this.options.spinner){return}var k=h.tab.find("span"),i=k.html();k.html(this.options.spinner),h.jqXHR.complete(function(){k.html(i)})}})}}),f.widget("ui.tabs",f.ui.tabs,{options:{enable:null,disable:null},enable:function(e){var i=this.options,h;if(e&&i.disabled===!0||f.isArray(i.disabled)&&f.inArray(e,i.disabled)!==-1){h=!0}this._superApply(arguments),h&&this._trigger("enable",null,this._ui(this.anchors[e],this.panels[e]))},disable:function(e){var i=this.options,h;if(e&&i.disabled===!1||f.isArray(i.disabled)&&f.inArray(e,i.disabled)===-1){h=!0}this._superApply(arguments),h&&this._trigger("disable",null,this._ui(this.anchors[e],this.panels[e]))}}),f.widget("ui.tabs",f.ui.tabs,{options:{add:null,remove:null,tabTemplate:"<li><a href='#{href}'><span>#{label}</span></a></li>"},add:function(q,l,j){j===b&&(j=this.anchors.length);var k,p,h=this.options,e=f(h.tabTemplate.replace(/#\{href\}/g,q).replace(/#\{label\}/g,l)),m=q.indexOf("#")?this._tabId(e):q.replace("#","");return e.addClass("ui-state-default ui-corner-top").data("ui-tabs-destroy",!0),e.attr("aria-controls",m),k=j>=this.tabs.length,p=this.element.find("#"+m),p.length||(p=this._createPanel(m),k?j>0?p.insertAfter(this.panels.eq(-1)):p.appendTo(this.element):p.insertBefore(this.panels[j])),p.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").hide(),k?e.appendTo(this.tablist):e.insertBefore(this.tabs[j]),h.disabled=f.map(h.disabled,function(i){return i>=j?++i:i}),this.refresh(),this.tabs.length===1&&h.active===!1&&this.option("active",0),this._trigger("add",null,this._ui(this.anchors[j],this.panels[j])),this},remove:function(h){h=this._getIndex(h);var k=this.options,j=this.tabs.eq(h).remove(),e=this._getPanelForTab(j).remove();return j.hasClass("ui-tabs-active")&&this.anchors.length>2&&this._activate(h+(h+1<this.anchors.length?1:-1)),k.disabled=f.map(f.grep(k.disabled,function(i){return i!==h}),function(i){return i>=h?--i:i}),this.refresh(),this._trigger("remove",null,this._ui(j.find("a")[0],e[0])),this}}),f.widget("ui.tabs",f.ui.tabs,{length:function(){return this.anchors.length}}),f.widget("ui.tabs",f.ui.tabs,{options:{idPrefix:"ui-tabs-"},_tabId:function(e){var h=e.is("li")?e.find("a[href]"):e;return h=h[0],f(h).closest("li").attr("aria-controls")||h.title&&h.title.replace(/\s/g,"_").replace(/[^\w\u00c0-\uFFFF\-]/g,"")||this.options.idPrefix+a()}}),f.widget("ui.tabs",f.ui.tabs,{options:{panelTemplate:"<div></div>"},_createPanel:function(e){return f(this.options.panelTemplate).attr("id",e).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy",!0)}}),f.widget("ui.tabs",f.ui.tabs,{_create:function(){var h=this.options;h.active===null&&h.selected!==b&&(h.active=h.selected===-1?!1:h.selected),this._super(),h.selected=h.active,h.selected===!1&&(h.selected=-1)},_setOption:function(i,h){if(i!=="selected"){return this._super(i,h)}var j=this.options;this._super("active",h===-1?!1:h),j.selected=j.active,j.selected===!1&&(j.selected=-1)},_eventHandler:function(){this._superApply(arguments),this.options.selected=this.options.active,this.options.selected===!1&&(this.options.selected=-1)}}),f.widget("ui.tabs",f.ui.tabs,{options:{show:null,select:null},_create:function(){this._super(),this.options.active!==!1&&this._trigger("show",null,this._ui(this.active.find(".ui-tabs-anchor")[0],this._getPanelForTab(this.active)[0]))},_trigger:function(m,j,o){var l,h,k=this._superApply(arguments);return k?(m==="beforeActivate"?(l=o.newTab.length?o.newTab:o.oldTab,h=o.newPanel.length?o.newPanel:o.oldPanel,k=this._super("select",j,{tab:l.find(".ui-tabs-anchor")[0],panel:h[0],index:l.closest("li").index()})):m==="activate"&&o.newTab.length&&(k=this._super("show",j,{tab:o.newTab.find(".ui-tabs-anchor")[0],panel:o.newPanel[0],index:o.newTab.closest("li").index()})),k):!1}}),f.widget("ui.tabs",f.ui.tabs,{select:function(h){h=this._getIndex(h);if(h===-1){if(!this.options.collapsible||this.options.selected===-1){return}h=this.options.selected}this.anchors.eq(h).trigger(this.options.event+this.eventNamespace)}}),function(){var e=0;f.widget("ui.tabs",f.ui.tabs,{options:{cookie:null},_create:function(){var i=this.options,h;i.active==null&&i.cookie&&(h=parseInt(this._cookie(),10),h===-1&&(h=!1),i.active=h),this._super()},_cookie:function(i){var h=[this.cookie||(this.cookie=this.options.cookie.name||"ui-tabs-"+ ++e)];return arguments.length&&(h.push(i===!1?-1:i),h.push(this.options.cookie)),f.cookie.apply(null,h)},_refresh:function(){this._super(),this.options.cookie&&this._cookie(this.options.active,this.options.cookie)},_eventHandler:function(){this._superApply(arguments),this.options.cookie&&this._cookie(this.options.active,this.options.cookie)},_destroy:function(){this._super(),this.options.cookie&&this._cookie(null,this.options.cookie)}})}(),f.widget("ui.tabs",f.ui.tabs,{_trigger:function(h,k,j){var e=f.extend({},j);return h==="load"&&(e.panel=e.panel[0],e.tab=e.tab.find(".ui-tabs-anchor")[0]),this._super(h,k,e)}}),f.widget("ui.tabs",f.ui.tabs,{options:{fx:null},_getFx:function(){var e,i,h=this.options.fx;return h&&(f.isArray(h)?(e=h[0],i=h[1]):e=i=h),h?{show:i,hide:e}:null},_toggle:function(p,k){function q(){v.running=!1,v._trigger("activate",p,k)}function h(){k.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),m.length&&l.show?m.animate(l.show,l.show.duration,function(){q()}):(m.show(),q())}var v=this,m=k.newPanel,j=k.oldPanel,l=this._getFx();if(!l){return this._super(p,k)}v.running=!0,j.length&&l.hide?j.animate(l.hide,l.hide.duration,function(){k.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),h()}):(k.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),j.hide(),h())}}))})(jQuery);jQuery.effects||function(c,a){var d=c.uiBackCompat!==!1,b="ui-effects-";c.effects={effect:{}},function(D,k){function g(i,f,l){var h=A[f.type]||{};return i==null?l||!f.def?null:f.def:(i=h.floor?~~i:parseFloat(i),isNaN(i)?f.def:h.mod?(i+h.mod)%h.mod:0>i?0:h.max<i?h.max:i)}function y(h){var i=j(),f=i._rgba=[];return h=h.toLowerCase(),w(E,function(p,n){var r,v=n.re.exec(h),l=v&&n.parse(v),u=n.space||"rgba";if(l){return r=i[u](l),i[C[u].cache]=r[C[u].cache],f=i._rgba=r._rgba,!1}}),f.length?(f.join()==="0,0,0,0"&&D.extend(f,z.transparent),i):z[h]}function B(h,f,i){return i=(i+1)%1,i*6<1?h+(f-h)*i*6:i*2<1?f:i*3<2?h+(f-h)*(2/3-i)*6:h}var e="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor".split(" "),q=/^([\-+])=\s*(\d+\.?\d*)/,E=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(f){return[f[1],f[2],f[3],f[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,parse:function(f){return[f[1]*2.55,f[2]*2.55,f[3]*2.55,f[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(f){return[parseInt(f[1],16),parseInt(f[2],16),parseInt(f[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(f){return[parseInt(f[1]+f[1],16),parseInt(f[2]+f[2],16),parseInt(f[3]+f[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(f){return[f[1],f[2]/100,f[3]/100,f[4]]}}],j=D.Color=function(l,o,h,f){return new D.Color.fn.parse(l,o,h,f)},C={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},A={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},x=j.support={},m=D("<p>")[0],z,w=D.each;m.style.cssText="background-color:rgba(1,1,1,.5)",x.rgba=m.style.backgroundColor.indexOf("rgba")>-1,w(C,function(h,f){f.cache="_"+h,f.props.alpha={idx:3,type:"percent",def:1}}),j.fn=D.extend(j.prototype,{parse:function(u,p,t,n){if(u===k){return this._rgba=[null,null,null,null],this}if(u.jquery||u.nodeType){u=D(u).css(p),p=k}var F=this,h=D.type(u),o=this._rgba=[];p!==k&&(u=[u,p,t,n],h="array");if(h==="string"){return this.parse(y(u)||z._default)}if(h==="array"){return w(C.rgba.props,function(i,f){o[f.idx]=g(u[f.idx],f)}),this}if(h==="object"){return u instanceof j?w(C,function(i,f){u[f.cache]&&(F[f.cache]=u[f.cache].slice())}):w(C,function(l,r){var f=r.cache;w(r.props,function(s,i){if(!F[f]&&r.to){if(s==="alpha"||u[s]==null){return}F[f]=r.to(F._rgba)}F[f][i.idx]=g(u[s],i,!0)}),F[f]&&c.inArray(null,F[f].slice(0,3))<0&&(F[f][3]=1,r.from&&(F._rgba=r.from(F[f])))}),this}},is:function(i){var f=j(i),l=!0,h=this;return w(C,function(r,n){var p,t=f[n.cache];return t&&(p=h[n.cache]||n.to&&n.to(h._rgba)||[],w(n.props,function(s,o){if(t[o.idx]!=null){return l=t[o.idx]===p[o.idx],l}})),l}),l},_space:function(){var h=[],f=this;return w(C,function(l,i){f[i.cache]&&h.push(l)}),h.pop()},transition:function(G,p){var H=j(G),v=H._space(),o=C[v],u=this.alpha()===0?j("transparent"):this,F=u[o.cache]||o.to(u._rgba),h=F.slice();return H=H[o.cache],w(o.props,function(I,t){var l=t.idx,n=F[l],J=H[l],f=A[t.type]||{};if(J===null){return}n===null?h[l]=J:(f.mod&&(J-n>f.mod/2?n+=f.mod:n-J>f.mod/2&&(n-=f.mod)),h[l]=g((J-n)*p+n,t))}),this[v](h)},blend:function(l){if(this._rgba[3]===1){return this}var o=this._rgba.slice(),h=o.pop(),f=j(l)._rgba;return j(D.map(o,function(n,i){return(1-h)*f[i]+h*n}))},toRgbaString:function(){var f="rgba(",h=D.map(this._rgba,function(l,i){return l==null?i>2?1:0:l});return h[3]===1&&(h.pop(),f="rgb("),f+h.join()+")"},toHslaString:function(){var f="hsla(",h=D.map(this.hsla(),function(l,i){return l==null&&(l=i>2?1:0),i&&i<3&&(l=Math.round(l*100)+"%"),l});return h[3]===1&&(h.pop(),f="hsl("),f+h.join()+")"},toHexString:function(h){var i=this._rgba.slice(),f=i.pop();return h&&i.push(~~(f*255)),"#"+D.map(i,function(l){return l=(l||0).toString(16),l.length===1?"0"+l:l}).join("")},toString:function(){return this._rgba[3]===0?"transparent":this.toRgbaString()}}),j.fn.parse.prototype=j.fn,C.hsla.to=function(I){if(I[0]==null||I[1]==null||I[2]==null){return[null,null,null,I[3]]}var M=I[0]/255,v=I[1]/255,h=I[2]/255,G=I[3],N=Math.max(M,v,h),p=Math.min(M,v,h),L=N-p,K=N+p,H=K*0.5,F,J;return p===N?F=0:M===N?F=60*(v-h)/L+360:v===N?F=60*(h-M)/L+120:F=60*(M-v)/L+240,H===0||H===1?J=H:H<=0.5?J=L/K:J=L/(2-K),[Math.round(F)%360,J,H,G==null?1:G]},C.hsla.from=function(u){if(u[0]==null||u[1]==null||u[2]==null){return[null,null,null,u[3]]}var h=u[0]/360,F=u[1],p=u[2],f=u[3],l=p<=0.5?p*(1+F):p+F-p*F,v=2*p-l;return[Math.round(B(v,l,h+1/3)*255),Math.round(B(v,l,h)*255),Math.round(B(v,l,h-1/3)*255),f]},w(C,function(p,n){var l=n.props,i=n.cache,h=n.to,o=n.from;j.fn[p]=function(u){h&&!this[i]&&(this[i]=h(this._rgba));if(u===k){return this[i].slice()}var t,s=D.type(u),f=s==="array"||s==="object"?u:arguments,v=this[i].slice();return w(l,function(F,r){var G=f[s==="object"?F:r.idx];G==null&&(G=v[r.idx]),v[r.idx]=g(G,r)}),o?(t=j(o(v)),t[i]=v,t):j(v)},w(l,function(s,f){if(j.fn[s]){return}j.fn[s]=function(F){var H=D.type(F),v=s==="alpha"?this._hsla?"hsla":"rgba":p,t=this[v](),G=t[f.idx],r;return H==="undefined"?G:(H==="function"&&(F=F.call(this,G),H=D.type(F)),F==null&&f.empty?this:(H==="string"&&(r=q.exec(F),r&&(F=G+parseFloat(r[2])*(r[1]==="+"?1:-1))),t[f.idx]=F,this[v](t)))}})}),w(e,function(f,h){D.cssHooks[h]={set:function(G,F){var t,v,p="";if(D.type(F)!=="string"||(t=y(F))){F=j(t||F);if(!x.rgba&&F._rgba[3]!==1){v=h==="backgroundColor"?G.parentNode:G;while((p===""||p==="transparent")&&v&&v.style){try{p=D.css(v,"backgroundColor"),v=v.parentNode}catch(o){}}F=F.blend(p&&p!=="transparent"?p:"_default")}F=F.toRgbaString()}try{G.style[h]=F}catch(n){}}},D.fx.step[h]=function(i){i.colorInit||(i.start=j(i.elem,h),i.end=j(i.end),i.colorInit=!0),D.cssHooks[h].set(i.elem,i.start.transition(i.end,i.pos))}}),D.cssHooks.borderColor={expand:function(h){var f={};return w(["Top","Right","Bottom","Left"],function(l,i){f["border"+i+"Color"]=h}),f}},z=D.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(jQuery),function(){function e(){var k=this.ownerDocument.defaultView?this.ownerDocument.defaultView.getComputedStyle(this,null):this.currentStyle,m={},l,j;if(k&&k.length&&k[0]&&k[k[0]]){j=k.length;while(j--){l=k[j],typeof k[l]=="string"&&(m[c.camelCase(l)]=k[l])}}else{for(l in k){typeof k[l]=="string"&&(m[l]=k[l])}}return m}function f(k,p){var j={},l,m;for(l in p){m=p[l],k[l]!==m&&!g[l]&&(c.fx.step[l]||!isNaN(parseFloat(m)))&&(j[l]=m)}return j}var h=["add","remove","toggle"],g={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};c.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(i,j){c.fx.step[j]=function(k){if(k.end!=="none"&&!k.setAttr||k.pos===1&&!k.setAttr){jQuery.style(k.elem,j,k.end),k.setAttr=!0}}}),c.effects.animateClass=function(k,l,m,j){var i=c.speed(l,m,j);return this.queue(function(){var p=c(this),s=p.attr("class")||"",n,q=i.children?p.find("*").andSelf():p;q=q.map(function(){var o=c(this);return{el:o,start:e.call(this)}}),n=function(){c.each(h,function(o,r){k[r]&&p[r+"Class"](k[r])})},n(),q=q.map(function(){return this.end=e.call(this.el[0]),this.diff=f(this.start,this.end),this}),p.attr("class",s),q=q.map(function(){var o=this,v=c.Deferred(),u=jQuery.extend({},i,{queue:!1,complete:function(){v.resolve(o)}});return this.el.animate(this.diff,u),v.promise()}),c.when.apply(c,q.get()).done(function(){n(),c.each(arguments,function(){var o=this.el;c.each(this.diff,function(r){o.css(r,"")})}),i.complete.call(p[0])})})},c.fn.extend({_addClass:c.fn.addClass,addClass:function(k,m,l,j){return m?c.effects.animateClass.call(this,{add:k},m,l,j):this._addClass(k)},_removeClass:c.fn.removeClass,removeClass:function(k,m,l,j){return m?c.effects.animateClass.call(this,{remove:k},m,l,j):this._removeClass(k)},_toggleClass:c.fn.toggleClass,toggleClass:function(p,l,j,k,m){return typeof l=="boolean"||l===a?j?c.effects.animateClass.call(this,l?{add:p}:{remove:p},j,k,m):this._toggleClass(p,l):c.effects.animateClass.call(this,{toggle:p},l,j,k)},switchClass:function(k,o,m,j,l){return c.effects.animateClass.call(this,{add:o,remove:k},m,j,l)}})}(),function(){function e(h,k,j,g){c.isPlainObject(h)&&(k=h,h=h.effect),h={effect:h},k==null&&(k={}),c.isFunction(k)&&(g=k,j=null,k={});if(typeof k=="number"||c.fx.speeds[k]){g=j,j=k,k={}}return c.isFunction(j)&&(g=j,j=null),k&&c.extend(h,k),j=j||k.duration,h.duration=c.fx.off?0:typeof j=="number"?j:j in c.fx.speeds?c.fx.speeds[j]:c.fx.speeds._default,h.complete=g||k.complete,h}function f(g){return !g||typeof g=="number"||c.fx.speeds[g]?!0:typeof g=="string"&&!c.effects.effect[g]?d&&c.effects[g]?!1:!0:!1}c.extend(c.effects,{version:"1.9.2",save:function(h,g){for(var i=0;i<g.length;i++){g[i]!==null&&h.data(b+g[i],h[0].style[g[i]])}},restore:function(j,k){var g,h;for(h=0;h<k.length;h++){k[h]!==null&&(g=j.data(b+k[h]),g===a&&(g=""),j.css(k[h],g))}},setMode:function(h,g){return g==="toggle"&&(g=h.is(":hidden")?"show":"hide"),g},getBaseline:function(i,g){var j,h;switch(i[0]){case"top":j=0;break;case"middle":j=0.5;break;case"bottom":j=1;break;default:j=i[0]/g.height}switch(i[1]){case"left":h=0;break;case"center":h=0.5;break;case"right":h=1;break;default:h=i[1]/g.width}return{x:h,y:j}},createWrapper:function(h){if(h.parent().is(".ui-effects-wrapper")){return h.parent()}var m={width:h.outerWidth(!0),height:h.outerHeight(!0),"float":h.css("float")},k=c("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),g={width:h.width(),height:h.height()},j=document.activeElement;try{j.id}catch(l){j=document.body}return h.wrap(k),(h[0]===j||c.contains(h[0],j))&&c(j).focus(),k=h.parent(),h.css("position")==="static"?(k.css({position:"relative"}),h.css({position:"relative"})):(c.extend(m,{position:h.css("position"),zIndex:h.css("z-index")}),c.each(["top","left","bottom","right"],function(n,i){m[i]=h.css(i),isNaN(parseInt(m[i],10))&&(m[i]="auto")}),h.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),h.css(g),k.css(m).show()},removeWrapper:function(g){var h=document.activeElement;return g.parent().is(".ui-effects-wrapper")&&(g.parent().replaceWith(g),(g[0]===h||c.contains(g[0],h))&&c(h).focus()),g},setTransition:function(h,k,j,g){return g=g||{},c.each(k,function(l,m){var i=h.cssUnit(m);i[0]>0&&(g[m]=i[0]*j+i[1])}),g}}),c.fn.extend({effect:function(){function g(t){function m(){c.isFunction(o)&&o.call(q[0]),c.isFunction(t)&&t()}var q=c(this),o=i.complete,p=i.mode;(q.is(":hidden")?p==="hide":p==="show")?m():l.call(q[0],i,m)}var i=e.apply(this,arguments),k=i.mode,j=i.queue,l=c.effects.effect[i.effect],h=!l&&d&&c.effects[i.effect];return c.fx.off||!l&&!h?k?this[k](i.duration,i.complete):this.each(function(){i.complete&&i.complete.call(this)}):l?j===!1?this.each(g):this.queue(j||"fx",g):h.call(this,{options:i,duration:i.duration,callback:i.complete,mode:i.mode})},_show:c.fn.show,show:function(h){if(f(h)){return this._show.apply(this,arguments)}var g=e.apply(this,arguments);return g.mode="show",this.effect.call(this,g)},_hide:c.fn.hide,hide:function(h){if(f(h)){return this._hide.apply(this,arguments)}var g=e.apply(this,arguments);return g.mode="hide",this.effect.call(this,g)},__toggle:c.fn.toggle,toggle:function(g){if(f(g)||typeof g=="boolean"||c.isFunction(g)){return this.__toggle.apply(this,arguments)}var h=e.apply(this,arguments);return h.mode="toggle",this.effect.call(this,h)},cssUnit:function(g){var i=this.css(g),h=[];return c.each(["em","px","%","pt"],function(k,j){i.indexOf(j)>0&&(h=[parseFloat(i),j])}),h}})}(),function(){var e={};c.each(["Quad","Cubic","Quart","Quint","Expo"],function(f,g){e[g]=function(h){return Math.pow(h,f+2)}}),c.extend(e,{Sine:function(f){return 1-Math.cos(f*Math.PI/2)},Circ:function(f){return 1-Math.sqrt(1-f*f)},Elastic:function(f){return f===0||f===1?f:-Math.pow(2,8*(f-1))*Math.sin(((f-1)*80-7.5)*Math.PI/15)},Back:function(f){return f*f*(3*f-2)},Bounce:function(g){var f,h=4;while(g<((f=Math.pow(2,--h))-1)/11){}return 1/Math.pow(4,3-h)-7.5625*Math.pow((f*3-2)/22-g,2)}}),c.each(e,function(f,g){c.easing["easeIn"+f]=g,c.easing["easeOut"+f]=function(h){return 1-g(1-h)},c.easing["easeInOut"+f]=function(h){return h<0.5?g(h*2)/2:1-g(h*-2+2)/2}})}()}(jQuery);(function(b,a){b.effects.effect.explode=function(q,B){function e(){J.push(this),J.length===x*E&&K()}function K(){w.css({visibility:"visible"}),b(J).remove(),k||w.hide(),B()}var x=q.pieces?Math.round(Math.sqrt(q.pieces)):3,E=x,w=b(this),A=b.effects.setMode(w,q.mode||"hide"),k=A==="show",L=w.show().css("visibility","hidden").offset(),H=Math.ceil(w.outerWidth()/E),D=Math.ceil(w.outerHeight()/x),J=[],F,z,I,j,C,G;for(F=0;F<x;F++){j=L.top+F*D,G=F-(x-1)/2;for(z=0;z<E;z++){I=L.left+z*H,C=z-(E-1)/2,w.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-z*H,top:-F*D}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:H,height:D,left:I+(k?C*H:0),top:j+(k?G*D:0),opacity:k?0:1}).animate({left:I+(k?0:C*H),top:j+(k?0:G*D),opacity:k?1:0},q.duration||500,q.easing,e)}}}})(jQuery);(function(b,a){b.effects.effect.puff=function(f,k){var h=b(this),e=b.effects.setMode(h,f.mode||"hide"),g=e==="hide",j=parseInt(f.percent,10)||150,d=j/100,c={height:h.height(),width:h.width(),outerHeight:h.outerHeight(),outerWidth:h.outerWidth()};b.extend(f,{effect:"scale",queue:!1,fade:!0,mode:e,complete:k,percent:g?j:100,from:g?c:{height:c.height*d,width:c.width*d,outerHeight:c.outerHeight*d,outerWidth:c.outerWidth*d}}),h.effect(f)},b.effects.effect.scale=function(p,e){var c=b(this),h=b.extend(!0,{},p),q=b.effects.setMode(c,p.mode||"effect"),d=parseInt(p.percent,10)||(parseInt(p.percent,10)===0?0:q==="hide"?0:100),m=p.direction||"both",k=p.origin,j={height:c.height(),width:c.width(),outerHeight:c.outerHeight(),outerWidth:c.outerWidth()},g={y:m!=="horizontal"?d/100:1,x:m!=="vertical"?d/100:1};h.effect="size",h.queue=!1,h.complete=e,q!=="effect"&&(h.origin=k||["middle","center"],h.restore=!0),h.from=p.from||(q==="show"?{height:0,width:0,outerHeight:0,outerWidth:0}:j),h.to={height:j.height*g.y,width:j.width*g.x,outerHeight:j.outerHeight*g.y,outerWidth:j.outerWidth*g.x},h.fade&&(q==="show"&&(h.from.opacity=0,h.to.opacity=1),q==="hide"&&(h.from.opacity=1,h.to.opacity=0)),c.effect(h)},b.effects.effect.size=function(q,B){var x,E,w,A=b(this),k=["position","top","bottom","left","right","width","height","overflow","opacity"],L=["position","top","bottom","left","right","overflow","opacity"],H=["width","height","overflow"],D=["fontSize"],J=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],F=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],z=b.effects.setMode(A,q.mode||"effect"),I=q.restore||z!=="effect",j=q.scale||"both",C=q.origin||["middle","center"],G=A.css("position"),e=I?k:L,K={height:0,width:0,outerHeight:0,outerWidth:0};z==="show"&&A.show(),x={height:A.height(),width:A.width(),outerHeight:A.outerHeight(),outerWidth:A.outerWidth()},q.mode==="toggle"&&z==="show"?(A.from=q.to||K,A.to=q.from||x):(A.from=q.from||(z==="show"?K:x),A.to=q.to||(z==="hide"?K:x)),w={from:{y:A.from.height/x.height,x:A.from.width/x.width},to:{y:A.to.height/x.height,x:A.to.width/x.width}};if(j==="box"||j==="both"){w.from.y!==w.to.y&&(e=e.concat(J),A.from=b.effects.setTransition(A,J,w.from.y,A.from),A.to=b.effects.setTransition(A,J,w.to.y,A.to)),w.from.x!==w.to.x&&(e=e.concat(F),A.from=b.effects.setTransition(A,F,w.from.x,A.from),A.to=b.effects.setTransition(A,F,w.to.x,A.to))}(j==="content"||j==="both")&&w.from.y!==w.to.y&&(e=e.concat(D).concat(H),A.from=b.effects.setTransition(A,D,w.from.y,A.from),A.to=b.effects.setTransition(A,D,w.to.y,A.to)),b.effects.save(A,e),A.show(),b.effects.createWrapper(A),A.css("overflow","hidden").css(A.from),C&&(E=b.effects.getBaseline(C,x),A.from.top=(x.outerHeight-A.outerHeight())*E.y,A.from.left=(x.outerWidth-A.outerWidth())*E.x,A.to.top=(x.outerHeight-A.to.outerHeight)*E.y,A.to.left=(x.outerWidth-A.to.outerWidth)*E.x),A.css(A.from);if(j==="content"||j==="both"){J=J.concat(["marginTop","marginBottom"]).concat(D),F=F.concat(["marginLeft","marginRight"]),H=k.concat(J).concat(F),A.find("*[width]").each(function(){var d=b(this),c={height:d.height(),width:d.width(),outerHeight:d.outerHeight(),outerWidth:d.outerWidth()};I&&b.effects.save(d,H),d.from={height:c.height*w.from.y,width:c.width*w.from.x,outerHeight:c.outerHeight*w.from.y,outerWidth:c.outerWidth*w.from.x},d.to={height:c.height*w.to.y,width:c.width*w.to.x,outerHeight:c.height*w.to.y,outerWidth:c.width*w.to.x},w.from.y!==w.to.y&&(d.from=b.effects.setTransition(d,J,w.from.y,d.from),d.to=b.effects.setTransition(d,J,w.to.y,d.to)),w.from.x!==w.to.x&&(d.from=b.effects.setTransition(d,F,w.from.x,d.from),d.to=b.effects.setTransition(d,F,w.to.x,d.to)),d.css(d.from),d.animate(d.to,q.duration,q.easing,function(){I&&b.effects.restore(d,H)})})}A.animate(A.to,{queue:!1,duration:q.duration,easing:q.easing,complete:function(){A.to.opacity===0&&A.css("opacity",A.from.opacity),z==="hide"&&A.hide(),b.effects.restore(A,e),I||(G==="static"?A.css({position:"relative",top:A.to.top,left:A.to.left}):b.each(["top","left"],function(d,c){A.css(c,function(g,l){var h=parseInt(l,10),f=d?A.to.left:A.to.top;return l==="auto"?f+"px":h+f+"px"})})),b.effects.removeWrapper(A),B()}})}})(jQuery);(function(e){var b={},k,m,o,j=e.browser.msie&&/MSIE\s(5\.5|6\.)/.test(navigator.userAgent),a=false;e.tooltip={blocked:false,defaults:{delay:200,fade:false,showURL:true,extraClass:"",top:15,left:15,id:"tooltip"},block:function(){e.tooltip.blocked=!e.tooltip.blocked}};e.fn.extend({tooltip:function(p){p=e.extend({},e.tooltip.defaults,p);h(p);return this.each(function(){e.data(this,"tooltip",p);this.tOpacity=b.parent.css("opacity");this.tooltipText=this.title;e(this).removeAttr("title");this.alt=""}).mouseover(l).mouseout(f).click(f)},fixPNG:j?function(){return this.each(function(){var p=e(this).css("backgroundImage");if(p.match(/^url\(["']?(.*\.png)["']?\)$/i)){p=RegExp.$1;e(this).css({backgroundImage:"none",filter:"progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled=true, sizingMethod=crop, src='"+p+"')"}).each(function(){var q=e(this).css("position");if(q!="absolute"&&q!="relative"){e(this).css("position","relative")}})}})}:function(){return this},unfixPNG:j?function(){return this.each(function(){e(this).css({filter:"",backgroundImage:""})})}:function(){return this},hideWhenEmpty:function(){return this.each(function(){e(this)[e(this).html()?"show":"hide"]()})},url:function(){return this.attr("href")||this.attr("src")}});function h(p){if(b.parent){return}b.parent=e('<div id="'+p.id+'"><div class="tooltipInner"><div class="tooltipPointer"></div><h3></h3><div class="body"></div><div class="url"></div></div></div>').appendTo(document.body).hide();if(e.fn.bgiframe){b.parent.bgiframe()}b.title=e("h3",b.parent);b.body=e("div.body",b.parent);b.url=e("div.url",b.parent)}function c(p){return e.data(p,"tooltip")}function g(p){if(c(this).delay){o=setTimeout(n,c(this).delay)}else{n()}a=!!c(this).track;e(document.body).bind("mousemove",d);d(p)}function l(){if(e.tooltip.blocked||this==k||(!this.tooltipText&&!c(this).bodyHandler)){return}k=this;m=this.tooltipText;if(c(this).bodyHandler){b.title.hide();var s=c(this).bodyHandler.call(this);if(s.nodeType||s.jquery){b.body.empty().append(s)}else{b.body.html(s)}b.body.show()}else{if(c(this).showBody){var r=m.split(c(this).showBody);b.title.html(r.shift()).show();b.body.empty();for(var q=0,p;(p=r[q]);q++){if(q>0){b.body.append("<br/>")}b.body.append(p)}b.body.hideWhenEmpty()}else{b.title.html(m).show();b.body.hide()}}if(c(this).showURL&&e(this).url()){b.url.html(e(this).url().replace("http://","")).show()}else{b.url.hide()}b.parent.addClass(c(this).extraClass);if(c(this).fixPNG){b.parent.fixPNG()}g.apply(this,arguments)}function n(){o=null;if((!j||!e.fn.bgiframe)&&c(k).fade){if(b.parent.is(":animated")){b.parent.stop().show().fadeTo(c(k).fade,k.tOpacity)}else{b.parent.is(":visible")?b.parent.fadeTo(c(k).fade,k.tOpacity):b.parent.fadeIn(c(k).fade)}}else{b.parent.show()}d()}function d(s){if(e.tooltip.blocked){return}if(s&&s.target.tagName=="OPTION"){return}if(!a&&b.parent.is(":visible")){e(document.body).unbind("mousemove",d)}if(k==null){e(document.body).unbind("mousemove",d);return}b.parent.removeClass("viewport-right").removeClass("viewport-bottom");var u=b.parent[0].offsetLeft;var t=b.parent[0].offsetTop;if(s){u=s.pageX+c(k).left;t=s.pageY+c(k).top;var q="auto";if(c(k).positionLeft){q=e(window).width()-u;u="auto"}b.parent.css({left:u,right:q,top:t})}var p=i(),r=b.parent[0];if(p.x+p.cx<r.offsetLeft+r.offsetWidth){u-=r.offsetWidth+20+c(k).left;b.parent.css({left:u+"px"}).addClass("viewport-right")}if(p.y+p.cy<r.offsetTop+r.offsetHeight){t-=r.offsetHeight+20+c(k).top;b.parent.css({top:t+"px"}).addClass("viewport-bottom")}}function i(){return{x:e(window).scrollLeft(),y:e(window).scrollTop(),cx:e(window).width(),cy:e(window).height()}}function f(r){if(e.tooltip.blocked){return}if(o){clearTimeout(o)}k=null;var q=c(this);function p(){b.parent.removeClass(q.extraClass).hide().css("opacity","")}if((!j||!e.fn.bgiframe)&&q.fade){if(b.parent.is(":animated")){b.parent.stop().fadeTo(q.fade,0,p)}else{b.parent.stop().fadeOut(q.fade,p)}}else{p()}if(c(this).fixPNG){b.parent.unfixPNG()}}})(jQuery);(function(a){a.fn.hoverIntent=function(k,j){var l={sensitivity:7,interval:100,timeout:0};l=a.extend(l,j?{over:k,out:j}:k);var n,m,h,d;var e=function(f){n=f.pageX;m=f.pageY};var c=function(g,f){f.hoverIntent_t=clearTimeout(f.hoverIntent_t);if((Math.abs(h-n)+Math.abs(d-m))<l.sensitivity){a(f).unbind("mousemove",e);f.hoverIntent_s=1;return l.over.apply(f,[g])}else{h=n;d=m;f.hoverIntent_t=setTimeout(function(){c(g,f)},l.interval)}};var i=function(g,f){f.hoverIntent_t=clearTimeout(f.hoverIntent_t);f.hoverIntent_s=0;return l.out.apply(f,[g])};var b=function(o){var g=jQuery.extend({},o);var f=this;if(f.hoverIntent_t){f.hoverIntent_t=clearTimeout(f.hoverIntent_t)}if(o.type=="mouseenter"){h=g.pageX;d=g.pageY;a(f).bind("mousemove",e);if(f.hoverIntent_s!=1){f.hoverIntent_t=setTimeout(function(){c(g,f)},l.interval)}}else{a(f).unbind("mousemove",e);if(f.hoverIntent_s==1){f.hoverIntent_t=setTimeout(function(){i(g,f)},l.timeout)}}};return this.bind("mouseenter",b).bind("mouseleave",b)}})(jQuery);
/*!
 * jQuery UI Slider 1.8.21
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Slider
 *
 * Depends:
 *	jquery.ui.core.js
 *	jquery.ui.mouse.js
 *	jquery.ui.widget.js
 */
(function(b,c){var a=5;b.widget("ui.slider",b.ui.mouse,{widgetEventPrefix:"slide",options:{animate:false,distance:0,max:100,min:0,orientation:"horizontal",range:false,step:1,value:0,values:null},_create:function(){var e=this,k=this.options,j=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),h="<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",d=(k.values&&k.values.length)||1,g=[];this._keySliding=false;this._mouseSliding=false;this._animateOff=true;this._handleIndex=null;this._detectOrientation();this._mouseInit();this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget ui-widget-content ui-corner-all"+(k.disabled?" ui-slider-disabled ui-disabled":""));this.range=b([]);if(k.range){if(k.range===true){if(!k.values){k.values=[this._valueMin(),this._valueMin()]}if(k.values.length&&k.values.length!==2){k.values=[k.values[0],k.values[0]]}}this.range=b("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header"+((k.range==="min"||k.range==="max")?" ui-slider-range-"+k.range:""))}for(var f=j.length;f<d;f+=1){g.push(h)}this.handles=j.add(b(g.join("")).appendTo(e.element));this.handle=this.handles.eq(0);this.handles.add(this.range).filter("a").click(function(i){i.preventDefault()}).hover(function(){if(!k.disabled){b(this).addClass("ui-state-hover")}},function(){b(this).removeClass("ui-state-hover")}).focus(function(){if(!k.disabled){b(".ui-slider .ui-state-focus").removeClass("ui-state-focus");b(this).addClass("ui-state-focus")}else{b(this).blur()}}).blur(function(){b(this).removeClass("ui-state-focus")});this.handles.each(function(l){b(this).data("index.ui-slider-handle",l)});this.handles.keydown(function(o){var l=b(this).data("index.ui-slider-handle"),p,m,i,n;if(e.options.disabled){return}switch(o.keyCode){case b.ui.keyCode.HOME:case b.ui.keyCode.END:case b.ui.keyCode.PAGE_UP:case b.ui.keyCode.PAGE_DOWN:case b.ui.keyCode.UP:case b.ui.keyCode.RIGHT:case b.ui.keyCode.DOWN:case b.ui.keyCode.LEFT:o.preventDefault();if(!e._keySliding){e._keySliding=true;b(this).addClass("ui-state-active");p=e._start(o,l);if(p===false){return}}break}n=e.options.step;if(e.options.values&&e.options.values.length){m=i=e.values(l)}else{m=i=e.value()}switch(o.keyCode){case b.ui.keyCode.HOME:i=e._valueMin();break;case b.ui.keyCode.END:i=e._valueMax();break;case b.ui.keyCode.PAGE_UP:i=e._trimAlignValue(m+((e._valueMax()-e._valueMin())/a));break;case b.ui.keyCode.PAGE_DOWN:i=e._trimAlignValue(m-((e._valueMax()-e._valueMin())/a));break;case b.ui.keyCode.UP:case b.ui.keyCode.RIGHT:if(m===e._valueMax()){return}i=e._trimAlignValue(m+n);break;case b.ui.keyCode.DOWN:case b.ui.keyCode.LEFT:if(m===e._valueMin()){return}i=e._trimAlignValue(m-n);break}e._slide(o,l,i)}).keyup(function(l){var i=b(this).data("index.ui-slider-handle");if(e._keySliding){e._keySliding=false;e._stop(l,i);e._change(l,i);b(this).removeClass("ui-state-active")}});this._refreshValue();this._animateOff=false},destroy:function(){this.handles.remove();this.range.remove();this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all").removeData("slider").unbind(".slider");this._mouseDestroy();return this},_mouseCapture:function(f){var g=this.options,j,l,e,h,n,k,m,i,d;if(g.disabled){return false}this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()};this.elementOffset=this.element.offset();j={x:f.pageX,y:f.pageY};l=this._normValueFromMouse(j);e=this._valueMax()-this._valueMin()+1;n=this;this.handles.each(function(o){var p=Math.abs(l-n.values(o));if(e>p){e=p;h=b(this);k=o}});if(g.range===true&&this.values(1)===g.min){k+=1;h=b(this.handles[k])}m=this._start(f,k);if(m===false){return false}this._mouseSliding=true;n._handleIndex=k;h.addClass("ui-state-active").focus();i=h.offset();d=!b(f.target).parents().andSelf().is(".ui-slider-handle");this._clickOffset=d?{left:0,top:0}:{left:f.pageX-i.left-(h.width()/2),top:f.pageY-i.top-(h.height()/2)-(parseInt(h.css("borderTopWidth"),10)||0)-(parseInt(h.css("borderBottomWidth"),10)||0)+(parseInt(h.css("marginTop"),10)||0)};if(!this.handles.hasClass("ui-state-hover")){this._slide(f,k,l)}this._animateOff=true;return true},_mouseStart:function(d){return true},_mouseDrag:function(f){var d={x:f.pageX,y:f.pageY},e=this._normValueFromMouse(d);this._slide(f,this._handleIndex,e);return false},_mouseStop:function(d){this.handles.removeClass("ui-state-active");this._mouseSliding=false;this._stop(d,this._handleIndex);this._change(d,this._handleIndex);this._handleIndex=null;this._clickOffset=null;this._animateOff=false;return false},_detectOrientation:function(){this.orientation=(this.options.orientation==="vertical")?"vertical":"horizontal"},_normValueFromMouse:function(e){var d,h,g,f,i;if(this.orientation==="horizontal"){d=this.elementSize.width;h=e.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)}else{d=this.elementSize.height;h=e.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)}g=(h/d);if(g>1){g=1}if(g<0){g=0}if(this.orientation==="vertical"){g=1-g}f=this._valueMax()-this._valueMin();i=this._valueMin()+g*f;return this._trimAlignValue(i)},_start:function(f,e){var d={handle:this.handles[e],value:this.value()};if(this.options.values&&this.options.values.length){d.value=this.values(e);d.values=this.values()}return this._trigger("start",f,d)},_slide:function(h,g,f){var d,e,i;if(this.options.values&&this.options.values.length){d=this.values(g?0:1);if((this.options.values.length===2&&this.options.range===true)&&((g===0&&f>d)||(g===1&&f<d))){f=d}if(f!==this.values(g)){e=this.values();e[g]=f;i=this._trigger("slide",h,{handle:this.handles[g],value:f,values:e});d=this.values(g?0:1);if(i!==false){this.values(g,f,true)}}}else{if(f!==this.value()){i=this._trigger("slide",h,{handle:this.handles[g],value:f});if(i!==false){this.value(f)}}}},_stop:function(f,e){var d={handle:this.handles[e],value:this.value()};if(this.options.values&&this.options.values.length){d.value=this.values(e);d.values=this.values()}this._trigger("stop",f,d)},_change:function(f,e){if(!this._keySliding&&!this._mouseSliding){var d={handle:this.handles[e],value:this.value()};if(this.options.values&&this.options.values.length){d.value=this.values(e);d.values=this.values()}this._trigger("change",f,d)}},value:function(d){if(arguments.length){this.options.value=this._trimAlignValue(d);this._refreshValue();this._change(null,0);return}return this._value()},values:function(e,h){var g,d,f;if(arguments.length>1){this.options.values[e]=this._trimAlignValue(h);this._refreshValue();this._change(null,e);return}if(arguments.length){if(b.isArray(arguments[0])){g=this.options.values;d=arguments[0];for(f=0;f<g.length;f+=1){g[f]=this._trimAlignValue(d[f]);this._change(null,f)}this._refreshValue()}else{if(this.options.values&&this.options.values.length){return this._values(e)}else{return this.value()}}}else{return this._values()}},_setOption:function(e,f){var d,g=0;if(b.isArray(this.options.values)){g=this.options.values.length}b.Widget.prototype._setOption.apply(this,arguments);switch(e){case"disabled":if(f){this.handles.filter(".ui-state-focus").blur();this.handles.removeClass("ui-state-hover");this.handles.propAttr("disabled",true);this.element.addClass("ui-disabled")}else{this.handles.propAttr("disabled",false);this.element.removeClass("ui-disabled")}break;case"orientation":this._detectOrientation();this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation);this._refreshValue();break;case"value":this._animateOff=true;this._refreshValue();this._change(null,0);this._animateOff=false;break;case"values":this._animateOff=true;this._refreshValue();for(d=0;d<g;d+=1){this._change(null,d)}this._animateOff=false;break}},_value:function(){var d=this.options.value;d=this._trimAlignValue(d);return d},_values:function(d){var g,f,e;if(arguments.length){g=this.options.values[d];g=this._trimAlignValue(g);return g}else{f=this.options.values.slice();for(e=0;e<f.length;e+=1){f[e]=this._trimAlignValue(f[e])}return f}},_trimAlignValue:function(g){if(g<=this._valueMin()){return this._valueMin()}if(g>=this._valueMax()){return this._valueMax()}var d=(this.options.step>0)?this.options.step:1,f=(g-this._valueMin())%d,e=g-f;if(Math.abs(f)*2>=d){e+=(f>0)?d:(-d)}return parseFloat(e.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var g=this.options.range,f=this.options,m=this,e=(!this._animateOff)?f.animate:false,h,d={},i,k,j,l;if(this.options.values&&this.options.values.length){this.handles.each(function(o,n){h=(m.values(o)-m._valueMin())/(m._valueMax()-m._valueMin())*100;d[m.orientation==="horizontal"?"left":"bottom"]=h+"%";b(this).stop(1,1)[e?"animate":"css"](d,f.animate);if(m.options.range===true){if(m.orientation==="horizontal"){if(o===0){m.range.stop(1,1)[e?"animate":"css"]({left:h+"%"},f.animate)}if(o===1){m.range[e?"animate":"css"]({width:(h-i)+"%"},{queue:false,duration:f.animate})}}else{if(o===0){m.range.stop(1,1)[e?"animate":"css"]({bottom:(h)+"%"},f.animate)}if(o===1){m.range[e?"animate":"css"]({height:(h-i)+"%"},{queue:false,duration:f.animate})}}}i=h})}else{k=this.value();j=this._valueMin();l=this._valueMax();h=(l!==j)?(k-j)/(l-j)*100:0;d[m.orientation==="horizontal"?"left":"bottom"]=h+"%";this.handle.stop(1,1)[e?"animate":"css"](d,f.animate);if(g==="min"&&this.orientation==="horizontal"){this.range.stop(1,1)[e?"animate":"css"]({width:h+"%"},f.animate)}if(g==="max"&&this.orientation==="horizontal"){this.range[e?"animate":"css"]({width:(100-h)+"%"},{queue:false,duration:f.animate})}if(g==="min"&&this.orientation==="vertical"){this.range.stop(1,1)[e?"animate":"css"]({height:h+"%"},f.animate)}if(g==="max"&&this.orientation==="vertical"){this.range[e?"animate":"css"]({height:(100-h)+"%"},{queue:false,duration:f.animate})}}}});b.extend(b.ui.slider,{version:"1.8.21"})}(jQuery));
/*!
 * jQuery UI Datepicker 1.8.21
 *
 * Copyright 2012, AUTHORS.txt (http://jqueryui.com/about)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * http://docs.jquery.com/UI/Datepicker
 *
 * Depends:
 *	jquery.ui.core.js
 */
(function($,undefined){$.extend($.ui,{datepicker:{version:"1.8.21"}});var PROP_NAME="datepicker";var dpuuid=new Date().getTime();var instActive;function Datepicker(){this.debug=false;this._curInst=null;this._keyEvent=false;this._disabledInputs=[];this._datepickerShowing=false;this._inDialog=false;this._mainDivId="ui-datepicker-div";this._inlineClass="ui-datepicker-inline";this._appendClass="ui-datepicker-append";this._triggerClass="ui-datepicker-trigger";this._dialogClass="ui-datepicker-dialog";this._disableClass="ui-datepicker-disabled";this._unselectableClass="ui-datepicker-unselectable";this._currentClass="ui-datepicker-current-day";this._dayOverClass="ui-datepicker-days-cell-over";this.regional=[];this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:false,showMonthAfterYear:false,yearSuffix:""};this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"Select a Date",buttonImage:"",buttonImageOnly:false,hideIfNoPrevNext:false,navigationAsDateFormat:false,gotoCurrent:false,changeMonth:false,changeYear:false,yearRange:"c-10:c+10",showOtherMonths:false,selectOtherMonths:false,showWeek:false,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:true,showButtonPanel:false,autoSize:false,disabled:false};$.extend(this._defaults,this.regional[""]);this.dpDiv=bindHover($('<div id="'+this._mainDivId+'" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))}$.extend(Datepicker.prototype,{markerClassName:"hasDatepicker",maxRows:4,log:function(){if(this.debug){console.log.apply("",arguments)}},_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(settings){extendRemove(this._defaults,settings||{});return this},_attachDatepicker:function(target,settings){var inlineSettings=null;for(var attrName in this._defaults){var attrValue=target.getAttribute("date:"+attrName);if(attrValue){inlineSettings=inlineSettings||{};try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}}var nodeName=target.nodeName.toLowerCase();var inline=(nodeName=="div"||nodeName=="span");if(!target.id){this.uuid+=1;target.id="dp"+this.uuid}var inst=this._newInst($(target),inline);inst.settings=$.extend({},settings||{},inlineSettings||{});if(nodeName=="input"){this._connectDatepicker(target,inst)}else{if(inline){this._inlineDatepicker(target,inst)}}},_newInst:function(target,inline){var id=target[0].id.replace(/([^A-Za-z0-9_-])/g,"\\\\$1");return{id:id,input:target,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:inline,dpDiv:(!inline?this.dpDiv:bindHover($('<div class="'+this._inlineClass+' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')))}},_connectDatepicker:function(target,inst){var input=$(target);inst.append=$([]);inst.trigger=$([]);if(input.hasClass(this.markerClassName)){return}this._attachments(input,inst);input.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker",function(event,key,value){inst.settings[key]=value}).bind("getData.datepicker",function(event,key){return this._get(inst,key)});this._autoSize(inst);$.data(target,PROP_NAME,inst);if(inst.settings.disabled){this._disableDatepicker(target)}},_attachments:function(input,inst){var appendText=this._get(inst,"appendText");var isRTL=this._get(inst,"isRTL");if(inst.append){inst.append.remove()}if(appendText){inst.append=$('<span class="'+this._appendClass+'">'+appendText+"</span>");input[isRTL?"before":"after"](inst.append)}input.unbind("focus",this._showDatepicker);if(inst.trigger){inst.trigger.remove()}var showOn=this._get(inst,"showOn");if(showOn=="focus"||showOn=="both"){input.focus(this._showDatepicker)}if(showOn=="button"||showOn=="both"){var buttonText=this._get(inst,"buttonText");var buttonImage=this._get(inst,"buttonImage");inst.trigger=$(this._get(inst,"buttonImageOnly")?$("<img/>").addClass(this._triggerClass).attr({src:buttonImage,alt:buttonText,title:buttonText}):$('<button type="button"></button>').addClass(this._triggerClass).html(buttonImage==""?buttonText:$("<img/>").attr({src:buttonImage,alt:buttonText,title:buttonText})));input[isRTL?"before":"after"](inst.trigger);inst.trigger.click(function(){if($.datepicker._datepickerShowing&&$.datepicker._lastInput==input[0]){$.datepicker._hideDatepicker()}else{if($.datepicker._datepickerShowing&&$.datepicker._lastInput!=input[0]){$.datepicker._hideDatepicker();$.datepicker._showDatepicker(input[0])}else{$.datepicker._showDatepicker(input[0])}}return false})}},_autoSize:function(inst){if(this._get(inst,"autoSize")&&!inst.inline){var date=new Date(2009,12-1,20);var dateFormat=this._get(inst,"dateFormat");if(dateFormat.match(/[DM]/)){var findMax=function(names){var max=0;var maxI=0;for(var i=0;i<names.length;i++){if(names[i].length>max){max=names[i].length;maxI=i}}return maxI};date.setMonth(findMax(this._get(inst,(dateFormat.match(/MM/)?"monthNames":"monthNamesShort"))));date.setDate(findMax(this._get(inst,(dateFormat.match(/DD/)?"dayNames":"dayNamesShort")))+20-date.getDay())}inst.input.attr("size",this._formatDate(inst,date).length)}},_inlineDatepicker:function(target,inst){var divSpan=$(target);if(divSpan.hasClass(this.markerClassName)){return}divSpan.addClass(this.markerClassName).append(inst.dpDiv).bind("setData.datepicker",function(event,key,value){inst.settings[key]=value}).bind("getData.datepicker",function(event,key){return this._get(inst,key)});$.data(target,PROP_NAME,inst);this._setDate(inst,this._getDefaultDate(inst),true);this._updateDatepicker(inst);this._updateAlternate(inst);if(inst.settings.disabled){this._disableDatepicker(target)}inst.dpDiv.css("display","block")},_dialogDatepicker:function(input,date,onSelect,settings,pos){var inst=this._dialogInst;if(!inst){this.uuid+=1;var id="dp"+this.uuid;this._dialogInput=$('<input type="text" id="'+id+'" style="position: absolute; top: -100px; width: 0px; z-index: -10;"/>');this._dialogInput.keydown(this._doKeyDown);$("body").append(this._dialogInput);inst=this._dialogInst=this._newInst(this._dialogInput,false);inst.settings={};$.data(this._dialogInput[0],PROP_NAME,inst)}extendRemove(inst.settings,settings||{});date=(date&&date.constructor==Date?this._formatDate(inst,date):date);this._dialogInput.val(date);this._pos=(pos?(pos.length?pos:[pos.pageX,pos.pageY]):null);if(!this._pos){var browserWidth=document.documentElement.clientWidth;var browserHeight=document.documentElement.clientHeight;var scrollX=document.documentElement.scrollLeft||document.body.scrollLeft;var scrollY=document.documentElement.scrollTop||document.body.scrollTop;this._pos=[(browserWidth/2)-100+scrollX,(browserHeight/2)-150+scrollY]}this._dialogInput.css("left",(this._pos[0]+20)+"px").css("top",this._pos[1]+"px");inst.settings.onSelect=onSelect;this._inDialog=true;this.dpDiv.addClass(this._dialogClass);this._showDatepicker(this._dialogInput[0]);if($.blockUI){$.blockUI(this.dpDiv)}$.data(this._dialogInput[0],PROP_NAME,inst);return this},_destroyDatepicker:function(target){var $target=$(target);var inst=$.data(target,PROP_NAME);if(!$target.hasClass(this.markerClassName)){return}var nodeName=target.nodeName.toLowerCase();$.removeData(target,PROP_NAME);if(nodeName=="input"){inst.append.remove();inst.trigger.remove();$target.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)}else{if(nodeName=="div"||nodeName=="span"){$target.removeClass(this.markerClassName).empty()}}},_enableDatepicker:function(target){var $target=$(target);var inst=$.data(target,PROP_NAME);if(!$target.hasClass(this.markerClassName)){return}var nodeName=target.nodeName.toLowerCase();if(nodeName=="input"){target.disabled=false;inst.trigger.filter("button").each(function(){this.disabled=false}).end().filter("img").css({opacity:"1.0",cursor:""})}else{if(nodeName=="div"||nodeName=="span"){var inline=$target.children("."+this._inlineClass);inline.children().removeClass("ui-state-disabled");inline.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled")}}this._disabledInputs=$.map(this._disabledInputs,function(value){return(value==target?null:value)})},_disableDatepicker:function(target){var $target=$(target);var inst=$.data(target,PROP_NAME);if(!$target.hasClass(this.markerClassName)){return}var nodeName=target.nodeName.toLowerCase();if(nodeName=="input"){target.disabled=true;inst.trigger.filter("button").each(function(){this.disabled=true}).end().filter("img").css({opacity:"0.5",cursor:"default"})}else{if(nodeName=="div"||nodeName=="span"){var inline=$target.children("."+this._inlineClass);inline.children().addClass("ui-state-disabled");inline.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled","disabled")}}this._disabledInputs=$.map(this._disabledInputs,function(value){return(value==target?null:value)});this._disabledInputs[this._disabledInputs.length]=target},_isDisabledDatepicker:function(target){if(!target){return false}for(var i=0;i<this._disabledInputs.length;i++){if(this._disabledInputs[i]==target){return true}}return false},_getInst:function(target){try{return $.data(target,PROP_NAME)}catch(err){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(target,name,value){var inst=this._getInst(target);if(arguments.length==2&&typeof name=="string"){return(name=="defaults"?$.extend({},$.datepicker._defaults):(inst?(name=="all"?$.extend({},inst.settings):this._get(inst,name)):null))}var settings=name||{};if(typeof name=="string"){settings={};settings[name]=value}if(inst){if(this._curInst==inst){this._hideDatepicker()}var date=this._getDateDatepicker(target,true);var minDate=this._getMinMaxDate(inst,"min");var maxDate=this._getMinMaxDate(inst,"max");extendRemove(inst.settings,settings);if(minDate!==null&&settings.dateFormat!==undefined&&settings.minDate===undefined){inst.settings.minDate=this._formatDate(inst,minDate)}if(maxDate!==null&&settings.dateFormat!==undefined&&settings.maxDate===undefined){inst.settings.maxDate=this._formatDate(inst,maxDate)}this._attachments($(target),inst);this._autoSize(inst);this._setDate(inst,date);this._updateAlternate(inst);this._updateDatepicker(inst)}},_changeDatepicker:function(target,name,value){this._optionDatepicker(target,name,value)},_refreshDatepicker:function(target){var inst=this._getInst(target);if(inst){this._updateDatepicker(inst)}},_setDateDatepicker:function(target,date){var inst=this._getInst(target);if(inst){this._setDate(inst,date);this._updateDatepicker(inst);this._updateAlternate(inst)}},_getDateDatepicker:function(target,noDefault){var inst=this._getInst(target);if(inst&&!inst.inline){this._setDateFromField(inst,noDefault)}return(inst?this._getDate(inst):null)},_doKeyDown:function(event){var inst=$.datepicker._getInst(event.target);var handled=true;var isRTL=inst.dpDiv.is(".ui-datepicker-rtl");inst._keyEvent=true;if($.datepicker._datepickerShowing){switch(event.keyCode){case 9:$.datepicker._hideDatepicker();handled=false;break;case 13:var sel=$("td."+$.datepicker._dayOverClass+":not(."+$.datepicker._currentClass+")",inst.dpDiv);if(sel[0]){$.datepicker._selectDay(event.target,inst.selectedMonth,inst.selectedYear,sel[0])}var onSelect=$.datepicker._get(inst,"onSelect");if(onSelect){var dateStr=$.datepicker._formatDate(inst);onSelect.apply((inst.input?inst.input[0]:null),[dateStr,inst])}else{$.datepicker._hideDatepicker()}return false;break;case 27:$.datepicker._hideDatepicker();break;case 33:$.datepicker._adjustDate(event.target,(event.ctrlKey?-$.datepicker._get(inst,"stepBigMonths"):-$.datepicker._get(inst,"stepMonths")),"M");break;case 34:$.datepicker._adjustDate(event.target,(event.ctrlKey?+$.datepicker._get(inst,"stepBigMonths"):+$.datepicker._get(inst,"stepMonths")),"M");break;case 35:if(event.ctrlKey||event.metaKey){$.datepicker._clearDate(event.target)}handled=event.ctrlKey||event.metaKey;break;case 36:if(event.ctrlKey||event.metaKey){$.datepicker._gotoToday(event.target)}handled=event.ctrlKey||event.metaKey;break;case 37:if(event.ctrlKey||event.metaKey){$.datepicker._adjustDate(event.target,(isRTL?+1:-1),"D")}handled=event.ctrlKey||event.metaKey;if(event.originalEvent.altKey){$.datepicker._adjustDate(event.target,(event.ctrlKey?-$.datepicker._get(inst,"stepBigMonths"):-$.datepicker._get(inst,"stepMonths")),"M")}break;case 38:if(event.ctrlKey||event.metaKey){$.datepicker._adjustDate(event.target,-7,"D")}handled=event.ctrlKey||event.metaKey;break;case 39:if(event.ctrlKey||event.metaKey){$.datepicker._adjustDate(event.target,(isRTL?-1:+1),"D")}handled=event.ctrlKey||event.metaKey;if(event.originalEvent.altKey){$.datepicker._adjustDate(event.target,(event.ctrlKey?+$.datepicker._get(inst,"stepBigMonths"):+$.datepicker._get(inst,"stepMonths")),"M")}break;case 40:if(event.ctrlKey||event.metaKey){$.datepicker._adjustDate(event.target,+7,"D")}handled=event.ctrlKey||event.metaKey;break;default:handled=false}}else{if(event.keyCode==36&&event.ctrlKey){$.datepicker._showDatepicker(this)}else{handled=false}}if(handled){event.preventDefault();event.stopPropagation()}},_doKeyPress:function(event){var inst=$.datepicker._getInst(event.target);if($.datepicker._get(inst,"constrainInput")){var chars=$.datepicker._possibleChars($.datepicker._get(inst,"dateFormat"));var chr=String.fromCharCode(event.charCode==undefined?event.keyCode:event.charCode);return event.ctrlKey||event.metaKey||(chr<" "||!chars||chars.indexOf(chr)>-1)}},_doKeyUp:function(event){var inst=$.datepicker._getInst(event.target);if(inst.input.val()!=inst.lastVal){try{var date=$.datepicker.parseDate($.datepicker._get(inst,"dateFormat"),(inst.input?inst.input.val():null),$.datepicker._getFormatConfig(inst));if(date){$.datepicker._setDateFromField(inst);$.datepicker._updateAlternate(inst);$.datepicker._updateDatepicker(inst)}}catch(err){$.datepicker.log(err)}}return true},_showDatepicker:function(input){input=input.target||input;if(input.nodeName.toLowerCase()!="input"){input=$("input",input.parentNode)[0]}if($.datepicker._isDisabledDatepicker(input)||$.datepicker._lastInput==input){return}var inst=$.datepicker._getInst(input);if($.datepicker._curInst&&$.datepicker._curInst!=inst){$.datepicker._curInst.dpDiv.stop(true,true);if(inst&&$.datepicker._datepickerShowing){$.datepicker._hideDatepicker($.datepicker._curInst.input[0])}}var beforeShow=$.datepicker._get(inst,"beforeShow");var beforeShowSettings=beforeShow?beforeShow.apply(input,[input,inst]):{};if(beforeShowSettings===false){return}extendRemove(inst.settings,beforeShowSettings);inst.lastVal=null;$.datepicker._lastInput=input;$.datepicker._setDateFromField(inst);if($.datepicker._inDialog){input.value=""}if(!$.datepicker._pos){$.datepicker._pos=$.datepicker._findPos(input);$.datepicker._pos[1]+=input.offsetHeight}var isFixed=false;$(input).parents().each(function(){isFixed|=$(this).css("position")=="fixed";return !isFixed});if(isFixed&&$.browser.opera){$.datepicker._pos[0]-=document.documentElement.scrollLeft;$.datepicker._pos[1]-=document.documentElement.scrollTop}var offset={left:$.datepicker._pos[0],top:$.datepicker._pos[1]};$.datepicker._pos=null;inst.dpDiv.empty();inst.dpDiv.css({position:"absolute",display:"block",top:"-1000px"});$.datepicker._updateDatepicker(inst);offset=$.datepicker._checkOffset(inst,offset,isFixed);inst.dpDiv.css({position:($.datepicker._inDialog&&$.blockUI?"static":(isFixed?"fixed":"absolute")),display:"none",left:offset.left+"px",top:offset.top+"px"});if(!inst.inline){var showAnim=$.datepicker._get(inst,"showAnim");var duration=$.datepicker._get(inst,"duration");var postProcess=function(){var cover=inst.dpDiv.find("iframe.ui-datepicker-cover");if(!!cover.length){var borders=$.datepicker._getBorders(inst.dpDiv);cover.css({left:-borders[0],top:-borders[1],width:inst.dpDiv.outerWidth(),height:inst.dpDiv.outerHeight()})}};inst.dpDiv.zIndex($(input).zIndex()+1);$.datepicker._datepickerShowing=true;if($.effects&&$.effects[showAnim]){inst.dpDiv.show(showAnim,$.datepicker._get(inst,"showOptions"),duration,postProcess)}else{inst.dpDiv[showAnim||"show"]((showAnim?duration:null),postProcess)}if(!showAnim||!duration){postProcess()}if(inst.input.is(":visible")&&!inst.input.is(":disabled")){inst.input.focus()}$.datepicker._curInst=inst}},_updateDatepicker:function(inst){var self=this;self.maxRows=4;var borders=$.datepicker._getBorders(inst.dpDiv);instActive=inst;inst.dpDiv.empty().append(this._generateHTML(inst));var cover=inst.dpDiv.find("iframe.ui-datepicker-cover");if(!!cover.length){cover.css({left:-borders[0],top:-borders[1],width:inst.dpDiv.outerWidth(),height:inst.dpDiv.outerHeight()})}inst.dpDiv.find("."+this._dayOverClass+" a").mouseover();var numMonths=this._getNumberOfMonths(inst);var cols=numMonths[1];var width=17;inst.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");if(cols>1){inst.dpDiv.addClass("ui-datepicker-multi-"+cols).css("width",(width*cols)+"em")}inst.dpDiv[(numMonths[0]!=1||numMonths[1]!=1?"add":"remove")+"Class"]("ui-datepicker-multi");inst.dpDiv[(this._get(inst,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl");if(inst==$.datepicker._curInst&&$.datepicker._datepickerShowing&&inst.input&&inst.input.is(":visible")&&!inst.input.is(":disabled")&&inst.input[0]!=document.activeElement){inst.input.focus()}if(inst.yearshtml){var origyearshtml=inst.yearshtml;setTimeout(function(){if(origyearshtml===inst.yearshtml&&inst.yearshtml){inst.dpDiv.find("select.ui-datepicker-year:first").replaceWith(inst.yearshtml)}origyearshtml=inst.yearshtml=null},0)}},_getBorders:function(elem){var convert=function(value){return{thin:1,medium:2,thick:3}[value]||value};return[parseFloat(convert(elem.css("border-left-width"))),parseFloat(convert(elem.css("border-top-width")))]},_checkOffset:function(inst,offset,isFixed){var dpWidth=inst.dpDiv.outerWidth();var dpHeight=inst.dpDiv.outerHeight();var inputWidth=inst.input?inst.input.outerWidth():0;var inputHeight=inst.input?inst.input.outerHeight():0;var viewWidth=document.documentElement.clientWidth+$(document).scrollLeft();var viewHeight=document.documentElement.clientHeight+$(document).scrollTop();offset.left-=(this._get(inst,"isRTL")?(dpWidth-inputWidth):0);offset.left-=(isFixed&&offset.left==inst.input.offset().left)?$(document).scrollLeft():0;offset.top-=(isFixed&&offset.top==(inst.input.offset().top+inputHeight))?$(document).scrollTop():0;offset.left-=Math.min(offset.left,(offset.left+dpWidth>viewWidth&&viewWidth>dpWidth)?Math.abs(offset.left+dpWidth-viewWidth):0);offset.top-=Math.min(offset.top,(offset.top+dpHeight>viewHeight&&viewHeight>dpHeight)?Math.abs(dpHeight+inputHeight):0);return offset},_findPos:function(obj){var inst=this._getInst(obj);var isRTL=this._get(inst,"isRTL");while(obj&&(obj.type=="hidden"||obj.nodeType!=1||$.expr.filters.hidden(obj))){obj=obj[isRTL?"previousSibling":"nextSibling"]}var position=$(obj).offset();return[position.left,position.top]},_hideDatepicker:function(input){var inst=this._curInst;if(!inst||(input&&inst!=$.data(input,PROP_NAME))){return}if(this._datepickerShowing){var showAnim=this._get(inst,"showAnim");var duration=this._get(inst,"duration");var postProcess=function(){$.datepicker._tidyDialog(inst)};if($.effects&&$.effects[showAnim]){inst.dpDiv.hide(showAnim,$.datepicker._get(inst,"showOptions"),duration,postProcess)}else{inst.dpDiv[(showAnim=="slideDown"?"slideUp":(showAnim=="fadeIn"?"fadeOut":"hide"))]((showAnim?duration:null),postProcess)}if(!showAnim){postProcess()}this._datepickerShowing=false;var onClose=this._get(inst,"onClose");if(onClose){onClose.apply((inst.input?inst.input[0]:null),[(inst.input?inst.input.val():""),inst])}this._lastInput=null;if(this._inDialog){this._dialogInput.css({position:"absolute",left:"0",top:"-100px"});if($.blockUI){$.unblockUI();$("body").append(this.dpDiv)}}this._inDialog=false}},_tidyDialog:function(inst){inst.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(event){if(!$.datepicker._curInst){return}var $target=$(event.target),inst=$.datepicker._getInst($target[0]);if((($target[0].id!=$.datepicker._mainDivId&&$target.parents("#"+$.datepicker._mainDivId).length==0&&!$target.hasClass($.datepicker.markerClassName)&&!$target.closest("."+$.datepicker._triggerClass).length&&$.datepicker._datepickerShowing&&!($.datepicker._inDialog&&$.blockUI)))||($target.hasClass($.datepicker.markerClassName)&&$.datepicker._curInst!=inst)){$.datepicker._hideDatepicker()}},_adjustDate:function(id,offset,period){var target=$(id);var inst=this._getInst(target[0]);if(this._isDisabledDatepicker(target[0])){return}this._adjustInstDate(inst,offset+(period=="M"?this._get(inst,"showCurrentAtPos"):0),period);this._updateDatepicker(inst)},_gotoToday:function(id){var target=$(id);var inst=this._getInst(target[0]);if(this._get(inst,"gotoCurrent")&&inst.currentDay){inst.selectedDay=inst.currentDay;inst.drawMonth=inst.selectedMonth=inst.currentMonth;inst.drawYear=inst.selectedYear=inst.currentYear}else{var date=new Date();inst.selectedDay=date.getDate();inst.drawMonth=inst.selectedMonth=date.getMonth();inst.drawYear=inst.selectedYear=date.getFullYear()}this._notifyChange(inst);this._adjustDate(target)},_selectMonthYear:function(id,select,period){var target=$(id);var inst=this._getInst(target[0]);inst["selected"+(period=="M"?"Month":"Year")]=inst["draw"+(period=="M"?"Month":"Year")]=parseInt(select.options[select.selectedIndex].value,10);this._notifyChange(inst);this._adjustDate(target)},_selectDay:function(id,month,year,td){var target=$(id);if($(td).hasClass(this._unselectableClass)||this._isDisabledDatepicker(target[0])){return}var inst=this._getInst(target[0]);inst.selectedDay=inst.currentDay=$("a",td).html();inst.selectedMonth=inst.currentMonth=month;inst.selectedYear=inst.currentYear=year;this._selectDate(id,this._formatDate(inst,inst.currentDay,inst.currentMonth,inst.currentYear))},_clearDate:function(id){var target=$(id);var inst=this._getInst(target[0]);this._selectDate(target,"")},_selectDate:function(id,dateStr){var target=$(id);var inst=this._getInst(target[0]);dateStr=(dateStr!=null?dateStr:this._formatDate(inst));if(inst.input){inst.input.val(dateStr)}this._updateAlternate(inst);var onSelect=this._get(inst,"onSelect");if(onSelect){onSelect.apply((inst.input?inst.input[0]:null),[dateStr,inst])}else{if(inst.input){inst.input.trigger("change")}}if(inst.inline){this._updateDatepicker(inst)}else{this._hideDatepicker();this._lastInput=inst.input[0];if(typeof(inst.input[0])!="object"){inst.input.focus()}this._lastInput=null}},_updateAlternate:function(inst){var altField=this._get(inst,"altField");if(altField){var altFormat=this._get(inst,"altFormat")||this._get(inst,"dateFormat");var date=this._getDate(inst);var dateStr=this.formatDate(altFormat,date,this._getFormatConfig(inst));$(altField).each(function(){$(this).val(dateStr)})}},noWeekends:function(date){var day=date.getDay();return[(day>0&&day<6),""]},iso8601Week:function(date){var checkDate=new Date(date.getTime());checkDate.setDate(checkDate.getDate()+4-(checkDate.getDay()||7));var time=checkDate.getTime();checkDate.setMonth(0);checkDate.setDate(1);return Math.floor(Math.round((time-checkDate)/86400000)/7)+1},parseDate:function(format,value,settings){if(format==null||value==null){throw"Invalid arguments"}value=(typeof value=="object"?value.toString():value+"");if(value==""){return null}var shortYearCutoff=(settings?settings.shortYearCutoff:null)||this._defaults.shortYearCutoff;shortYearCutoff=(typeof shortYearCutoff!="string"?shortYearCutoff:new Date().getFullYear()%100+parseInt(shortYearCutoff,10));var dayNamesShort=(settings?settings.dayNamesShort:null)||this._defaults.dayNamesShort;var dayNames=(settings?settings.dayNames:null)||this._defaults.dayNames;var monthNamesShort=(settings?settings.monthNamesShort:null)||this._defaults.monthNamesShort;var monthNames=(settings?settings.monthNames:null)||this._defaults.monthNames;var year=-1;var month=-1;var day=-1;var doy=-1;var literal=false;var lookAhead=function(match){var matches=(iFormat+1<format.length&&format.charAt(iFormat+1)==match);if(matches){iFormat++}return matches};var getNumber=function(match){var isDoubled=lookAhead(match);var size=(match=="@"?14:(match=="!"?20:(match=="y"&&isDoubled?4:(match=="o"?3:2))));var digits=new RegExp("^\\d{1,"+size+"}");var num=value.substring(iValue).match(digits);if(!num){throw"Missing number at position "+iValue}iValue+=num[0].length;return parseInt(num[0],10)};var getName=function(match,shortNames,longNames){var names=$.map(lookAhead(match)?longNames:shortNames,function(v,k){return[[k,v]]}).sort(function(a,b){return -(a[1].length-b[1].length)});var index=-1;$.each(names,function(i,pair){var name=pair[1];if(value.substr(iValue,name.length).toLowerCase()==name.toLowerCase()){index=pair[0];iValue+=name.length;return false}});if(index!=-1){return index+1}else{throw"Unknown name at position "+iValue}};var checkLiteral=function(){if(value.charAt(iValue)!=format.charAt(iFormat)){throw"Unexpected literal at position "+iValue}iValue++};var iValue=0;for(var iFormat=0;iFormat<format.length;iFormat++){if(literal){if(format.charAt(iFormat)=="'"&&!lookAhead("'")){literal=false}else{checkLiteral()}}else{switch(format.charAt(iFormat)){case"d":day=getNumber("d");break;case"D":getName("D",dayNamesShort,dayNames);break;case"o":doy=getNumber("o");break;case"m":month=getNumber("m");break;case"M":month=getName("M",monthNamesShort,monthNames);break;case"y":year=getNumber("y");break;case"@":var date=new Date(getNumber("@"));year=date.getFullYear();month=date.getMonth()+1;day=date.getDate();break;case"!":var date=new Date((getNumber("!")-this._ticksTo1970)/10000);year=date.getFullYear();month=date.getMonth()+1;day=date.getDate();break;case"'":if(lookAhead("'")){checkLiteral()}else{literal=true}break;default:checkLiteral()}}}if(iValue<value.length){throw"Extra/unparsed characters found in date: "+value.substring(iValue)}if(year==-1){year=new Date().getFullYear()}else{if(year<100){year+=new Date().getFullYear()-new Date().getFullYear()%100+(year<=shortYearCutoff?0:-100)}}if(doy>-1){month=1;day=doy;do{var dim=this._getDaysInMonth(year,month-1);if(day<=dim){break}month++;day-=dim}while(true)}var date=this._daylightSavingAdjust(new Date(year,month-1,day));if(date.getFullYear()!=year||date.getMonth()+1!=month||date.getDate()!=day){throw"Invalid date"}return date},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:(((1970-1)*365+Math.floor(1970/4)-Math.floor(1970/100)+Math.floor(1970/400))*24*60*60*10000000),formatDate:function(format,date,settings){if(!date){return""}var dayNamesShort=(settings?settings.dayNamesShort:null)||this._defaults.dayNamesShort;var dayNames=(settings?settings.dayNames:null)||this._defaults.dayNames;var monthNamesShort=(settings?settings.monthNamesShort:null)||this._defaults.monthNamesShort;var monthNames=(settings?settings.monthNames:null)||this._defaults.monthNames;var lookAhead=function(match){var matches=(iFormat+1<format.length&&format.charAt(iFormat+1)==match);if(matches){iFormat++}return matches};var formatNumber=function(match,value,len){var num=""+value;if(lookAhead(match)){while(num.length<len){num="0"+num}}return num};var formatName=function(match,value,shortNames,longNames){return(lookAhead(match)?longNames[value]:shortNames[value])};var output="";var literal=false;if(date){for(var iFormat=0;iFormat<format.length;iFormat++){if(literal){if(format.charAt(iFormat)=="'"&&!lookAhead("'")){literal=false}else{output+=format.charAt(iFormat)}}else{switch(format.charAt(iFormat)){case"d":output+=formatNumber("d",date.getDate(),2);break;case"D":output+=formatName("D",date.getDay(),dayNamesShort,dayNames);break;case"o":output+=formatNumber("o",Math.round((new Date(date.getFullYear(),date.getMonth(),date.getDate()).getTime()-new Date(date.getFullYear(),0,0).getTime())/86400000),3);break;case"m":output+=formatNumber("m",date.getMonth()+1,2);break;case"M":output+=formatName("M",date.getMonth(),monthNamesShort,monthNames);break;case"y":output+=(lookAhead("y")?date.getFullYear():(date.getYear()%100<10?"0":"")+date.getYear()%100);break;case"@":output+=date.getTime();break;case"!":output+=date.getTime()*10000+this._ticksTo1970;break;case"'":if(lookAhead("'")){output+="'"}else{literal=true}break;default:output+=format.charAt(iFormat)}}}}return output},_possibleChars:function(format){var chars="";var literal=false;var lookAhead=function(match){var matches=(iFormat+1<format.length&&format.charAt(iFormat+1)==match);if(matches){iFormat++}return matches};for(var iFormat=0;iFormat<format.length;iFormat++){if(literal){if(format.charAt(iFormat)=="'"&&!lookAhead("'")){literal=false}else{chars+=format.charAt(iFormat)}}else{switch(format.charAt(iFormat)){case"d":case"m":case"y":case"@":chars+="0123456789";break;case"D":case"M":return null;case"'":if(lookAhead("'")){chars+="'"}else{literal=true}break;default:chars+=format.charAt(iFormat)}}}return chars},_get:function(inst,name){return inst.settings[name]!==undefined?inst.settings[name]:this._defaults[name]},_setDateFromField:function(inst,noDefault){if(inst.input.val()==inst.lastVal){return}var dateFormat=this._get(inst,"dateFormat");var dates=inst.lastVal=inst.input?inst.input.val():null;var date,defaultDate;date=defaultDate=this._getDefaultDate(inst);var settings=this._getFormatConfig(inst);try{date=this.parseDate(dateFormat,dates,settings)||defaultDate}catch(event){this.log(event);dates=(noDefault?"":dates)}inst.selectedDay=date.getDate();inst.drawMonth=inst.selectedMonth=date.getMonth();inst.drawYear=inst.selectedYear=date.getFullYear();inst.currentDay=(dates?date.getDate():0);inst.currentMonth=(dates?date.getMonth():0);inst.currentYear=(dates?date.getFullYear():0);this._adjustInstDate(inst)},_getDefaultDate:function(inst){return this._restrictMinMax(inst,this._determineDate(inst,this._get(inst,"defaultDate"),new Date()))},_determineDate:function(inst,date,defaultDate){var offsetNumeric=function(offset){var date=new Date();date.setDate(date.getDate()+offset);return date};var offsetString=function(offset){try{return $.datepicker.parseDate($.datepicker._get(inst,"dateFormat"),offset,$.datepicker._getFormatConfig(inst))}catch(e){}var date=(offset.toLowerCase().match(/^c/)?$.datepicker._getDate(inst):null)||new Date();var year=date.getFullYear();var month=date.getMonth();var day=date.getDate();var pattern=/([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;var matches=pattern.exec(offset);while(matches){switch(matches[2]||"d"){case"d":case"D":day+=parseInt(matches[1],10);break;case"w":case"W":day+=parseInt(matches[1],10)*7;break;case"m":case"M":month+=parseInt(matches[1],10);day=Math.min(day,$.datepicker._getDaysInMonth(year,month));break;case"y":case"Y":year+=parseInt(matches[1],10);day=Math.min(day,$.datepicker._getDaysInMonth(year,month));break}matches=pattern.exec(offset)}return new Date(year,month,day)};var newDate=(date==null||date===""?defaultDate:(typeof date=="string"?offsetString(date):(typeof date=="number"?(isNaN(date)?defaultDate:offsetNumeric(date)):new Date(date.getTime()))));newDate=(newDate&&newDate.toString()=="Invalid Date"?defaultDate:newDate);if(newDate){newDate.setHours(0);newDate.setMinutes(0);newDate.setSeconds(0);newDate.setMilliseconds(0)}return this._daylightSavingAdjust(newDate)},_daylightSavingAdjust:function(date){if(!date){return null}date.setHours(date.getHours()>12?date.getHours()+2:0);return date},_setDate:function(inst,date,noChange){var clear=!date;var origMonth=inst.selectedMonth;var origYear=inst.selectedYear;var newDate=this._restrictMinMax(inst,this._determineDate(inst,date,new Date()));inst.selectedDay=inst.currentDay=newDate.getDate();inst.drawMonth=inst.selectedMonth=inst.currentMonth=newDate.getMonth();inst.drawYear=inst.selectedYear=inst.currentYear=newDate.getFullYear();if((origMonth!=inst.selectedMonth||origYear!=inst.selectedYear)&&!noChange){this._notifyChange(inst)}this._adjustInstDate(inst);if(inst.input){inst.input.val(clear?"":this._formatDate(inst))}},_getDate:function(inst){var startDate=(!inst.currentYear||(inst.input&&inst.input.val()=="")?null:this._daylightSavingAdjust(new Date(inst.currentYear,inst.currentMonth,inst.currentDay)));return startDate},_generateHTML:function(inst){var today=new Date();today=this._daylightSavingAdjust(new Date(today.getFullYear(),today.getMonth(),today.getDate()));var isRTL=this._get(inst,"isRTL");var showButtonPanel=this._get(inst,"showButtonPanel");var hideIfNoPrevNext=this._get(inst,"hideIfNoPrevNext");var navigationAsDateFormat=this._get(inst,"navigationAsDateFormat");var numMonths=this._getNumberOfMonths(inst);var showCurrentAtPos=this._get(inst,"showCurrentAtPos");var stepMonths=this._get(inst,"stepMonths");var isMultiMonth=(numMonths[0]!=1||numMonths[1]!=1);var currentDate=this._daylightSavingAdjust((!inst.currentDay?new Date(9999,9,9):new Date(inst.currentYear,inst.currentMonth,inst.currentDay)));var minDate=this._getMinMaxDate(inst,"min");var maxDate=this._getMinMaxDate(inst,"max");var drawMonth=inst.drawMonth-showCurrentAtPos;var drawYear=inst.drawYear;if(drawMonth<0){drawMonth+=12;drawYear--}if(maxDate){var maxDraw=this._daylightSavingAdjust(new Date(maxDate.getFullYear(),maxDate.getMonth()-(numMonths[0]*numMonths[1])+1,maxDate.getDate()));maxDraw=(minDate&&maxDraw<minDate?minDate:maxDraw);while(this._daylightSavingAdjust(new Date(drawYear,drawMonth,1))>maxDraw){drawMonth--;if(drawMonth<0){drawMonth=11;drawYear--}}}inst.drawMonth=drawMonth;inst.drawYear=drawYear;var prevText=this._get(inst,"prevText");prevText=(!navigationAsDateFormat?prevText:this.formatDate(prevText,this._daylightSavingAdjust(new Date(drawYear,drawMonth-stepMonths,1)),this._getFormatConfig(inst)));var prev=(this._canAdjustMonth(inst,-1,drawYear,drawMonth)?'<a class="ui-datepicker-prev ui-corner-all" onclick="DP_jQuery_'+dpuuid+".datepicker._adjustDate('#"+inst.id+"', -"+stepMonths+", 'M');\" title=\""+prevText+'"><span class="ui-icon ui-icon-circle-triangle-'+(isRTL?"e":"w")+'">'+prevText+"</span></a>":(hideIfNoPrevNext?"":'<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="'+prevText+'"><span class="ui-icon ui-icon-circle-triangle-'+(isRTL?"e":"w")+'">'+prevText+"</span></a>"));var nextText=this._get(inst,"nextText");nextText=(!navigationAsDateFormat?nextText:this.formatDate(nextText,this._daylightSavingAdjust(new Date(drawYear,drawMonth+stepMonths,1)),this._getFormatConfig(inst)));var next=(this._canAdjustMonth(inst,+1,drawYear,drawMonth)?'<a class="ui-datepicker-next ui-corner-all" onclick="DP_jQuery_'+dpuuid+".datepicker._adjustDate('#"+inst.id+"', +"+stepMonths+", 'M');\" title=\""+nextText+'"><span class="ui-icon ui-icon-circle-triangle-'+(isRTL?"w":"e")+'">'+nextText+"</span></a>":(hideIfNoPrevNext?"":'<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="'+nextText+'"><span class="ui-icon ui-icon-circle-triangle-'+(isRTL?"w":"e")+'">'+nextText+"</span></a>"));var currentText=this._get(inst,"currentText");var gotoDate=(this._get(inst,"gotoCurrent")&&inst.currentDay?currentDate:today);currentText=(!navigationAsDateFormat?currentText:this.formatDate(currentText,gotoDate,this._getFormatConfig(inst)));var controls=(!inst.inline?'<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" onclick="DP_jQuery_'+dpuuid+'.datepicker._hideDatepicker();">'+this._get(inst,"closeText")+"</button>":"");var buttonPanel=(showButtonPanel)?'<div class="ui-datepicker-buttonpane ui-widget-content">'+(isRTL?controls:"")+(this._isInRange(inst,gotoDate)?'<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" onclick="DP_jQuery_'+dpuuid+".datepicker._gotoToday('#"+inst.id+"');\">"+currentText+"</button>":"")+(isRTL?"":controls)+"</div>":"";var firstDay=parseInt(this._get(inst,"firstDay"),10);firstDay=(isNaN(firstDay)?0:firstDay);var showWeek=this._get(inst,"showWeek");var dayNames=this._get(inst,"dayNames");var dayNamesShort=this._get(inst,"dayNamesShort");var dayNamesMin=this._get(inst,"dayNamesMin");var monthNames=this._get(inst,"monthNames");var monthNamesShort=this._get(inst,"monthNamesShort");var beforeShowDay=this._get(inst,"beforeShowDay");var showOtherMonths=this._get(inst,"showOtherMonths");var selectOtherMonths=this._get(inst,"selectOtherMonths");var calculateWeek=this._get(inst,"calculateWeek")||this.iso8601Week;var defaultDate=this._getDefaultDate(inst);var html="";for(var row=0;row<numMonths[0];row++){var group="";this.maxRows=4;for(var col=0;col<numMonths[1];col++){var selectedDate=this._daylightSavingAdjust(new Date(drawYear,drawMonth,inst.selectedDay));var cornerClass=" ui-corner-all";var calender="";if(isMultiMonth){calender+='<div class="ui-datepicker-group';if(numMonths[1]>1){switch(col){case 0:calender+=" ui-datepicker-group-first";cornerClass=" ui-corner-"+(isRTL?"right":"left");break;case numMonths[1]-1:calender+=" ui-datepicker-group-last";cornerClass=" ui-corner-"+(isRTL?"left":"right");break;default:calender+=" ui-datepicker-group-middle";cornerClass="";break}}calender+='">'}calender+='<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix'+cornerClass+'">'+(/all|left/.test(cornerClass)&&row==0?(isRTL?next:prev):"")+(/all|right/.test(cornerClass)&&row==0?(isRTL?prev:next):"")+this._generateMonthYearHeader(inst,drawMonth,drawYear,minDate,maxDate,row>0||col>0,monthNames,monthNamesShort)+'</div><table class="ui-datepicker-calendar"><thead><tr>';var thead=(showWeek?'<th class="ui-datepicker-week-col">'+this._get(inst,"weekHeader")+"</th>":"");for(var dow=0;dow<7;dow++){var day=(dow+firstDay)%7;thead+="<th"+((dow+firstDay+6)%7>=5?' class="ui-datepicker-week-end"':"")+'><span title="'+dayNames[day]+'">'+dayNamesMin[day]+"</span></th>"}calender+=thead+"</tr></thead><tbody>";var daysInMonth=this._getDaysInMonth(drawYear,drawMonth);if(drawYear==inst.selectedYear&&drawMonth==inst.selectedMonth){inst.selectedDay=Math.min(inst.selectedDay,daysInMonth)}var leadDays=(this._getFirstDayOfMonth(drawYear,drawMonth)-firstDay+7)%7;var curRows=Math.ceil((leadDays+daysInMonth)/7);var numRows=(isMultiMonth?this.maxRows>curRows?this.maxRows:curRows:curRows);this.maxRows=numRows;var printDate=this._daylightSavingAdjust(new Date(drawYear,drawMonth,1-leadDays));for(var dRow=0;dRow<numRows;dRow++){calender+="<tr>";var tbody=(!showWeek?"":'<td class="ui-datepicker-week-col">'+this._get(inst,"calculateWeek")(printDate)+"</td>");for(var dow=0;dow<7;dow++){var daySettings=(beforeShowDay?beforeShowDay.apply((inst.input?inst.input[0]:null),[printDate]):[true,""]);var otherMonth=(printDate.getMonth()!=drawMonth);var unselectable=(otherMonth&&!selectOtherMonths)||!daySettings[0]||(minDate&&printDate<minDate)||(maxDate&&printDate>maxDate);tbody+='<td class="'+((dow+firstDay+6)%7>=5?" ui-datepicker-week-end":"")+(otherMonth?" ui-datepicker-other-month":"")+((printDate.getTime()==selectedDate.getTime()&&drawMonth==inst.selectedMonth&&inst._keyEvent)||(defaultDate.getTime()==printDate.getTime()&&defaultDate.getTime()==selectedDate.getTime())?" "+this._dayOverClass:"")+(unselectable?" "+this._unselectableClass+" ui-state-disabled":"")+(otherMonth&&!showOtherMonths?"":" "+daySettings[1]+(printDate.getTime()==currentDate.getTime()?" "+this._currentClass:"")+(printDate.getTime()==today.getTime()?" ui-datepicker-today":""))+'"'+((!otherMonth||showOtherMonths)&&daySettings[2]?' title="'+daySettings[2]+'"':"")+(unselectable?"":' onclick="DP_jQuery_'+dpuuid+".datepicker._selectDay('#"+inst.id+"',"+printDate.getMonth()+","+printDate.getFullYear()+', this);return false;"')+">"+(otherMonth&&!showOtherMonths?"&#xa0;":(unselectable?'<span class="ui-state-default">'+printDate.getDate()+"</span>":'<a class="ui-state-default'+(printDate.getTime()==today.getTime()?" ui-state-highlight":"")+(printDate.getTime()==currentDate.getTime()?" ui-state-active":"")+(otherMonth?" ui-priority-secondary":"")+'" href="#">'+printDate.getDate()+"</a>"))+"</td>";printDate.setDate(printDate.getDate()+1);printDate=this._daylightSavingAdjust(printDate)}calender+=tbody+"</tr>"}drawMonth++;if(drawMonth>11){drawMonth=0;drawYear++}calender+="</tbody></table>"+(isMultiMonth?"</div>"+((numMonths[0]>0&&col==numMonths[1]-1)?'<div class="ui-datepicker-row-break"></div>':""):"");group+=calender}html+=group}html+=buttonPanel+($.browser.msie&&parseInt($.browser.version,10)<7&&!inst.inline?'<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>':"");inst._keyEvent=false;return html},_generateMonthYearHeader:function(inst,drawMonth,drawYear,minDate,maxDate,secondary,monthNames,monthNamesShort){var changeMonth=this._get(inst,"changeMonth");var changeYear=this._get(inst,"changeYear");var showMonthAfterYear=this._get(inst,"showMonthAfterYear");var html='<div class="ui-datepicker-title">';var monthHtml="";if(secondary||!changeMonth){monthHtml+='<span class="ui-datepicker-month">'+monthNames[drawMonth]+"</span>"}else{var inMinYear=(minDate&&minDate.getFullYear()==drawYear);var inMaxYear=(maxDate&&maxDate.getFullYear()==drawYear);monthHtml+='<select class="ui-datepicker-month" onchange="DP_jQuery_'+dpuuid+".datepicker._selectMonthYear('#"+inst.id+"', this, 'M');\" >";for(var month=0;month<12;month++){if((!inMinYear||month>=minDate.getMonth())&&(!inMaxYear||month<=maxDate.getMonth())){monthHtml+='<option value="'+month+'"'+(month==drawMonth?' selected="selected"':"")+">"+monthNamesShort[month]+"</option>"}}monthHtml+="</select>"}if(!showMonthAfterYear){html+=monthHtml+(secondary||!(changeMonth&&changeYear)?"&#xa0;":"")}if(!inst.yearshtml){inst.yearshtml="";if(secondary||!changeYear){html+='<span class="ui-datepicker-year">'+drawYear+"</span>"}else{var years=this._get(inst,"yearRange").split(":");var thisYear=new Date().getFullYear();var determineYear=function(value){var year=(value.match(/c[+-].*/)?drawYear+parseInt(value.substring(1),10):(value.match(/[+-].*/)?thisYear+parseInt(value,10):parseInt(value,10)));return(isNaN(year)?thisYear:year)};var year=determineYear(years[0]);var endYear=Math.max(year,determineYear(years[1]||""));year=(minDate?Math.max(year,minDate.getFullYear()):year);endYear=(maxDate?Math.min(endYear,maxDate.getFullYear()):endYear);inst.yearshtml+='<select class="ui-datepicker-year" onchange="DP_jQuery_'+dpuuid+".datepicker._selectMonthYear('#"+inst.id+"', this, 'Y');\" >";for(;year<=endYear;year++){inst.yearshtml+='<option value="'+year+'"'+(year==drawYear?' selected="selected"':"")+">"+year+"</option>"}inst.yearshtml+="</select>";html+=inst.yearshtml;inst.yearshtml=null}}html+=this._get(inst,"yearSuffix");if(showMonthAfterYear){html+=(secondary||!(changeMonth&&changeYear)?"&#xa0;":"")+monthHtml}html+="</div>";return html},_adjustInstDate:function(inst,offset,period){var year=inst.drawYear+(period=="Y"?offset:0);var month=inst.drawMonth+(period=="M"?offset:0);var day=Math.min(inst.selectedDay,this._getDaysInMonth(year,month))+(period=="D"?offset:0);var date=this._restrictMinMax(inst,this._daylightSavingAdjust(new Date(year,month,day)));inst.selectedDay=date.getDate();inst.drawMonth=inst.selectedMonth=date.getMonth();inst.drawYear=inst.selectedYear=date.getFullYear();if(period=="M"||period=="Y"){this._notifyChange(inst)}},_restrictMinMax:function(inst,date){var minDate=this._getMinMaxDate(inst,"min");var maxDate=this._getMinMaxDate(inst,"max");var newDate=(minDate&&date<minDate?minDate:date);newDate=(maxDate&&newDate>maxDate?maxDate:newDate);return newDate},_notifyChange:function(inst){var onChange=this._get(inst,"onChangeMonthYear");if(onChange){onChange.apply((inst.input?inst.input[0]:null),[inst.selectedYear,inst.selectedMonth+1,inst])}},_getNumberOfMonths:function(inst){var numMonths=this._get(inst,"numberOfMonths");return(numMonths==null?[1,1]:(typeof numMonths=="number"?[1,numMonths]:numMonths))},_getMinMaxDate:function(inst,minMax){return this._determineDate(inst,this._get(inst,minMax+"Date"),null)},_getDaysInMonth:function(year,month){return 32-this._daylightSavingAdjust(new Date(year,month,32)).getDate()},_getFirstDayOfMonth:function(year,month){return new Date(year,month,1).getDay()},_canAdjustMonth:function(inst,offset,curYear,curMonth){var numMonths=this._getNumberOfMonths(inst);var date=this._daylightSavingAdjust(new Date(curYear,curMonth+(offset<0?offset:numMonths[0]*numMonths[1]),1));if(offset<0){date.setDate(this._getDaysInMonth(date.getFullYear(),date.getMonth()))}return this._isInRange(inst,date)},_isInRange:function(inst,date){var minDate=this._getMinMaxDate(inst,"min");var maxDate=this._getMinMaxDate(inst,"max");return((!minDate||date.getTime()>=minDate.getTime())&&(!maxDate||date.getTime()<=maxDate.getTime()))},_getFormatConfig:function(inst){var shortYearCutoff=this._get(inst,"shortYearCutoff");shortYearCutoff=(typeof shortYearCutoff!="string"?shortYearCutoff:new Date().getFullYear()%100+parseInt(shortYearCutoff,10));return{shortYearCutoff:shortYearCutoff,dayNamesShort:this._get(inst,"dayNamesShort"),dayNames:this._get(inst,"dayNames"),monthNamesShort:this._get(inst,"monthNamesShort"),monthNames:this._get(inst,"monthNames")}},_formatDate:function(inst,day,month,year){if(!day){inst.currentDay=inst.selectedDay;inst.currentMonth=inst.selectedMonth;inst.currentYear=inst.selectedYear}var date=(day?(typeof day=="object"?day:this._daylightSavingAdjust(new Date(year,month,day))):this._daylightSavingAdjust(new Date(inst.currentYear,inst.currentMonth,inst.currentDay)));return this.formatDate(this._get(inst,"dateFormat"),date,this._getFormatConfig(inst))}});function bindHover(dpDiv){var selector="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return dpDiv.bind("mouseout",function(event){var elem=$(event.target).closest(selector);if(!elem.length){return}elem.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover")}).bind("mouseover",function(event){var elem=$(event.target).closest(selector);if($.datepicker._isDisabledDatepicker(instActive.inline?dpDiv.parent()[0]:instActive.input[0])||!elem.length){return}elem.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");elem.addClass("ui-state-hover");if(elem.hasClass("ui-datepicker-prev")){elem.addClass("ui-datepicker-prev-hover")}if(elem.hasClass("ui-datepicker-next")){elem.addClass("ui-datepicker-next-hover")}})}function extendRemove(target,props){$.extend(target,props);for(var name in props){if(props[name]==null||props[name]==undefined){target[name]=props[name]}}return target}function isArray(a){return(a&&(($.browser.safari&&typeof a=="object"&&a.length)||(a.constructor&&a.constructor.toString().match(/\Array\(\)/))))}$.fn.datepicker=function(options){if(!this.length){return this}if(!$.datepicker.initialized){$(document).mousedown($.datepicker._checkExternalClick).find("body").append($.datepicker.dpDiv);$.datepicker.initialized=true}var otherArgs=Array.prototype.slice.call(arguments,1);if(typeof options=="string"&&(options=="isDisabled"||options=="getDate"||options=="widget")){return $.datepicker["_"+options+"Datepicker"].apply($.datepicker,[this[0]].concat(otherArgs))}if(options=="option"&&arguments.length==2&&typeof arguments[1]=="string"){return $.datepicker["_"+options+"Datepicker"].apply($.datepicker,[this[0]].concat(otherArgs))}return this.each(function(){typeof options=="string"?$.datepicker["_"+options+"Datepicker"].apply($.datepicker,[this].concat(otherArgs)):$.datepicker._attachDatepicker(this,options)})};$.datepicker=new Datepicker();$.datepicker.initialized=false;$.datepicker.uuid=new Date().getTime();$.datepicker.version="1.8.21";window["DP_jQuery_"+dpuuid]=$})(jQuery);jQuery.base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",url_encode:function(a){return escape(this._utf8_encode(a))},url_decode:function(a){return this._utf8_decode(unescape(a))},encode:function(d,c){var a="";var l,j,g,k,h,f,e;var b=0;if(c==true){d=jQuery.base64._utf8_encode(d)}while(b<d.length){l=d.charCodeAt(b++);j=d.charCodeAt(b++);g=d.charCodeAt(b++);k=l>>2;h=((l&3)<<4)|(j>>4);f=((j&15)<<2)|(g>>6);e=g&63;if(isNaN(j)){f=e=64}else{if(isNaN(g)){e=64}}a=a+this._keyStr.charAt(k)+this._keyStr.charAt(h)+this._keyStr.charAt(f)+this._keyStr.charAt(e)}return a},decode:function(c){var a="";var k,h,f;var j,g,e,d;var b=0;c=c.replace(/[^A-Za-z0-9\+\/\=]/g,"");while(b<c.length){j=this._keyStr.indexOf(c.charAt(b++));g=this._keyStr.indexOf(c.charAt(b++));e=this._keyStr.indexOf(c.charAt(b++));d=this._keyStr.indexOf(c.charAt(b++));k=(j<<2)|(g>>4);h=((g&15)<<4)|(e>>2);f=((e&3)<<6)|d;a=a+String.fromCharCode(k);if(e!=64){a=a+String.fromCharCode(h)}if(d!=64){a=a+String.fromCharCode(f)}}a=jQuery.base64._utf8_decode(a);return a},_utf8_encode:function(b){b=b.replace(/\r\n/g,"\n");var a="";for(var e=0;e<b.length;e++){var d=b.charCodeAt(e);if(d<128){a+=String.fromCharCode(d)}else{if((d>127)&&(d<2048)){a+=String.fromCharCode((d>>6)|192);a+=String.fromCharCode((d&63)|128)}else{a+=String.fromCharCode((d>>12)|224);a+=String.fromCharCode(((d>>6)&63)|128);a+=String.fromCharCode((d&63)|128)}}}return a},_utf8_decode:function(a){var b="";var d=0;var e=c1=c2=0;while(d<a.length){e=a.charCodeAt(d);if(e<128){b+=String.fromCharCode(e);d++}else{if((e>191)&&(e<224)){c2=a.charCodeAt(d+1);b+=String.fromCharCode(((e&31)<<6)|(c2&63));d+=2}else{c2=a.charCodeAt(d+1);c3=a.charCodeAt(d+2);b+=String.fromCharCode(((e&15)<<12)|((c2&63)<<6)|(c3&63));d+=3}}}return b}};(function(e){var c={method:"GET",queryParam:"q",searchDelay:300,minChars:1,propertyToSearch:"name",jsonContainer:null,contentType:"json",prePopulate:null,processPrePopulate:false,hintText:"Type in a search term",noResultsText:"No results",searchingText:"Searching...",deleteText:"&times;",animateDropdown:true,theme:null,zindex:999,resultsLimit:null,resultsFormatter:function(g){return"<li>"+g[this.propertyToSearch]+"</li>"},tokenFormatter:function(g){return"<li><p>"+g[this.propertyToSearch]+"</p></li>"},tokenLimit:null,tokenDelimiter:",",preventDuplicates:false,tokenValue:"id",onResult:null,onAdd:null,onDelete:null,onReady:null,idPrefix:"token-input-",disabled:false,selectSuggestion:true,enableComma:true,clearOnBlur:true};var f={tokenList:"token-input-list",token:"token-input-token",tokenReadOnly:"token-input-token-readonly",tokenDelete:"token-input-delete-token",selectedToken:"token-input-selected-token",highlightedToken:"token-input-highlighted-token",dropdown:"token-input-dropdown",dropdownItem:"token-input-dropdown-item",dropdownItem2:"token-input-dropdown-item2",selectedDropdownItem:"token-input-selected-dropdown-item",inputToken:"token-input-input-token",focused:"token-input-focused",disabled:"token-input-disabled"};var d={BEFORE:0,AFTER:1,END:2};var a={BACKSPACE:8,TAB:9,ENTER:13,ESCAPE:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,NUMPAD_ENTER:108,COMMA:188};var b={init:function(g,h){var i=e.extend({},c,h||{});return this.each(function(){e(this).data("tokenInputObject",new e.TokenList(this,g,i))})},clear:function(){this.data("tokenInputObject").clear();return this},add:function(g){this.data("tokenInputObject").add(g);return this},remove:function(g){this.data("tokenInputObject").remove(g);return this},get:function(){return this.data("tokenInputObject").getTokens()},toggleDisabled:function(g){this.data("tokenInputObject").toggleDisabled(g);return this}};e.fn.tokenInput=function(g){if(b[g]){return b[g].apply(this,Array.prototype.slice.call(arguments,1))}else{return b.init.apply(this,arguments)}};e.TokenList=function(i,s,T){if(e.type(s)==="string"||e.type(s)==="function"){T.url=s;var m=x();if(T.crossDomain===undefined&&typeof m==="string"){if(m.indexOf("://")===-1){T.crossDomain=false}else{T.crossDomain=(location.href.split(/\/+/g)[1]!==m.split(/\/+/g)[1])}}}else{if(typeof(s)==="object"){T.local_data=s}}if(T.classes){T.classes=e.extend({},f,T.classes)}else{if(T.theme){T.classes={};e.each(f,function(Z,aa){T.classes[Z]=aa+"-"+T.theme})}else{T.classes=f}}var F=[];var v=0;var r=new e.TokenList.Cache();var R;var N;var z=e('<input type="text"  autocomplete="off">').css({outline:"none"}).attr("id",T.idPrefix+i.id).focus(function(){if(T.disabled){return false}else{p.addClass(T.classes.focused);if(T.tokenLimit===null||T.tokenLimit!==v){setTimeout(function(){l()},50)}}}).blur(function(){G();if(T.clearOnBlur){e(this).val("")}p.removeClass(T.classes.focused)}).bind("keyup keydown blur update",g).keydown(function(aa){var ac;var Z;switch(aa.keyCode){case a.LEFT:case a.RIGHT:case a.UP:case a.DOWN:if(!e(this).val()){ac=n.prev();Z=n.next();if((ac.length&&ac.get(0)===D)||(Z.length&&Z.get(0)===D)){if(aa.keyCode===a.LEFT||aa.keyCode===a.UP){K(e(D),d.BEFORE)}else{K(e(D),d.AFTER)}}else{if((aa.keyCode===a.LEFT||aa.keyCode===a.UP)&&ac.length){U(e(ac.get(0)))}else{if((aa.keyCode===a.RIGHT||aa.keyCode===a.DOWN)&&Z.length){U(e(Z.get(0)))}}}}else{var ab=null;if(!T.selectSuggestion){if(aa.keyCode===a.LEFT||aa.keyCode===a.RIGHT){return}if(aa.keyCode===a.DOWN){if(!P){ab=V.find("li:first")}else{ab=e(P).next()}}else{if(aa.keyCode===a.UP){if(!P){ab=V.find("li:last")}else{ab=e(P).prev()}}}if(ab&&ab.length){X(ab)}else{h(e(P))}}else{if(aa.keyCode===a.DOWN||aa.keyCode===a.RIGHT){ab=e(P).next()}else{ab=e(P).prev()}if(ab.length){X(ab)}}}return false;break;case a.BACKSPACE:ac=n.prev();if(!e(this).val().length){if(D){k(e(D),false);E.change()}else{if(ac.length){U(e(ac.get(0)))}}return false}else{if(e(this).val().length===1){G()}else{setTimeout(function(){C()},5)}}break;case a.ENTER:case a.NUMPAD_ENTER:case a.COMMA:if(!T.enableComma&&aa.keyCode===a.COMMA){return}if(P){M(e(P).data("tokeninput"));E.change()}else{G()}return false;break;case a.ESCAPE:G();return true;default:if(String.fromCharCode(aa.which)){setTimeout(function(){C()},5)}break}});var E=e(i).hide().val("").focus(function(){Y(z)}).blur(function(){z.blur()});var D=null;var H=0;var P=null;var p=e("<ul />").addClass(T.classes.tokenList).click(function(aa){var Z=e(aa.target).closest("li");if(Z&&Z.get(0)&&e.data(Z.get(0),"tokeninput")){W(Z)}else{if(D){K(e(D),d.END)}Y(z)}}).mouseover(function(aa){var Z=e(aa.target).closest("li");if(Z&&D!==this){Z.addClass(T.classes.highlightedToken)}}).mouseout(function(aa){var Z=e(aa.target).closest("li");if(Z&&D!==this){Z.removeClass(T.classes.highlightedToken)}}).insertBefore(E);var n=e("<li />").addClass(T.classes.inputToken).appendTo(p).append(z);var V=e("<div>").addClass(T.classes.dropdown).appendTo("body").hide();var L=e("<tester/>").insertAfter(z).css({position:"absolute",top:-9999,left:-9999,width:"auto",fontSize:z.css("fontSize"),fontFamily:z.css("fontFamily"),fontWeight:z.css("fontWeight"),letterSpacing:z.css("letterSpacing"),whiteSpace:"nowrap"});E.val("");var y=T.prePopulate||E.data("pre");if(T.processPrePopulate&&e.isFunction(T.onResult)){y=T.onResult.call(E,y)}if(y&&y.length){e.each(y,function(Z,aa){j(aa);I()})}if(T.disabled){B(true)}if(e.isFunction(T.onReady)){T.onReady.call()}this.clear=function(){p.children("li").each(function(){if(e(this).children("input").length===0){k(e(this),false)}})};this.add=function(Z){M(Z)};this.remove=function(Z){p.children("li").each(function(){if(e(this).children("input").length===0){var ac=e(this).data("tokeninput");var aa=true;for(var ab in Z){if(Z[ab]!==ac[ab]){aa=false;break}}if(aa){k(e(this),false)}}})};this.getTokens=function(){return F};this.toggleDisabled=function(Z){B(Z)};function B(Z){if(typeof Z==="boolean"){T.disabled=Z}else{T.disabled=!T.disabled}z.prop("disabled",T.disabled);p.toggleClass(T.classes.disabled,T.disabled);if(D){K(e(D),d.END)}E.prop("disabled",T.disabled)}function I(){if(T.tokenLimit!==null&&v>=T.tokenLimit){z.hide();G();return}}function g(){if(N===(N=z.val())){return}var Z=N.replace(/&/g,"&amp;").replace(/\s/g," ").replace(/</g,"&lt;").replace(/>/g,"&gt;");L.html(Z);z.width(L.width()+30)}function S(Z){return((Z>=48&&Z<=90)||(Z>=96&&Z<=111)||(Z>=186&&Z<=192)||(Z>=219&&Z<=222))}function j(ab){var aa=T.tokenFormatter(ab);if(!aa){return}var ad=e(aa);var Z=ab.readonly===true?true:false;if(Z){ad.addClass(T.classes.tokenReadOnly)}ad.addClass(T.classes.token).insertBefore(n);if(!Z){e("<span>"+T.deleteText+"</span>").addClass(T.classes.tokenDelete).appendTo(ad).click(function(){if(!T.disabled){k(e(this).parent(),false);E.change();return false}})}var ac=ab;e.data(ad.get(0),"tokeninput",ab);F=F.slice(0,H).concat([ac]).concat(F.slice(H));H++;w(F,E);v+=1;if(T.tokenLimit!==null&&v>=T.tokenLimit){z.hide();G()}return ad}function M(Z){var ac=T.onAdd;if(v>0&&T.preventDuplicates){var ab=null;var aa=T.propertyToSearch?T.propertyToSearch:"id";p.children().each(function(){var ae=e(this);var ad=e.data(ae.get(0),"tokeninput");if(ad&&ad[aa]===Z[aa]){ab=ae;return false}});if(ab){U(ab);n.insertAfter(ab);Y(z);return}}if(T.tokenLimit==null||v<T.tokenLimit){j(Z);I()}z.val("");G();if(e.isFunction(ac)){ac.call(E,Z)}}function U(Z){if(!T.disabled){Z.addClass(T.classes.selectedToken);D=Z.get(0);z.val("");G()}}function K(aa,Z){aa.removeClass(T.classes.selectedToken);D=null;if(Z===d.BEFORE){n.insertBefore(aa);H--}else{if(Z===d.AFTER){n.insertAfter(aa);H++}else{n.appendTo(p);H=v}}Y(z)}function W(aa){var Z=D;if(D){K(e(D),d.END)}if(Z===aa.get(0)){K(aa,d.END)}else{U(aa)}}function k(ab,aa){var ac=e.data(ab.get(0),"tokeninput");var ad=T.onDelete;if(aa!=false){aa=true}var Z=ab.prevAll().length;if(Z>H){Z--}ab.remove();D=null;if(aa){Y(z)}F=F.slice(0,Z).concat(F.slice(Z+1));if(Z<H){H--}w(F,E);v-=1;if(T.tokenLimit!==null){z.show().val("");if(aa){Y(z)}}if(e.isFunction(ad)){ad.call(E,ac)}}function w(ab,Z){var aa=e.map(ab,function(ac){if(typeof T.tokenValue=="function"){return T.tokenValue.call(this,ac)}return ac[T.tokenValue]});Z.val(aa.join(T.tokenDelimiter))}function G(){V.hide().empty();P=null}function q(){V.css({position:"absolute",top:e(p).offset().top+e(p).outerHeight(),left:e(p).offset().left,width:e(p).width()+3,"z-index":T.zindex}).show()}function o(){if(T.searchingText){V.html("<p>"+T.searchingText+"</p>");q()}}function l(){if(T.hintText){V.html("<p>"+T.hintText+"</p>");q()}}var J=new RegExp("[.\\\\+*?\\[\\^\\]$(){}=!<>|:\\-]","g");function Q(Z){return Z.replace(J,"\\$&")}function u(aa,Z){return aa.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)("+Q(Z)+")(?![^<>]*>)(?![^&;]+;)","gi"),"<b>$1</b>")}function A(aa,ab,Z){return aa.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)("+Q(ab)+")(?![^<>]*>)(?![^&;]+;)","g"),u(ab,Z))}function O(ab,Z){if(Z&&Z.length){V.empty();var aa=e("<ul>").appendTo(V).mouseover(function(ac){X(e(ac.target).closest("li"))}).mousedown(function(ac){M(e(ac.target).closest("li").data("tokeninput"));E.change();return false}).hide();if(T.resultsLimit&&Z.length>T.resultsLimit){Z=Z.slice(0,T.resultsLimit)}e.each(Z,function(ac,ad){var ae=T.resultsFormatter(ad);ae=A(ae,ad[T.propertyToSearch],ab);ae=e(ae).appendTo(aa);if(ac%2){ae.addClass(T.classes.dropdownItem)}else{ae.addClass(T.classes.dropdownItem2)}if(ac===0&&T.selectSuggestion){X(ae)}e.data(ae.get(0),"tokeninput",ad)});q();if(T.animateDropdown){aa.slideDown("fast")}else{aa.show()}}else{if(T.noResultsText){V.html("<p>"+T.noResultsText+"</p>");q()}else{G()}}}function X(Z){if(Z){if(P){h(e(P))}Z.addClass(T.classes.selectedDropdownItem);P=Z.get(0)}}function h(Z){Z.removeClass(T.classes.selectedDropdownItem);P=null}function C(){var Z=z.val();if(Z&&Z.length){if(D){K(e(D),d.AFTER)}if(Z.length>=T.minChars){o();clearTimeout(R);R=setTimeout(function(){t(Z)},T.searchDelay)}else{G()}}}function t(ag){var aa=ag+x();var ah=r.get(aa);if(ah){O(ag,ah)}else{var Z=x();if(Z){var af={};af.data={};if(Z.indexOf("?")>-1){var ad=Z.split("?");af.url=ad[0];var ab=ad[1].split("&");e.each(ab,function(ai,ak){var aj=ak.split("=");af.data[aj[0]]=aj[1]})}else{af.url=Z}af.data[T.queryParam]=ag;af.type=T.method;af.dataType=T.contentType;if(T.crossDomain){af.dataType="jsonp"}af.success=function(ai){if(e.isFunction(T.onResult)){ai=T.onResult.call(E,ai)}if(T.cache){r.add(aa,T.jsonContainer?ai[T.jsonContainer]:ai)}if(z.val()===ag){O(ag,T.jsonContainer?ai[T.jsonContainer]:ai)}};if(typeof T.overwriteRetrieveData==="function"){var ac={searchBy:z.val()};T.overwriteRetrieveData(ac,z.val(),O)}else{e.ajax(af)}}else{if(T.local_data){var ae=e.grep(T.local_data,function(ai){return ai[T.propertyToSearch].toLowerCase().indexOf(ag.toLowerCase())>-1});if(e.isFunction(T.onResult)){ae=T.onResult.call(E,ae)}if(T.cache){r.add(aa,ae)}O(ag,ae)}}}}function x(){var Z=T.url;if(typeof T.url=="function"){Z=T.url.call(T)}return Z}function Y(Z){setTimeout(function(){Z.focus()},50)}};e.TokenList.Cache=function(h){var j=e.extend({max_size:500},h);var k={};var i=0;var g=function(){k={};i=0};this.add=function(m,l){if(i>j.max_size){g()}if(!k[m]){i+=1}k[m]=l};this.get=function(l){return k[l]}}}(jQuery));if (!window.bc) window.bc = {};
if (!window.bd) window.bd = {};

bc.component = (function($) {
    var htmlPath = '/static/backbase.com.2012.components/html/';
    var CLASS_DISABLED = "bc-component-disabled";
    var CLASS_HIDDEN   = "bc-component-hidden";
    var currentDialog = null;

    bd.contextRoot = bd.contextRoot || top.bd.contextRoot;
    htmlPath = bd.contextRoot + htmlPath;

    // Private functions
    var getTemplate = function(url, params) {
        var template = be.utils.processHTMLTemplateByUrl(url, params);
        var $template = jQuery(template);
        return $template;
    };

    var returnTemplate = function($template, params) {
        // return as variable or auto-append to target
        if (params.target) {
            jQuery(params.target).append($template);
        }
        return $template;
    };

    // Public functions

    // SPINNER
    var spinner = function(params) {
        var $template = getTemplate(htmlPath + 'panel/spinner.html', params);
        return returnTemplate($template, params);
    };

    // FEEDBACK
    var feedback = function(params) {
        var $template = getTemplate(htmlPath + 'panel/feedback.html', params);
        return returnTemplate($template, params);
    };

    // PAGINATION
    var pagination = function(params) {
        var $template = getTemplate(htmlPath + 'panel/pagination.html', params);
        return returnTemplate($template, params);
    };


    // NOTIFY
    /**
     * collection of notification panels
     * @type {*}
     */
    var panelCue = (function(){
        var cue = {}; // for direct access to items
        var ids = []; // for index based access + item length
        var add = function(item){
            var id = "id_" + item.uid;
            if(!cue[id]){
                item.index = ids.length;
                cue[id] = item;
                ids.push(id);
            }
            return item;
        };
        var reposition = function(){
            var item;
            for(var i = 0; i < ids.length; i++){
                item = cue[ids[i]];
                if(item){
                    item.index = i;
                    item.reposition();
                }
            }
        };
        var remove = function(item){
            var id = "id_" + item.uid;
            if(cue[id]){
                ids.splice(item.index, 1);
                delete cue["id_" + item.uid];
            }
            item = null;
            reposition();
        };
        var has = function(item){
            return !!cue["id_" + item.uid];
        };
        var item = function(uid){
            return cue["id_" + uid];
        };
        var length = function(){
            return ids.length;
        };
        return {
            add:add,
            remove:remove,
            has:has,
            item:item,
            length:length
        };
    })();
    /**
     * notification panel
     * @param params
     * @constructor
     */
    var Panel = function(params){

        this.timeout = null;
        this.index = null;
        this.uid  = params.uid;
        this.message = params.message;
        this.delay = params.delay || this.message.length * 70; // time panel is shown depends on length of message
        this.$template = this.createView({
            icon : params.icon || 'checkbox',
            uid : this.uid,
            message : params.message,
            className: params.className,
            data: params.data,
            y: ( 10 + (panelCue.length() * 85)) + "px"
        });
        var panel = this;
        this.$template.on('click', function(){
            panel.hide(true);
        });
        this.show();

    };
    Panel.prototype.show = function(){
        this.$template.animate({opacity: 1,'margin-top': '+=10'});
        if(this.delay > -1){
            this.hide();
        }
    };
    Panel.prototype.hide = function(overruleDelay){
        var panel = this,
            time = overruleDelay ? 0 : this.delay > -1 ? this.delay : 1;
        clearTimeout(this.timeout);
        this.timeout = setTimeout(function(){
            panel.$template.animate({opacity: 0,'margin-top': '+=10'}, function() {
                panel.$template.off().remove();
                panelCue.remove(panel);
            });
        }, time);
    };
    Panel.prototype.createView = function(params){
        var $template = getTemplate(htmlPath + 'modal/notify.html', params);
        $template.css({'visibility':'hidden','opacity':0});
        jQuery(document.body).append($template);

        var tWidth = $template.outerWidth();
        $template.css({'visibility':'visible','margin-left':-tWidth/2+'px','top':params.y});
        if(params.className){
            $template.addClass(params.className);
        }
        if(params.data){
           for(var o in params.data){
               $template.data(o, params.data[o]);
           }
        }
        return $template;
    };
    Panel.prototype.reposition = function(){
        var newPos = 10 + (this.index * 85);
        this.$template.animate({top:  newPos + "px"});
    };

    var notify = function(params) {
        var panel;
        if(params.icon && params.icon !== 'error') {
            if (panelCue.has(params)) {
                panel = panelCue.item(params.uid);
                if (panel.delay > -1) {
                    panel.hide();
                }
            } else {
                panel = new Panel(params);
                if (!(panel.type && panel.type == MSG_TYPE_PROGRESS)) {
                    panelCue.add(panel);
                }
            }
            return panel;
        }else{
            params.status = 'error';
            params.closeIcon = false;
            params.title = (params.title || 'ERROR').toUpperCase();
            params.html = params.message || params.text;
            params.text = params.message || params.text;
            params.buttons = [
                {
                    title: 'OK',
                    type: 'ok',
                    callback: function (){}
                }
            ];
            return dialog(params);
        }
    };

    // MODAL
    var modalform = function(params) {
        if(bc.dialogOpen) return;
        var $template = getTemplate(htmlPath + 'modal/form.html', params);
        $template.css({'visibility':'hidden','opacity':0});
        jQuery(document.body).append($template);

        bc.dialogOpen = true;

        var validate = function(target){
            var $target = jQuery(target),
                invalid = $target.length;
                for (var i = 0; i < $target.length; i++){
                    $name = $target.get(i).name,
                    $value = $target.get(i).value,
                    $required = jQuery($target.get(i)).hasClass('required'),
                    $valid = !$required || $required && $value !== '';

                if ($valid){
                    invalid--;
                }
                jQuery($target.get(i)).removeClass('valid error').addClass($valid ? 'valid' : 'error');
            }
            return invalid === 0;
        };

        if(params.width) {
            $template.css({'width':params.width});
        }

        var okCallback = params.okCallback || function(){};
        var cancelCallback = params.cancelCallback || function(){};
        var $form = jQuery('form', $template);


        // position modal in center
        var tWidth = $template.outerWidth();
        var tHeight = $template.outerHeight();

        $template.css({'visibility':'visible','margin-left':-tWidth/2+'px','margin-top':(-tHeight/2) - 10 +'px'});

        $modalCover = jQuery('<div class="bc-modal-cover '+ params.cls +'"></div>');
        jQuery('body').append($modalCover);
        $modalCover.css({opacity:0}).animate({opacity: 0.3});
        $template.animate({opacity: 1,'margin-top': '+=10'});
        jQuery('input[type="text"]', $template).first().focus();

        jQuery('.bc-modal-close, .bc-modal-cancel', $template).bind('click', function() {
            cancelCallback($form);
            $modalCover.animate({opacity: 0}, function() {
                $modalCover.remove();
            });
            $template.animate({opacity: 0,'margin-top': '+=10'}, function() {
                $template.remove();
                jQuery(document).off('keyup', onEscape);
                bc.dialogOpen = false;
            });
            return false;
        });
        if(params.ok !== false){
            jQuery('.bc-modal-ok', $template).bind('click', function(e) {
                e.preventDefault();
                if (params.disableValidation || validate($template.find('input'))){
                    if (okCallback($form) !== false){
                        $modalCover.animate({opacity: 0}, function() {
                            $modalCover.remove();
                        });
                        $template.animate({opacity: 0,'margin-top': '+=10'}, function() {
                            $template.remove();
                            jQuery(document).off('keyup', onEscape);
                            bc.dialogOpen = false;
                        });
                    }
                } else {
                    bc.component.notify({
                        uid: '4432',
                        icon: 'error', // checkbox, attention, error, loading
                        message: 'Invalid input'
                    });
                }
                return false;
            });
        }else{
            jQuery('.bc-modal-ok', $template).hide();
        }

        if (!params.disableValidation) {
            $template.on('keyup blur', 'input', function(e){validate(e.target);});
        }
        var onEscape = function(e){
            if (e.keyCode == 27){
                jQuery('.bc-modal-close', $template).trigger('click');
            }
        };
        jQuery(document).on('keyup', onEscape);
        return $template;

    };

    // CONFIRM
    var confirm = function(params) {};

    // TEXTAREA
    var textArea = function(params) {
        var $template = getTemplate(htmlPath + 'form/textarea.html', params);
        return returnTemplate($template, params);
    };

    // TEXTBOX
    var textBox = function(params) {
        var $template = getTemplate(htmlPath + 'form/textbox.html', params);
        return returnTemplate($template, params);
    };

    // BALLOON
    var balloon = function(params) {
        var $template = getTemplate(htmlPath + 'panel/balloon.html', params);
        return returnTemplate($template, params);
    };


    // TABS
    var tabs = function(params) {
        var $template = getTemplate(htmlPath + 'panel/tabs.html', params);

        jQuery('.bc-tabLabel', $template).click( function() {

            jQuery('.bc-tabLabel, .bc-tab', $template).removeClass('bc-activeTab');
            jQuery(this).addClass('bc-activeTab');
        });

        //$('.bc-tabLabel:first-child').click();
        jQuery('.bc-tabLabel:first-child', $template).addClass('bc-activeTab');
        return returnTemplate($template, params);
    };



    // CHECKBOX
    var checkBox = function(params) {

        var template = be.utils.processHTMLTemplateByUrl(htmlPath + 'form/checkboxes.html', params);
        var $template = jQuery(template);
        var $checkbox = jQuery('input', $template);

        $template.click(function(ev) {
            ev.stopPropagation();
            if ($template.hasClass('c_off')) {
                $checkbox.attr('checked','checked');
            } else {
                $checkbox.removeAttr('checked');
            }
            $template.toggleClass('c_on c_off');
        });

        // return as variable or auto-append to target
        if (params.target) {
            $(params.target).append($template);
        }
        return $template[0]; // returns a DOM node

    };

    var radioButton = function(params) {

        var template = be.utils.processHTMLTemplateByUrl(htmlPath + 'form/radio.html', params);
        var $template = jQuery(template);
        var $radio = jQuery('input', $template);

        $template.click(function(ev) {
            ev.stopPropagation();
            jQuery('input[type="radio"][name="' + params.name + '"]', document).removeAttr('checked').trigger('change');
            $radio.attr('checked','checked').trigger('change');
        });

        $radio.change(function(ev){
            $template.toggleClass('c_on', $radio.attr('checked') === 'checked');
            if ($radio.attr('checked') === 'checked' && params.handler){
                params.handler();
            }
        });

        // return as variable or auto-append to target
        if (params.target) {
            $(params.target).append($template);
        }
        return $template[0]; // returns a DOM node

    };


    // TOOLTIP
    var tooltip = function(params){
        var $template = getTemplate(htmlPath + 'form/tooltip.html', params),
            $tooltip    = jQuery('.bc-tooltip', $template).remove(),
            tip, w, h, x, y,
            defaultMessage = params.message;

        var reFlow = function(){
            $tooltip.toggleClass('bc-tooltip-flip-h', x > w);
            $tooltip.toggleClass('bc-tooltip-flip-v', y < h);
        };

        var scrollPos = function(el){
            var scroll = {
                top     : 0,
                left    : 0
            };
            while(el && el.offsetParent){
                scroll.top  += el.offsetParent.scrollTop || 0;
                scroll.left += el.offsetParent.scrollLeft || 0;
                el = el.offsetParent;
            }
            return scroll;
        };

        $template.mouseover(function(e){

            var $target = jQuery(e.currentTarget);
                tip     = jQuery(this).parent().attr('title') || defaultMessage;

            jQuery(this).attr('title', '');
            jQuery('.bc-tooltip-body', $tooltip).text(tip);
            jQuery(this).append($tooltip);

            w = $tooltip.outerWidth();
            h = $tooltip.outerHeight();

            $tooltip.css('opacity','0');
            $tooltip.fadeTo('1', 0.9);

            x = $(e.target).offset().left - scrollPos(e.target).left;
            y = $(e.target).offset().top - scrollPos(e.target).top;

            reFlow();

        }).mousemove(function(e){
            // reFlow();
        }).mouseout(function(){
            jQuery(this).attr('title', jQuery('.bc-tooltip-body').html());
            jQuery('.bc-tooltip', this).remove();
        });
        return returnTemplate($template, params);
    };

    /* alternative tooltip
     * should be added as "mouseenter" or "mouseover" handler(example in auditapp.js)
     * update: use of setTooltip function (below) is recommended now (example in targeting.js)
     * */
    var tooltipTimeout, tooltipStartDelay, tooltipCache;
    var moTooltip = function(e){

        var defaults = {
            align: 'right',
            overTip: false
        };

        var $ = top ? top.jQuery : jQuery,
            $tooltip = tooltipCache || $(".bc-hovertip-tip"),
            opacity,
            data = $.extend({}, defaults, e.data),
            i = 0,
            el = $(this),
            This = this,
            events = data.events,
            align = data.align || "right",
            ttl = Mustache.to_html("{{title}}", {title: el.attr("title")}), // Let mustache escape title properly to prevent possible XSS
            offset = el.offset(),
            removeTip = function(){
                clearTimeout(tooltipTimeout);
                $(".bc-hovertip-tip").off().remove();
                tooltipCache = null;
                if (ttl) {
                    el.attr("title", ttl);
                }
                el.off("mousemove", onMove);
            },
            onLeave = function(){
                if (ttl) {
                    el.attr("title", ttl);
                }
                clearTimeout(tooltipTimeout);
                clearTimeout(tooltipStartDelay);
                tooltipTimeout = setTimeout(removeTip, 100);
            },
            onMove = function(e) { // this is only good for horizontal moves...
                var offset = $tooltip.offset();
                offset.left = e.clientX - (
                    !data.align ? 0 :
                    data.align === 'center' ? $tooltip[0].offsetWidth / 2 :
                    data.align === 'right' ? $tooltip[0].offsetWidth - 20 : // .bc-hovertip-tip:after is not measureable... so i guess 20
                    data.align === 'left' ? -20 : 0
                );
                $tooltip.offset(offset);
            },
            overTip = function(){
                clearTimeout(tooltipTimeout);
                $(this).on("mouseleave", onLeave);
            },
            setOffset = function(){
                var tooltipWidth = $tooltip[0].offsetWidth;

                offset.top -= $tooltip.height() + 30;
                // offset.left -= $tooltip.width();
                offset.left = e.clientX - $tooltip.width();
                switch(align){
                    case "right":
                        // offset.left += el.width();
                        break;
                    case "left":
                        // fall through
                    case "center":
                        //console.log(el.width(), $tooltip.width(), offset.left, tooltipWidth);
                        offset.left += tooltipWidth / 2;
                        $tooltip.addClass('bc-hovertip-tip-center');
                    case "middle":
                        offset.left += el.width() / 2;
                }

                if(data.offset){
                    offset.left += data.offset.left;
                    offset.top += data.offset.top;
                }

                if(offset.top < 10){
                    offset.top = el.offset().top + el.height() + 12;// 12 = height of balloon tip
                    $tooltip.addClass("bc-hovertip-h-flip");
                }

                // flip horizontally when going off screen
                if(offset.left < $tooltip.width()){
                    offset.left = 10;
                    $tooltip.addClass("bc-hovertip-tip-flip");
                }

                $tooltip.offset(offset);
                $tooltip.css("opacity",0);
                if (el.data('tooltip-width')){
                    $tooltip.width(el.data('tooltip-width'));
                }
            },
            render = function(){
                if(!$tooltip.length || $tooltip.length && $tooltip[0].ref != This) {

                    if($tooltip.length) {
                        removeTip();
                    }

                    el.attr("title", "");
                    $tooltip = getTemplate(htmlPath + "form/moTooltip.html", data);
					if (data.content) {
						$tooltip.html(data.content);
					} else {
						if(ttl){
							$tooltip.text(ttl);
						}
                    }

                    if(data.cssClass){
                        $tooltip.addClass(data.cssClass);
                    }

                    $tooltip.appendTo($("body"));
                    $tooltip[0].ref = This;
                    tooltipCache = $tooltip;
                    if(data.onTooltipShow && $.isFunction(data.onTooltipShow)){
                        data.onTooltipShow($tooltip);
                    }

                    opacity = $tooltip.css("opacity");
                    setOffset();
                    $tooltip.fadeTo(".9", opacity);

                    // allow mouse over tooltip
                    if(data.overTip){
                        $tooltip.on("mouseover", overTip);
                    }

                    el.on("mousemove", onMove);
                }
            };


        clearTimeout(tooltipTimeout);

        if(data.startDelay){
            clearTimeout(tooltipStartDelay);
            tooltipStartDelay = setTimeout(render, data.startDelay);
        } else {
            render();
        }
        el.on("mouseleave click", onLeave);
        // el.on("mousemove", onMove); // doesn't work on tooltipStartDelay
        jQuery(document).on('keydown', function(e){
            if (e.keyCode === 27){
                onLeave();
            }
        });
        // el.on("click", onLeave);
    };

    var setTooltip = function(className, params){
        var $ = top ? top.jQuery : jQuery,
            target = params.context ? $(className, params.context) : $(className);

        target.off("mouseenter", this.moTooltip).on("mouseenter", params, this.moTooltip);

        // make sure tooltip is removed when escape key is pressed (ie: container will be closed)
        $(document).off('keyup.tooltip').on('keyup.tooltip', function(e){
            if (e.keyCode === 27){
                $(".bc-hovertip-tip").off().remove();
            }
        });
    };

    // FORM STEPS
    var formsteps = function(params) {
        var $template = getTemplate(htmlPath + 'form/formsteps.html', params);
        jQuery('.bc-formstep:first-child', $template).addClass('bc-formstep-active');
        jQuery('.bc-formstep', $template).click( function() {
            var idx = jQuery(this).parent().children('.bc-formstep').index(this);
            jQuery('.bc-formstep').removeClass('bc-formstep-active');
            jQuery(this).addClass('bc-formstep-active');
            params.steps[idx].callback();
        });
        return returnTemplate($template, params);
    };


    // TOGGLE SWITCH
    var toggleSwitch = function(params) {

        params.activeClassName = 'toggle-checked';

        var $template = getTemplate(htmlPath + 'form/toggle.html', params),
            $switchBox = jQuery('input', $template),
            $label = jQuery('label', $template);

        var setClass = function(value){
            if(!value) {
                $label.addClass(params.activeClassName);
            } else {
                $label.removeClass(params.activeClassName);
            }
        };
        var to; // timeout

        $switchBox.on('click', function(oEvent){
            if(jQuery(this).data("disabled")){
                oEvent.preventDefault();
                oEvent.stopPropagation();
                return false;
            }
            $template[0].val = this.checked;
            $label.toggleClass(params.activeClassName, this.checked);
            $switchBox.attr('checked', this.checked);
        });
        jQuery($template).on('click keydown', function(oEvent){
            clearTimeout(to);
            // only allow access if not disabled
            // keyboard access only allowed for <arrow left>, <arrow right> <enter> or <space>
            if($switchBox.data("disabled") || (oEvent.type == 'keydown' && !(oEvent.which == 13 || oEvent.which == 32 || oEvent.which == 37 || oEvent.which == 38 || oEvent.which == 39 || oEvent.which == 40))){
                oEvent.preventDefault();
                oEvent.stopPropagation();
                return false;
            }
            var This = this;
            var boxChecked = $switchBox.attr('checked');
            if(!boxChecked) {
                $switchBox.attr('checked','checked');
            } else {
                $switchBox.removeAttr('checked');
            }
            setClass(boxChecked);
            if(params.callback) {
                to = setTimeout(function(){ //setTimeout to wait for the Css transition finish
                    params.callback(jQuery(This), $switchBox);
                },300);
            }
        });
        var view = returnTemplate($template, params);
        if(!params.wrapped){
            return view;
        }else{
            return new CommonInterface(view, params);
        }
    };

    // DROPDOWNS
    var dropdown = function(params) {
        var template, selectbox, uid, $dropdowncheckbox = null, $options, op, option, moIndex = 0, selectedIndex = 0;
        // set template location
        if (params.type) {
            template = htmlPath + 'dropdown/'+ params.type +'.html';
        } else {
            template = htmlPath + 'dropdown/dropdown.html';
        }

        // add param for use in mustache rendering of options dropdown
        if (params.type == 'image-select') {
            params.imageSelect = true;
        } else if (params.type == 'action-icon' || params.type == 'action-icon-div') {
            params.actionIcon = true;
            params.dropdown = true;
        } else if (params.type == 'multi-select') {
            params.multiSelect = true;
        } else if (params.type == 'action-select') {
            params.actionSelect = true;
            params.dropdown = true;
            params.header = params.header ? params.header : "Add Menu Item";
        } else if (params.type == 'exec-select') {
            params.execSelect = true;
            params.dropdown = true;
        } else if (params.type == 'all-select') {
            params.allSelect = true;
        } else if (params.type == 'device-select') {
            params.deviceSelect = true;
        } else if (params.type == 'preview-select') {
            params.previewSelect = true;
        } else if (params.type == 'group-select') {
            params.groupSelect = true;
        } else if (params.type == 'center-dropdown') {
            params.centerDropdown == true;
        } else {
            params.dropdown = true;
        }
        // add state class, so options can start out hidden or disabled
        for(op in params.options){
            option = params.options[op];
            option.stateClass = option.hide ? CLASS_HIDDEN : option.disable ? CLASS_DISABLED : "";
        }
        var openDropdown = function($dropdownOptions, $dropdowncheckbox) {
            // animate open
            var pos = $dropdowncheckbox.offset();
            var height = $dropdowncheckbox.height();
            var width = $dropdowncheckbox.width();
            var docHeight = jQuery(document).height();
            var docWidth = jQuery(document).width();
            var winHeight = jQuery(window).height();
            var optionsWidth = $dropdownOptions.outerWidth();
            var optionsHeight = $dropdownOptions.outerHeight();
            var maxHeight = params.maxHeight ? params.maxHeight : 160; // max-height for dropdown checkbox
            var ddPosition = height + optionsHeight + (pos.top - $(window).scrollTop());
            var autoSlideup;

            var ddcheck = pos.left + optionsWidth;
            var left = (pos.left-11) + 'px';
            var top = (pos.top + height) + 'px';
            var right = 'auto';
            var slideAdjustment = 5;
            var $scrollSection = $dropdownOptions.find('.bc-scroll-section');
            var $header = $dropdownOptions.find('header');

            if (ddcheck > docWidth) {
                left = (docWidth - optionsWidth) - 35 + 'px';
            }

            if (params.boundRight){
                left = 'auto';
                right = 0;
            }else if(params.openLeft){
                left = (pos.left + width + 3) + 'px';
                top = (pos.top - slideAdjustment) + 'px';
            } else if (params.centerDropdown) {
                left = (pos.left + 24) + 'px';
            }

            var minWidth = 149;

//              var minWidth = params.minWidth? parseInt(params.minWidth.replace(/px/g, '')) : 149;
            $dropdownOptions.css({
                'position' : 'absolute',
                'top' : top,
                'left' : left,
                'right' : right,
                'bottom' : 'auto',
                'z-index' : '2000',
                'max-height' : maxHeight + 'px',
                'overflow' : 'auto',
                'width' : 'auto',
                'min-width' : function() {
                    if(minWidth > width){
                        return minWidth + 'px';
                    } else {
                        return (width + 32)+'px';
                    }
                }
            });

            if(!params.slideup) {

                if(ddPosition > winHeight) {
                    autoSlideup = true;
                    $dropdowncheckbox.addClass('bc-slideup');
                    $dropdownOptions.addClass('bc-shadow-up');
                } else {
                    autoSlideup = false;
                    $dropdowncheckbox.removeClass('bc-slideup');
                    $dropdownOptions.removeClass('bc-shadow-up');
                }
            }

            if((params.slideup) || (autoSlideup)){
                var bottom = docHeight - pos.top;
                if(docHeight > document.body.clientHeight){
                    bottom = bottom - (docHeight - document.body.clientHeight) - slideAdjustment;
                }else{
                    bottom = bottom - slideAdjustment;
                }

                if(params.openLeft){
                    bottom = bottom - height;
                }

                $dropdownOptions.css({
                    'top' : 'auto',
                    'bottom' : bottom +'px'
                });
            }

            if (params.actionSelect || params.execSelect) {
                $dropdownOptions.css({
                    'margin-left':'-40px'
                });
            }
            $dropdowncheckbox.addClass('bc-open');
            $dropdownOptions.slideDown('fast',function(){
                // jQuery Animation bug (overflow set to hidden)
                $dropdownOptions.css('overflow', 'auto');

                // if outside ($dropdownOptions) has max-height the inside ($scrollSection) doesn't know
                // how high is should be to enable scroll bars (with CSS not possible to be solved)
                var dropdownOptionsHeight = $dropdownOptions.height();

                if (dropdownOptionsHeight) $scrollSection.css({
                    'max-height': dropdownOptionsHeight - $header.height()
                });
            });
        };

        var closeDropdown = function($dropdownOptions, $dropdowncheckbox) {
            //do not perform close action is beforeClose exists and it return FALSE
            if($dropdownOptions[0].beforeClose && $dropdownOptions[0].beforeClose(view) === false){ return; }
            $dropdownOptions.slideUp('fast',function(){
                //$dropdownOptions.remove();
                $dropdownOptions.detach();
                $dropdowncheckbox.removeClass('bc-open');
            });
        };

        var filterOptions = function(input) {
            var sSearch = input.value;
            var oDropDown = $(input).closest('.bc-dropdown-items');
            var aItems = oDropDown.find('.bc-dropdown-item');

            for (var i = 0; i < aItems.length; i++) {
                var sValue = aItems[i].getAttribute('data-search') || '';

                sValue = sValue.toLowerCase();
                var iContains = sValue.search(sSearch);
                if (iContains !== -1 && sSearch !== '') {

                    // if goups are available do not filter out the header if there is an option available
                    if (aItems[i].dataset.group) {
                        var aHeaders = oDropDown.find('.bc-dropdown-item-header');
                        for (var j = 0; j < aHeaders.length; j++) {
                            if (aHeaders[j].getAttribute('data-group') == aItems[i].getAttribute('data-group')) {
                                $(aHeaders[j]).removeClass('bc-dropdown-item-searchhide');
                                $(aHeaders[j]).addClass('bc-dropdown-item-searchshow');
                            }
                        }
                    }

                    // both classes are needed because of specificity for the group show/hide class
                    $(aItems[i]).removeClass('bc-dropdown-item-searchhide');
                    $(aItems[i]).addClass('bc-dropdown-item-searchshow');
                } else if (sSearch === '') {
                    $(aItems[i]).removeClass('bc-dropdown-item-searchhide');
                    $(aItems[i]).removeClass('bc-dropdown-item-searchshow');
                } else {
                    $(aItems[i]).addClass('bc-dropdown-item-searchhide');
                    $(aItems[i]).removeClass('bc-dropdown-item-searchshow');
                }
            }
            var oSearchWrapper = $(input).closest('.bc-dropdown-search');
            if (sSearch !== '') {
                oSearchWrapper.removeClass('bc-dropdown-search-empty');
            } else {
                if (!oSearchWrapper.hasClass('bc-dropdown-search-empty')) {
                    oSearchWrapper.addClass('bc-dropdown-search-empty');
                }
            }
        };

        // dropdown init
        if (!bc.dropdownInitDone){
            jQuery(document.body).bind('click', function(ev) {
                if (jQuery('.bc-dropdown-items').length > 0) {
                    if (!$(ev.target).hasClass('bc-dropdown-search-input')) {
                        closeDropdown(jQuery('.bc-dropdown-items'), jQuery('.bc-selectbox.bc-open'));
                    }
                }
            });
            jQuery('.bd-closeIcon').bind('click.component', function(ev) {
                if(jQuery('.bc-dropdown-items').length > 0){
                    closeDropdown(jQuery('.bc-dropdown-items'), jQuery('.bc-selectbox.bc-open'));
                }
            });
            jQuery(document.body).on('click', '.bc-selectbox', function(event) {
                event.stopPropagation();
            });
            jQuery(document.body).on('click', '.bc-dropdown-search-reset', function(event) {
                event.stopPropagation();
                var wrapper = $(event.target).closest('.bc-dropdown-search');
                var oInput = wrapper.find('.bc-dropdown-search-input')[0];
                oInput.value = '';
                filterOptions(oInput);
            });
            jQuery(document.body).on('keyup', '.bc-dropdown-search-input', function(event) {
                filterOptions(event.currentTarget);
            });
            jQuery(window).unbind('resize.dropDown').bind('resize.dropDown', function(ev) {
                if(jQuery('.bc-dropdown-items').length > 0){
                    closeDropdown(jQuery('.bc-dropdown-items'), jQuery('.bc-selectbox.bc-open'));
                }
            });

            bc.dropdownInitDone = true;
        }

        template = be.utils.processHTMLTemplateByUrl(template, params);

        // cache options
        var dropdownOptions = be.utils.processHTMLTemplateByUrl(htmlPath + 'dropdown/dropdown-options.html', params);
        var $dropdownOptions = jQuery(dropdownOptions);

        if(params.cssClass){
            $dropdownOptions.addClass(params.cssClass);
        }
        var $template = jQuery(template);

        try{
            /*
             * $template may contain TextNode,
             * using jQuery.Data() on the TextNode will cause
             * "Object doesn't support this property or method" error in IE-8
            */
            $template.data('index', 0);
        }catch(err){
            if(bd.devMode) console.log(err);
        }


        // console.log('params', params);
        if(!params.staticLabel)  {
            var $selectbox = $(getTemplate(htmlPath + 'dropdown/browser-selectbox.html', params));
            if(params.selected !== null || params.selected !== undefined) {
                $selectbox.val(params.selected);
                $dropdownOptions.find('a').filter(function(){
                    return $(this).data('value') == params.selected;
                }).addClass('bc-template-selected');
            }
            if(!params.target) {
                $template.wrap('<div class="bc-selectbox-wrapper" />');
                $template.prepend($selectbox);
            } else {
                var $target = jQuery(params.target),
                    cid = "bc-dd-" + (params.type ? params.type + '-' + params.uid : params.uid),
                    $prevSelect = $('.' + params.forlabel + '[data-cid=\'' + cid + '\']', $target);
                $prevSelect.remove();   // no duplicates
                $target.prepend($selectbox);
            }
        }

        var $templateCheckBox = $template.find('span.bc-custom-checkbox');
        if($templateCheckBox.length){
            $templateCheckBox.each(function(){
                var checkBox = bc.component.checkBox({color:'grey'});
                jQuery(this).replaceWith(checkBox);
            });
        }

        // show hide for group select
        var groupShowHide = function(option) {
            var root = option.closest('.bc-scroll-section');
            var aItems = root.find('.bc-dropdown-item');
            var sGroup = option.attr('data-group');

            for (var k = 0; k < aItems.length; k++) {
                if (!$(aItems[k]).hasClass('bc-dropdown-item-header') && (aItems[k].getAttribute('data-group') == sGroup)) {
                    if (option.hasClass('bc-dropdown-item-header-open')) {
                        $(aItems[k]).addClass('bc-dropdown-item-grouphide');
                    } else {
                        $(aItems[k]).removeClass('bc-dropdown-item-grouphide');
                    }
                }
            }

            option.toggleClass('bc-dropdown-item-header-open');
        };

        var initDropDownOptions = function($dropDown, $hiddenSelect){

            var $optionsCheckBox = $dropdownOptions.find('span.bc-custom-checkbox');

            if($optionsCheckBox.length){
                $optionsCheckBox.each(function(idx){
                    var checkBox = bc.component.checkBox({color:'grey', checked : !!params.options[idx].checked});
                    jQuery(this).replaceWith(checkBox);
                });
            }

            $options = $dropdownOptions.find('a');
            if(params && params.options){
                for (var i = 0, l = params.options.length; i < l; i++){
                    if (params.options[i]){
                        var option = params.options[i],
                            $option = $options.eq(i);
                        if (params.actionSelect || params.execSelect || params.actionIcon || params.customHandlers){
                            $options[i].handler = option['handler'];
                        }
                        $option.data('index', i);
                        if(params.label && $option.text() == params.label){ // selected item
                            moIndex = selectedIndex = parseInt($option.data('index'), 10);

                            // open up the group if it is a group select dropdown
                            if (params.groupSelect) {
                                var header = $dropdownOptions.find('.bc-dropdown-item-header[data-group='+ $option.attr('data-group') +']');
                                groupShowHide(header);
                            }

                            $option.addClass('bc-template-selected');
                        }
                    }
                }
            }
            $options.on('click.ddoptions', function(event) {
                var $this = jQuery(this);

                if($this.data("disabled")){
                    event.preventDefault();
                    event.stopPropagation();
                    return false;
                }
                if((!params.staticLabel) && (!params.noSelect) && !$(event.currentTarget).hasClass('bc-dropdown-item-header')) {
                    var selection = jQuery('.bc-option-label', $this).text();
                    jQuery('.bc-label', $dropDown).text(selection);

                    $hiddenSelect.attr('value', $this.attr('data-value'));
                    $hiddenSelect.val($this.attr('data-value'));
                    if (!params.execSelect){
                        $this.siblings().removeClass('bc-template-selected');
                        $this.addClass('bc-template-selected');
                    }
                }
                if(params.multiSelect){
                    event.stopPropagation();
                    $this.children('.bc-custom-checkbox').trigger('click');
                }else if(params.allSelect){
                    if($this.hasClass('bc-selectall')){
                        $dropDown.find('.bc-custom-checkbox').removeClass('c_off').addClass('c_on')
                           .children('input').attr('checked',true);
                    }else{
                        $dropDown.find('.bc-custom-checkbox').removeClass('c_on').addClass('c_off')
                           .children('input').attr('checked',false);
                    }
                } else if (params.groupSelect) {
                    if ($this.hasClass('bc-dropdown-item-header')) {
                        event.stopPropagation();
                        groupShowHide($this);
                    }
                    if (this.handler){
                        this.handler(event);
                    }
                } else if (params.execSelect || params.customHandlers){
                    if (this.handler){
                        this.handler(event);
                    }
                } else {
                   closeDropdown($dropdownOptions, $dropDown);
                }

                moIndex = parseInt($this.data('index'), 10);

                if ($hiddenSelect) $hiddenSelect.trigger('change');

            });
        };
        initDropDownOptions($template, $selectbox);


        var toggleDropdown = function(ev) {
            var $this = jQuery(this);

            if(ev.type == 'keydown'){
                // only allow <enter> or <space>, <arrow up> or <arrow down> keys
                if(!(ev.which == 13 || ev.which == 32 || ev.which == 38 || ev.which == 40)) return;
                ev.preventDefault();
                ev.stopPropagation();
            }
            if (params.stopPropagation){
                ev.stopPropagation();
            }
            if($this.hasClass('bd-gradient-grey-disabled') || $this.hasClass('bd-groups-empty')){
                ev.stopImmediatePropagation();
            } else {
                // arrow selection
                if(ev.which == 38 || ev.which == 40){
                    if($options.length == 0) $options = $dropdownOptions.find('a');
                    moIndex = ev.which == 38 ? moIndex - 1 : moIndex + 1;
                    moIndex = moIndex > $options.length - 1 ? 0 : moIndex < 0 ? $options.length -1 : moIndex;
                    var $option = $options.eq(moIndex);
                    if($option.length){
                        $options.removeClass('bc-hovered');
                        $option.addClass('bc-hovered');
                    }
                    return;
                }
                if(jQuery('.bc-dropdown-items').length > 0){
                    closeDropdown(jQuery('.bc-dropdown-items'), jQuery('.bc-selectbox.bc-open'));
                }

                //jQuery(document.body).trigger('click.ddoptions');

                if($this.hasClass('bc-open')){
                    $options = $dropdownOptions.find('a');

                    // if index of current option is not the selected index or there's only one option left, trigger click on this option
                    if(ev.type == 'keydown' && (moIndex != selectedIndex || $options.length == 1)){
                        $options.eq(moIndex).trigger('click');
                    }else{
                        closeDropdown($dropdownOptions, $this);
                    }
                }else{
                    jQuery(document.body).append($dropdownOptions);

                    if(params.allSelect && ev.target == $this.children('.bc-custom-checkbox')[0]){
                        return;
                    }else if(params.actionSelect && $this[0].nodeName.toLowerCase() == 'button'){//TODO: nned a wrapper for actionSelect
                        return;
                    }else if(params.execSelect && $this[0].nodeName.toLowerCase() == 'button'){//TODO: nned a wrapper for actionSelect
                        if (params.handler){
                            params.handler(ev);
                        } else {
                            return;
                        }
                    }else{
                        //do not perform open action is beforeOpen exists and it return FALSE
                        if($dropdownOptions[0].beforeOpen && $dropdownOptions[0].beforeOpen(view) === false){ return; }
                        openDropdown($dropdownOptions, $this);
                        return false;
                    }
                }
            }
        };

        $template.on('click keydown', toggleDropdown);
        //TODO: get rid of this reference
        //reference to the option of the dropdown
        $template[0].dropdownOptions = $dropdownOptions;
        //getParent method for the $dropdownOptions, doing the method instead of the property reference
        $dropdownOptions[0].getOptsParent = function(){ return $template; };

        //beforeOpen and beforeClose belong to the drop down option, because the animation is on the dropdown option
        if(params.beforeOpen) $dropdownOptions[0].beforeOpen = params.beforeOpen;
        if(params.beforeClose) $dropdownOptions[0].beforeClose = params.beforeClose;


        var view = returnTemplate($template, params);
        if(params.wrapped){
            view = new CommonInterface(view, params, $dropdownOptions);
        }


        return view;
    };

    // Slider / Range
    var slider = function(params) {
        var oDefaults = {},
            oParams = jQuery.extend({}, oDefaults, params),
            $template = getTemplate(htmlPath + 'form/slider.html', oParams),
            sliderLabel = $template.find('.bc-slider-value'),
            sliderContainer = $template.find('.bc-slider-container'),
            sliderInput = $template.find('.bc-slider-input');

        sliderLabel.text(params.range ? params.values.join(' - ') : params.value);

        oParams.slide = function(event, ui){
            sliderLabel.text(params.range ? ui.values.join(' - ') : ui.value);
            ui.handle.title = ui.value;
            console.log(sliderInput, ui.value);
            sliderInput[0].value = ui.value;
            if(params && jQuery.isFunction(params.slide)){
                params.slide(event, ui);
            }
        };

        sliderContainer.slider(oParams);

        return returnTemplate($template, params);
    };


    var CommonInterface = function(view, params, options){

        var $view = options ? options : view; // nasty, but options are appended straight to body

        var getEl = function(idOrIndex){
            var isIndex = idOrIndex === parseInt(idOrIndex, 10);
            if(isIndex){
                // return element at index in collection
                // return collection[index]
            }else{
                return jQuery(idOrIndex, $view);
            }
        };
        var add = function(idOrIndex){

        };
        var remove = function(idOrIndex){

        };
        var enable = function(idOrIndex){
            getEl(idOrIndex)
                .removeClass(CLASS_DISABLED)
                .data("disabled", false);
        };
        var disable = function(idOrIndex){
            getEl(idOrIndex)
                .addClass(CLASS_DISABLED)
                .data("disabled", true);
        };
        var show = function(idOrIndex){
            getEl(idOrIndex)
                .removeClass(CLASS_HIDDEN)
                .data("hidden", false);
        };
        var hide = function(idOrIndex){
            getEl(idOrIndex)
                .addClass(CLASS_HIDDEN)
                .data("hidden", true);
        };
        var toggle = function(idOrIndex, on){
            getEl(idOrIndex)
                .toggleClass(CLASS_HIDDEN, !on)
                .data("hidden", !on);
        };
        var toggleEnabled = function(idOrIndex, on){
            getEl(idOrIndex)
                .toggleClass(CLASS_DISABLED, !on)
                .data("disabled", !on);
        };
        var select = function(idOrIndex){

        };
        var deselect = function(idOrIndex){

        };

        var value;
        // etc

        return {
            view            : view,
            show            : show,
            hide            : hide,
            toggle          : toggle,
            enable          : enable,
            disable         : disable,
            toggleEnabled   : toggleEnabled

        };

    };
    // BUTTON
    var button = function(params) {
        if (params.type) {
            switch(params.type) {
                case 'primary':
                  params.primary = true;
                  params.color = 'green';
                  break;
                case 'secondary':
                  params.secondary = true;
                  break;
                case 'button-text':
                  params.textbutton = true;
                  break;
                case 'loadmore':
                  params.loadmore = true;
                  break;
                case 'additem':
                  params.additem = true;
                  break;
                case 'bigbutton':
                  params.bigbutton = true;
                  params.noshadow = true;
                  break;
                case 'dashboardclose':
                  params.dashboardclose = true;
                  params.shadow = true;
                  break;
                case 'sort':
                  params.sortButton = true;
                  break;

            }
        } else {
            params.primary = true;
        }
        if (!params.color) params.color = 'grey';
        var $template = getTemplate(htmlPath + 'button/button.html', params);
        return returnTemplate($template, params);

    };

    var toggleButton = function(params) {
        var _counter = -1;
        // params.itemCls = function(){
        //     switch (++_counter){
        //         case 0:
        //             return 'bc-roundcorner-left-5';
        //         case params.buttons.length - 1:
        //             return 'bc-roundcorner-right-5';
        //         default:
        //             return '';
        //     }
        // };
        var $template = getTemplate(htmlPath + 'button/toggleButton.html', params);
        $template.click(function(ev){
            var $this = jQuery(this), $btn = jQuery(ev.target);
            if ($btn[0].tagName.toLowerCase() === 'span'){
                $btn = $btn.parent('div');
            }
            if ($btn.hasClass('bc-view-active') && !params.allowInactive || $btn.hasClass('bd-gradient-grey-disabled')){
                return;
            }
            $btn.toggleClass('bc-view-active');
            if (!params.multiSelect){
                $btn.siblings().removeClass('bc-view-active');
            }
            $this.find('> div').each(function(idx, el){
                var $el = jQuery(el);
                if (params.buttons[idx].iconCls){
                    if ($el.hasClass('bc-view-active')){
                        jQuery('> span', $el).removeClass(params.buttons[idx].iconCls);
                        jQuery('> span', $el).addClass(params.buttons[idx].activeIconCls);
                    } else {
                        jQuery('> span', $el).removeClass(params.buttons[idx].activeIconCls);
                        jQuery('> span', $el).addClass(params.buttons[idx].iconCls);
                    }
                }
                if (el === $btn[0] && params.buttons[idx].handler){
                    params.buttons[idx].handler($btn.hasClass('bc-view-active'));
                }
            });
        });
        return returnTemplate($template, params);
    };

    // dialog
    var hideOverlay = function(overlay, modalCover){
        overlay.animate({'opacity': '0','filter':'alpha(opacity=0)','margin-top': '+=10'}, function() {
            console.log("animation 1 done");
            overlay.remove();
        });
        modalCover.animate({'opacity': '0','filter':'alpha(opacity=0)'}, function() {
            console.log("animation 2 done");
            modalCover.remove();
            currentDialog = null;
        });
    };

    var Dialog = function(params){

        this.hide = function(){
            var deferred = new $.Deferred();
            jQuery(document).off('keyup.dialog');
            var This = this;
            var p1 = this.$template.animate({'opacity': '0','filter':'alpha(opacity=0)','margin-top': '+=10'});
            var p2 = this.$modalCover.animate({'opacity': '0','filter':'alpha(opacity=0)'});
            $.when(p1, p2).then(
                function(){
                    This.$template.remove();
                    This.$modalCover.remove();
                    currentDialog = null;
                    bc.dialogOpen = false;
                    deferred.resolve();
                }
            );

            return deferred.promise();
        };

        this.show = function(){
            bc.dialogOpen = true;
            jQuery('.bc-modal-notify').hide(); // hide remaining notifications if any
            jQuery(document.body).append(this.$template);

            // position modal in center
            var tWidth = this.$template.outerWidth();
            var tHeight = this.$template.outerHeight();

            jQuery('body').append(this.$modalCover);
            this.$modalCover.css({opacity:0}).animate({opacity: 0.3});
            this.$template.css({'visibility':'visible','margin-left':-tWidth/2+'px','margin-top':(-tHeight/2) - 10 +'px'});
            this.$template.animate({opacity: 1,'margin-top': '+=10'});
        };

        this.is = function(dialog){
            return dialog && this.params.message == dialog.params.message;
        };

        this.$template = null;
        this.$modalCover = null;
        this.params = params;

        return this;
    };

    var dialog = function(params) {

        var d = new Dialog(params);
        if(d.is(currentDialog)){
            return;
        }else if(currentDialog){
            currentDialog.hide().done(function(){
                dialog(params);
            });
            return;
        }
        currentDialog = d;

        var defaultParams = {
            title: 'Sorry',
            message: 'An unknown error has occurred',
            closeIcon: true,
            respondToEscKey: true,
            buttons: [{
                title: 'OK',
                type: 'white',
                callback: function(){}
            }, {
                title: 'Cancel',
                type: 'text',
                callback: function(){}
            }]
        };

        params = jQuery.extend(defaultParams, params || {});

        var $template = getTemplate(htmlPath + 'modal/dialog.html', params);
        var $modalCover = jQuery('<div class="bc-modal-cover"></div>');
        currentDialog.$template = $template;
        currentDialog.$modalCover = $modalCover;

        $template.css({'visibility':'hidden','opacity':'0','filter':'alpha(opacity=0)'});

        for (var i = 0, l = params.buttons.length; i < l; i++){
            var $btn = getTemplate(htmlPath + 'button/modal.html', params.buttons[i]);
            if (params.buttons[i].style){
                $btn.css(params.buttons[i].style);
            }
            $template.find('.bc-button-row').append($btn);
            if (!params.buttons[i].textOnly && !params.buttons[i].disabled){
                $btn.bind('click', (function(i){
                    return function(e){
                        e.preventDefault();
                        if(params.buttons[i].callback){
                            params.buttons[i].callback();
                        }
                        currentDialog.hide();
                    };
                })(i));
            }
        }

        if (params.closeIcon){ // TODO make generic
            $template.find('.bc-modal-close').bind('click', function(e){
                e.preventDefault();
                currentDialog.hide();
            });
        }

        if (params.respondToEscKey){ // TODO make generic for all components and executing _only_ for current component
            jQuery(document).on('keyup.dialog', function(e){
                if (e.keyCode === 27){
                    currentDialog.hide();
                }else if (e.keyCode === 13 && params.buttons.length == 1){ // if there is one button it is safe to assume that buttons actions can be triggered by pressing enter
                    $btn.trigger("click");
                }
                return false;
            });
        }

        currentDialog.show();
    };

    var hint = function(params) {
        var $template = getTemplate(htmlPath + 'panel/hint.html', params);
        return returnTemplate($template, params);
    };




    var DateField = function(params){
        var DateLib = DateLib || b$.require('bd.date.DateLib');
        var that = this;
        this.dateLib = this.getDateLib();
        this.today = this.dateLib.currentDay();
        this.startDate = params.val = params.val ? this.dateLib.formatDate(params.val) : '';
        this.serverFormattedDefaultDate = this.dateLib.formatDateForServer(this.startDate);
        this.$template = this.getTemplate(params);
//        this.template = this.$template[0];
        this.$btn_incr = $('.bc-date-incr', this.$template);
        this.$btn_decr = $('.bc-date-decr', this.$template);
        this.$dateField = $('.bc-date-input', this.$template);
        this.callback = params.callback;
        this.$template.on('click', function(e){
            var $target = $(e.target).closest('.bd-button'),
                direction = $target.hasClass('bc-date-decr') ? -1 : $target.hasClass('bc-date-incr') ? 1 : 0;
            if(direction !== 0){
                that.adjustDate(direction);
            }
        });
        this.$template.on('keyup', function(e){
            that.dateChanged();
        });
        this.$template.on('keydown', function(e){
            that.previousValue = that.$dateField.val();
        });
        if (params.target) {
            $(params.target).append(this.$template);
        }
    };

    DateField.prototype = {

        reset: function(){
            this.$dateField.val(this.startDate);
        },

        getTemplate : function(params){
            return getTemplate(htmlPath + 'form/date.html', params);
        },

        getDateLib : function(){
            var DateLib = DateLib || b$.require('bd.date.DateLib');
            var dateFormat = DateLib.DATE_FORMAT_US, delimiter = '/';
            if (bc.dateTimeFormat.dateShort){
                delimiter = bc.dateTimeFormat.dateShort.match(/([\/\.\-])/)[0];
                var tmp = bc.dateTimeFormat.dateShort.split(delimiter);
                for (var i = 0; i < 3; i++){
                    tmp[i] = tmp[i].replace(/^(d|M)$/, "\\d{1,2}")
                        .replace(/^(dd|MM)$/, "\\d{2}")
                        .replace(/^(y|yy)$/, "\\d{2,4}");
                }
                var re = new RegExp(tmp.join('\\' + delimiter));
                dateFormat = {
                    example : bc.dateTimeFormat.dateShort,
                    format  : bc.dateTimeFormat.dateShort,
                    test    : function(str){
                        return re.test(str);
                    },
                    convert : function(str, delim, todb){
                        delim = delim || "";
                        return str.split(DateLib.delimiter).join(delim);
                    }
                };
            }
            return this.dateLib || new DateLib(dateFormat, "yyyymmdd", delimiter);
        },

        adjustDate: function(direction){
            var DateLib = DateLib || b$.require('bd.date.DateLib');
            var dateValue = DateLib.parseDate(this.$dateField.val());
            var formattedDate;

            if(dateValue){
                if(direction === 1){
                    dateValue = dateValue.next();
                } else {
                    dateValue = dateValue.prev();
                }

                formattedDate = dateValue.toString(bc.dateTimeFormat.dateShort);
            } else {
                formattedDate = this.today;
            }

            this.$dateField.val(formattedDate);
            if(this.callback){
                this.callback(this.dateLib.formatDateForServer(formattedDate));
            }
        },

        dateChanged: function(){
            var DateLib = DateLib || b$.require('bd.date.DateLib');
            var dateStr = this.$dateField.val(),
                dateValue = DateLib.parseDate(dateStr),
                formattedDate;

            if (be.utils.trimString(dateStr) === '') {
                if(this.callback) {
                    this.callback('');
                }
            } else if (dateValue && isFinite(new Date(dateValue.toString('yy-MM-dd'))) && this.previousValue !== dateStr) {
                formattedDate = dateValue.toString(bc.dateTimeFormat.dateShort);
                if(this.callback){
                    this.callback(this.dateLib.formatDateForServer(formattedDate));
                }
            }
        }
    };

    var dateField = function(params){
        var df = new DateField(params);
        return df;
    };

    var toggle = function(params) {

        params.activeClassName = 'toggle-checked';

        var $template = getTemplate(htmlPath + 'button/toggle.html', params);
        $template.on('click', function(evt){
            evt.stopPropagation();
            if (evt.target === jQuery('.bc-toggle-grip', $template)[0]){
                var newState = $template.hasClass('checked') ? false : true;
                if (params.handler){
                    params.handler(newState, function(){
                        $template.toggleClass('checked', newState);
                    });
                } else {
                    $template.toggleClass('checked', newState);
                }
            }
        });
        var view = returnTemplate($template, params);
        return view;
    };

    var checkSelectedItems = function($body, $wrapper){
        var numberSelected = jQuery('.bc-s-selected', $body).length;
        $wrapper.toggleClass('bc-s-active', numberSelected > 0);
        $wrapper.toggleClass('bc-s-multi', numberSelected > 1);
    };

    var addKeyboardAccess = function($form, params){

        setTimeout(function(){
            var query = 'input:not(:hidden,.bc-toggle-switch,.bc-toggleSwitch,[type="checkbox"]), .bc-select, .bc-selectbox:not([class*="disabled"]), .toggle-switch, div.bc-switch, button, a:not(.bc-doc-link, .bd-pageNameLink), textarea, img',
                ti = 1,
                $fields = $(query, $form),
                selectedIndex = 0,
                $first, to, el_ti;

            if(bc.component.$fields){
                bc.component.$fields.each(function(){
                    $(this).removeAttr('tabindex');
                });
            }
            bc.component.$fields = $fields;

            // make sure regular select boxes and disabled fields are not included in tabbing order
            $('.bc-selectbox[class*="disabled"], select', $form).attr('tabindex', -1);

            $fields.each(function(){
                var $elm = $(this);
                // add tab index so we can also tab through custom form fields
                $elm.attr('tabIndex', ti++);
            });

            // focus first element or element at tab index supplied as selectedIndex. (a selectedIndex of -1 will focus the last element.)
            if(params && params.selectedIndex){
                selectedIndex = params.selectedIndex > -1 ? params.selectedIndex : $fields.length - 1;
            }
            $first = $fields.eq(selectedIndex);
            $first.focus();
            ti = parseInt($first.attr('tabindex'), 10);

            $(window).off('keyup.bc-tab').on('keyup.bc-tab', function(e){
                if(e.which == 9){
//                    e.preventDefault();
                    el_ti = parseInt($(document.activeElement).attr('tabindex'), 10);
                    if(!el_ti){
                        $first.focus();
                        ti = 1;
                    }else if(el_ti == ti){ // we're stuck, tab stopped working, help it on the way again
                        el_ti = ti;
                        $fields.eq(el_ti).focus();
                    }
                    ti = el_ti;
                }
            });
        }, 400);
    };

    /* jquery UI based components */
    /**
     * function tokenize: transforms regular input field into tokenized autocomplete input field
     * @param params (Object) contains all configuration parameters
     * params.field (jquery dom element reference to original input) is required
     * @return {*}
     */
    var tokenize = function(params){

        // only filtering certain parameters.
        // See http://loopj.com/jquery-tokeninput/ for more configuration parameters

        var portalName = bd.selectedPortalName || (b$ && b$.portal && b$.portal.portalName) || 'dashboard'; // TODO: fail safe way?

        // default values
        var defaults = {
            minChars:2,
            offset: 0,
            pageSize: 20,
            url: bd.contextRoot + '/portals/' + portalName + '/pagemanagement/search/links',
            queryParam: 'query',
            zindex: 20000, // ?
            contentType: 'xml',
            tokenLimit: 1,
            appendQuery: false, // Append sarch query to results
            hintText: 'Drag a page from the page list, or type a URL',

            resultsFormatter : function(item){
                var title = item.finalUrl ? ' title="' + item.finalUrl + '"' : '',
                    icon = item.icon ? ('<i class="bd-cke-icn bc-icn ' + item.icon + '"></i>') : '';
                return '<li' + title + '>' + icon + item.name + "</li>";
            },

            tokenFormatter: function(item) {
                var className = item.managed ? 'bd-man bc-tokenized' : 'bc-tokenized',
                    title = item.finalUrl ? ' title="' + item.finalUrl + '"' : '',
                    icon = item.icon ? '<i class="bc-icn ' + item.icon + '"></i>' : '';
                return '<li class="' + className + '" ' +  title + '>' + icon + item.name +  '</li>';
            },

            onResult: function (results) {
                var tJson = results.isJson ? results : bd.xmlToJson({xml: results}).links || {link: []},
                    links = tJson && tJson.link || [],
                    data = [];
                links = jQuery.isArray(links) ? links : [links];

                jQuery.each(links, function(i, el){
                    var itemType = el.properties.itemType.value;
                    if(
                        el.parentItemName == portalName ||        // skip root links
                        el.parentItemName == 'masterpage_root' || // skip mp links
                        itemType == 'menuHeader' ||               // skip header links
                        itemType == 'divider'                     // skip dividers
                    ) return;

                    data.push(getTokenData(el));
                });

                if(params.appendQuery){
                    data.push({id:'0', name: $("tester").text()});
                }

                return data;
            }
        };

        params = $.extend({}, defaults, params);

        // set values from params or fall back to defaults
        var field = params.field,
            url = params.url;

        var getTokenData = function(linkData){
            if(linkData){
                var icon = top.bd && top.bd.pm && top.bd.pm.view.getItemTypeObj(linkData);
                return {
                    id: linkData.uuid,
                    name: linkData.properties.title.value,
                    icon: icon ? icon.icon : 'bc-page',
                    finalUrl: linkData.finalUrl,
                    managed: true
                };
            } else {
                return {};
            }
        };


        /* --------------------------------------------------- */
        /* ----- installing D&D listeners for menu items ----- */
        /* --------------------------------------------------- */
        // TODO: make difference between link types (divider, header,...). Needs more investigation though

        $(field).closest('.bd-token-dnd').bdDrop({
            enter: function(e, info) {
                var dragData = info.helper.bdDragData;

                if (dragData.link) {
                    $(this).find('.token-input-list').addClass('bc-drag-over');
                    $('#vakata-dragged').find('ins').hide();
                }
                return;
            },
            leave: function(e, info) {
                var dragData = info.helper.bdDragData;

                if (dragData.link) {
                    $(this).find('.token-input-list').removeClass('bc-drag-over');
                    $('#vakata-dragged').find('ins').show();
                }
                return;
            },
            drop: function(e, info) {
                var dragData = info.helper.bdDragData;

                if (dragData.link) {
                    if (params.tokenLimit === 1) {
                        field.tokenInput('clear');
                    }
                    $(this).find('.token-input-list').removeClass('bc-drag-over');
                    field.addItem(dragData.link);
                }
                return;
            }
        });


        // add search API params (if not in url already)
        if(url.indexOf('?') < 0){
            url = url + '?';
        }
        if(url.indexOf('ps=') < 0){
            if(url.charAt(url.length - 1) != '?'){
                url += '&';
            }
            url = url + 'ps=' + params.pageSize;
        }
        if(url.indexOf('of=') < 0){
            if(url.charAt(url.length - 1) != '?'){
                url += '&';
            }
            url = url + 'of=' + params.offset;
        }

        // call jQuery UI API:
        if(field.tokenInput){
            field.getTokenData = getTokenData;
            field.addItem = function(linkData){
                field.tokenInput('add', getTokenData(linkData));
            };
            $('.token-input-dropdown').remove(); // make sure we have only one of these lying around
            field.tokenInput(
                url,
                params
            );

            if(params.placeholder){
                $('.token-input-input-token input').attr('placeholder', params.placeholder);
            }
        }
        /* // TODO: add click outside functionality, so dropdowns don't linger (just as stub now)
        be.utils.clickOutside({
            area:  field,
            ns: 'tokenizer',
            outside: function(){
                console.log('outside');
            },
            enter: function(){
                console.log('enter');
            },
            escape: function(){
                console.log('escape');
            }
        });
        */
        return field;

    };

    // public functions
    return {
        balloon: balloon,
        button: button,
        checkBox: checkBox,
        checkSelectedItems: checkSelectedItems,
        confirm: confirm,
        dialog : dialog,
        dropdown: dropdown,
        dateField: dateField,
        feedback: feedback,
        formsteps: formsteps,
        hint: hint,
        modalform: modalform,
        moTooltip:moTooltip,
        notify: notify,
        pagination: pagination,
        radioButton: radioButton,
        setTooltip:setTooltip,
        slider: slider,
        spinner: spinner,
        tabs: tabs,
        textArea: textArea,
        textBox: textBox,
        toggle: toggle,
        toggleButton: toggleButton,
        toggleSwitch: toggleSwitch,
        tooltip: tooltip,
        tokenize: tokenize,
        addKeyboardAccess:addKeyboardAccess
    };
})(jQuery);

jQuery(document).delegate('.bc-tab-label', 'click', function(evt){
    var $target = jQuery(evt.target);
    $target.addClass('bc-active-tab').siblings('.bc-tab-label').removeClass('bc-active-tab');

    if ($target.data('for') !== undefined){
        jQuery('.bc-tab' + $target.data('for')).show().siblings('.bc-tab').hide();
    }
});

/* Multiselect */
jQuery(document).delegate('.bc-selectable-list .bc-s-item', 'click', function(evt){
    var $item = jQuery(this);
    var $body = $item.parent();
    var $wrapper = $item.parents('.bc-s-wrapper');

    var $firstSelected = jQuery('.bc-s-first', $body);

    if (evt.shiftKey && $firstSelected) {
        $body.children().removeClass('bc-s-selected');
        var firstSelectIdx = $body.children().index($firstSelected);
        var currentSelectIdx = $body.children().index($item);
        $body.children().each(function(idx, el) {
            var $i = jQuery(el);
            if (idx >= Math.min(firstSelectIdx, currentSelectIdx) && idx <= Math.max(firstSelectIdx, currentSelectIdx)) {
                if ($i.is(':visible')) {
                    $i.addClass('bc-s-selected');
                }
            }
        });
    } else if ((evt.ctrlKey || evt.metaKey) && $firstSelected) {
        $item.toggleClass('bc-s-selected');
    } else {
        $item.addClass('bc-s-first').siblings().removeClass('bc-s-selected bc-s-first');
        $item.toggleClass('bc-s-selected');
    }

    bc.component.checkSelectedItems($body, $wrapper);
});

jQuery(document).on('click', function(evt){
    if (jQuery(evt.target).parents('.bc-selectable-list').length === 0 && !bc.keepSelection){
        jQuery('.bc-s-selected').removeClass('bc-s-selected');
        jQuery('.bc-s-first').removeClass('bc-s-first');
        jQuery('.bc-s-wrapper').removeClass('bc-s-active bc-s-multi');
    }
    delete bc.keepSelection;
});


// BBTree

;(function(window, root, undefined) {
    "use strict";

    var BBTree = function(options) {
            this.nodes = {
                tree: options.treeRoot,
                jumper: options.treeRoot.querySelector('.' + options.jumperID) || options.jumperID || 'bd-tree-jumper',
                toggle: options.treeRoot.querySelector('.' + options.toggleID) || options.toggleID || 'bd-tree-opener'
            };

            this.options = {
                classPrefix: 'bd-tree-',
                selectedClassName: 'bd-tree-selected',
                collapsedClassName: 'bd-tree-closed',
                openedClassName: 'bd-tree-open',
                loadingClassName: 'bd-tree-loading',
                jumperContainerClassName: 'bd-tree-items',
                dataID: 'data-uuid',

                toggleTime: 400,
                easing: function(n) {return -(--n * n * n * n - 1);}, // quarticEaseOut
                dragOffset: 12,

                click: 'click',
                mouseover: 'mouseover',
                mousedown: 'mousedown',
                mousemove: 'mousemove',
                mouseup: 'mouseup'
            };

            this.tree = options.nodes;
            this.treeIndex = {};
            this.callbacks = {};

            initBBTree(this, options);
        },
        _dragDrop = {},
        _this;

    BBTree.prototype.buildTree = function(json) {
        if (this.nodes.tree.getElementsByTagName('li').length) {
            this.destroyTree(this.tree);
            this.tree = json;
        }
        this.nodes.tree.innerHTML = getTreeHTML(json);
        referenceNodes(this, this.nodes.tree);
    };

    BBTree.prototype.destroyTree = function() {
        doEventHandlers(this, true);
        for (var node in this.tree) {
            this.removeNode(this.tree[node][this.options.id], this.tree, node);
        }
        for (var n in this) {
            this[n] = null;
            delete this[n];
        }
    };

    BBTree.prototype.appendNode = function(node, json, noAnim, force) {
        var fragment,
            container,
            recycleContainer,
            recycleHasChildren = false,
            model = this.treeIndex[json.nodeType ? json.getAttribute(this.options.dataID) : json] || json,
            isExisting = model !== json,
            modelNode = isExisting ? undefined : addNodes(this, model, node);

        if (isExisting) reAppendNode(this, node, model, noAnim, force);
        if (!modelNode) return;

        recycleContainer = modelNode.htmlNode.parentNode.getElementsByTagName('ul')[0];
        recycleHasChildren = recycleContainer ? !!recycleContainer.children.length : false;

        fragment = document.createDocumentFragment();
        container = fragment.appendChild(document.createElement('ul'));
        container.innerHTML = getTreeHTML(isExisting ? [model] : model, node);
        referenceNodes(this, container);

        if (recycleContainer) {
            while (container.children[0]) {
                fragment.appendChild(container.children[0]);
            }
            fragment.removeChild(container);
            recycleContainer.appendChild(fragment);
            if (!recycleHasChildren) {
                container.style.height = '';
                removeClass(node.parentNode, this.options.collapsedClassName);
                addClass(node.parentNode, this.options.openedClassName);
            }
        } else {
            container.style.height = '0px';
            addClass(node.parentNode, this.options.collapsedClassName);
            node.parentNode.appendChild(fragment);
        }

        toggleChildren(node, this, !!noAnim, force === undefined ? true : force);

    };

    BBTree.prototype.insertBefore = function(node, json, noAnim, force) {
        var fragment = document.createDocumentFragment(),
            container = fragment.appendChild(document.createElement('div')),
            sibling = this.treeIndex[node.nodeType ? node.getAttribute(this.options.dataID) : node],
            model = this.treeIndex[json.nodeType ? json.getAttribute(this.options.dataID) : json] || json,
            isExisting = model !== json,
            modelNode = isExisting ? undefined : addNodes(this, json, node, sibling.index);

            if (isExisting) reInsertNode(this, sibling, model, noAnim, force);
            if (!modelNode) return;

            container.innerHTML = getTreeHTML(json, node);
            referenceNodes(this, container);
            while (container.children[0]) {
                fragment.appendChild(container.children[0]);
            }
            fragment.removeChild(container);
            node.parentNode.parentNode.insertBefore(fragment, node.parentNode);
    };

    BBTree.prototype.removeNode = function(node, parent, index) { // this could be done more generic??
        var currentId = node.nodeType ? node.getAttribute(this.options.dataID) : node,
            currentNode;

        node = this.treeIndex[currentId];

        for (currentNode in node.children) { // first do children
            this.removeNode(node.children[currentNode][this.options.id], node, currentNode);
        }

        node.htmlNode.parentNode.parentNode.removeChild(node.htmlNode.parentNode); // do we have to remove ULs????
        node.htmlNode = null;
        if (node['parent' + this.options.id]) {
            if (index) {
                parent.children[index] = null;
                parent.children.splice(index, 1);
                // reorderNodes(parent, index);
            } else {
                parent = this.treeIndex[node['parent' + this.options.id]];
                for (currentNode in parent.children) {
                    if (parent.children[currentNode] === node) {
                        parent.children[currentNode] = null;
                        parent.children.splice(currentNode, 1);
                        reorderNodes(parent, currentNode);
                        break;
                    }
                }
            }
        }
        this.treeIndex[currentId] = null;
        delete this.treeIndex[currentId];
    };

    BBTree.prototype.selectNode = function(elm) {
        highlightNode(this.treeIndex[elm.nodeType ? elm.getAttribute(this.options.dataID) : elm], this);
    };

    BBTree.prototype.toggleNode = function(elm, noAnim, force) {
        toggleChildren(this.treeIndex[elm.nodeType ? elm.getAttribute(this.options.dataID) : elm], this, noAnim, force);
    };

    root.BBTree = BBTree;

    // some extra export which I might use with the implementation
    root.BBTree.doAnimation = doAnimation;
    root.BBTree.addEvent = addEvent;
    root.BBTree.removeEvent = removeEvent;
    root.BBTree.addClass = addClass;
    root.BBTree.removeClass = removeClass;
    root.BBTree.hasClass = hasClass;
    root.BBTree.getOrigin = getOrigin;

    /* ---------------------------------------------- */

    function initBBTree(This, options) {
        var newElement;

        for (var option in options) {
            if(/Callback/.test(option)) {
                This.callbacks[option] = options[option];
            } else if (!/tree|nodes/.test(option)) {
                This.options[option] = options[option];
            }
        }
        This.options.id = This.options.dataID.split('-');
        This.options.id = This.options.id[1] || This.options.id[0];

        // install jumper and toggle in DOM if they don't exist
        if (!This.nodes.jumper.nodeType) {
            newElement = document.createElement('div');

            newElement.className = This.nodes.jumper;
            This.nodes.jumper = This.nodes.tree.appendChild(newElement);
            This.nodes.jumper.innerHTML = '<div class="' + This.options.jumperContainerClassName + '"></div>';

            newElement = document.createElement('div');
            newElement.className = This.nodes.toggle;
            This.nodes.toggle = This.nodes.tree.appendChild(newElement);
        }

        _this = This;
        if (This.tree && This.tree) {
            This.buildTree(This.tree);
        }

        doEventHandlers(This);
    }

    /* -------------- model and view mainpulation ----------- */

    function isEmptyObject(obj) {
        for (var prop in obj) {
            if (obj.hasOwnProperty(prop)) return false;
        }
        return true;
    }

    function getTreeHTML(json, parent) {
        var tree = [''], // V8
            node,
            hasChildren = false,
            hasPossibleChildren = false,
            className = '',
            // prevent redo on recursion...
            alternative = _this.options.getTreeHTML ? _this.options.getTreeHTML(_this, json, parent) : undefined,
            openedCln = _this.options.openedClassName,
            collapsedCln = _this.options.collapsedClassName,
            index = 0;

        for (var n = 0, m = json.length; n < m; n++) {
            node = json[n];
            if (parent) { // fake circular (back)reference
                node['parent' +  _this.options.id] = parent[_this.options.id] || parent.getAttribute(_this.options.dataID);
            }
            node.index = index++;
            hasChildren = !!(node.children && node.children.length);

            if (alternative === undefined) {
                hasPossibleChildren = !!node.children;

                className = hasChildren || hasPossibleChildren ? openedCln: '';
                className = !hasChildren && hasPossibleChildren ? collapsedCln : className;
                if (node.type) className = className ? ' ' : '' + _this.options.classPrefix + node.type;
                className = className ? ' class="' + className + '"' : '';

                tree.push('<li' + className + '><a href="#" data-' + _this.options.id + '="' + node.uuid + '">' + node.title + '</a>');
                tree.push(hasChildren || hasPossibleChildren ?
                    '<ul>' + (node.children ? getTreeHTML(node.children, node) : '') + '</ul></li>' : '</li>');
            } else if (hasChildren) {
                getTreeHTML(node.children);
            }

            _this.treeIndex[node.uuid] = node;
        }

        return alternative || tree.join('');
    }

    function findContainer(This, elm, nodeToAppend) {
        var container;

        for (var n = elm.children.length; n--; ) {
            if (elm.children[n].tagName.toLowerCase() === 'ul') return elm.children[n];
        }

        if (nodeToAppend) {
            container = document.createElement('ul');
            container.appendChild(nodeToAppend);
            elm.appendChild(container);
            container.style.height = '';
            addClass(container.parentNode, _this.options.openedClassName);
            return container;
        }
    }

    function removeNode(elm, json) {
        for (var n = elm.children.length; n--; ) {
            if (elm.children[n] === json) {
                elm.children.splice(n, 1);
                reorderNodes(elm, n);
                break;
            }
        }
    }

    function reAppendNode(This, node, json, noAnim, force) {
        var parent = This.treeIndex[json['parent' + This.options.id]],
            container;

        node = addNodes(This, [json], node);
        json['parent' + This.options.id] = node[This.options.id];

        removeNode(parent, json);

        container = findContainer(This, node.htmlNode.parentNode, json.htmlNode.parentNode);
        removeClass(node.htmlNode.parentNode, This.options.collapsedClassName);
        addClass(node.htmlNode.parentNode, This.options.openedClassName);
        node.htmlNode.parentNode.style.height = '';
        container.appendChild(json.htmlNode.parentNode);
    }

    function reInsertNode(This, node, json, noAnim, force) {
        var parent = This.treeIndex[json['parent' + This.options.id]];

        addNodes(This, [json], node[This.options.id], node.index);

        json['parent' + This.options.id] = node['parent' + This.options.id];
        if (json['parent' + This.options.id] === undefined) delete json['parent' + This.options.id];

        removeNode(parent, json);

        node.htmlNode.parentNode.parentNode.insertBefore(json.htmlNode.parentNode, node.htmlNode.parentNode);
    }

    function addNodes(This, json, parent, index) {
        var node = This.treeIndex[parent.nodeType ? parent.getAttribute(This.options.dataID) : parent],
            isIdx = index !== undefined;

        if (node) {
            if (isIdx) {
                node = This.treeIndex[node['parent' + This.options.id]];
            }

            if (node.children) {
                json.index = isIdx ? index : node.children.length;

                for (var n = 0, m = json.length; n < m; n++) {
                    if (isIdx) {
                        node.children.splice(index++, 0, json[n]);
                    } else {
                        node.children.push(json[n]);
                    }
                }
                if (isIdx) reorderNodes(node, index - json.length);
            } else {
                node.children = [json];
                json.index = 0;
            }
            return node;
        }
    }

    function referenceNodes (This, elms) {
        elms = elms.getElementsByTagName('a');
        for (var n = elms.length; n--; ) {
            This.treeIndex[elms[n].getAttribute(This.options.dataID)].htmlNode = elms[n];
        }
    }

    function findNode(elm, root) {
        while (elm !== root) {
            if (elm.getAttribute && _this.treeIndex[elm.getAttribute(_this.options.dataID)]) {
                return elm;
            } else {
                elm = elm.parentNode;
            }
        }
    }

    function reorderNodes(parent, index) {
        for (var n = index ? +index : 0, m = parent.children.length; n < m; n++) {
             parent.children[n].index = n;
        }
    }

    /* --------------- event handlers --------------- */

    function doEventHandlers(This, off) {
        var onOff = off ? removeEvent : addEvent;

        onOff(This.nodes.tree, This.options.click, function(e) {
            var node = findNode(e.target, this);

            if (node) {
                clickHandler(e, node, This);
                return false;
            }
        });

        onOff(This.nodes.tree, This.options.mouseover, function(e) {
            var node = findNode(e.target, this);

            if (node) {
                mouseOverHandler(e, node, This);
            }
        });

        onOff(This.nodes.tree, This.options.mousedown, function(e) {
            var node = findNode(e.target, this);

            if (node) {
                mouseDownHandler(e, node, This);
                e.returnValue = false;
                e.preventDefault();
                return false;
            }
        });
    }

    function clickHandler(e, elm, This) {
        var isArrow = e.target === This.nodes.jumper,
            isRoot = elm.parentNode.parentNode === This.nodes.tree,
            hasChildren = elm.parentNode.getElementsByTagName('ul')[0],
            openClose = hasChildren && e.target === This.nodes.toggle,
            activeChild = elm.parentNode.querySelector('.' + This.options.selectedClassName),
            action = isArrow ? 'detail' : e.target === elm ? 'select' : openClose ?
                (elm.parentNode.className.match(This.options.collapsedClassName) ? 'open' : 'close') : 'icon',
            toggled;

        if (This.callbacks.clickCallback &&
                This.callbacks.clickCallback(e, elm, This.treeIndex[elm.getAttribute(This.options.dataID)], action, This)) {
            return false;
        }

        if (openClose) {
            toggled = toggleChildren(elm, This, undefined, undefined, hasChildren.childNodes.length);
            if (toggled && activeChild && activeChild !== elm) {
                highlightNode(elm, This);
            }
        } else if (This.nodes.active !== elm && !isRoot) {
            highlightNode(elm, This);
        }
    }

    function mouseOverHandler(e, elm, This) {
        var isRoot = elm.parentNode.parentNode === This.nodes.tree;

        if (!isRoot && This.nodes.current !== elm) {
            appendJumper(elm, This);
            This.nodes.current = elm;
        }
    }

    /* --------------- animation stuff ---------------- */

    function toggleChildren(elm, This, noAnim, force, postpone) {
        var parent = elm.parentNode,
            wrapper = parent.getElementsByTagName('ul')[0],
            wrapperStyle = wrapper.style,
            currentHeight = wrapper.offsetHeight,
            autoHeight = 0,
            openedCln = This.options.openedClassName,
            collapsedCln = This.options.collapsedClassName,
            isClosed = parent.className.match(collapsedCln);

        if (This.callbacks.toggleCallback && This.callbacks.toggleCallback(elm, force, This) ||
            (isClosed && force === false || !isClosed && force === true)) {
            return false;
        }

        if (postpone !== undefined && !postpone) {
            if (This.callbacks.loadTreeItemsCallback && This.callbacks.loadTreeItemsCallback(elm, This, noAnim, force)) {
                return false;
            }
            addClass(parent, This.options.loadingClassName);
            return false;
        }

        if (!currentHeight) { // we need to detect the resulting expanded height
            wrapperStyle.height = '';
            autoHeight = wrapper.offsetHeight;
            wrapperStyle.height = currentHeight + 'px';
        }

        doAnimation(
            wrapper,
            currentHeight ? {type: 'height', unit: 'px', start: currentHeight, end: 0} :
                        {type: 'height', unit: 'px', start: 0, end: autoHeight - currentHeight},
            noAnim ? This.options.toggleTime : doAnimation.timer(true),
            This.options.toggleTime,
            This.options.easing,
            function() {
                wrapper.style.height = wrapper.offsetHeight ? '' : '0px';
                if (This.callbacks.toggleEndCallback) {
                    This.callbacks.toggleEndCallback(elm, This);
                }
            }
        );

        toggleClass(parent, collapsedCln);
        toggleClass(parent, openedCln);

        return true;
    }

    function doAnimation(elm, css, time, toggleTime, easing, callback) {
        var ease = easing(time / toggleTime);

        if (time < toggleTime) { // might be done for more than 1 type if cssText is used instead
            elm.style[css.type] = (css.start + ease * (css.end - css.start)) + css.unit; // Math.round IE8?
            window.setTimeout(function(){
                doAnimation(elm, css, doAnimation.timer(), toggleTime, easing, callback);
            }, 1000 / 60);
        } else {
            elm.style[css.type] = css.end + css.unit;
            callback();
        }
    }

    doAnimation.timer = function(res) {
        if (!res) return new Date().getTime() - doAnimation.timer.sT || 0;
        else {
            doAnimation.timer.sT = new Date().getTime();
            return 0;
        }
    };

    /* ---------------- some interaction ----------------*/

    function highlightNode(elm, This) {
        if (This.callbacks.highlightCallback && This.callbacks.highlightCallback(elm, This)) {
            return false;
        }

        addClass(elm, This.options.selectedClassName);
        removeClass(This.nodes.active, This.options.selectedClassName);
        This.nodes.active = elm;
    }

    function appendJumper(elm, This) {
        var hasChildren = elm.parentNode.getElementsByTagName('ul').length;

        if (This.callbacks.appendCallback && This.callbacks.appendCallback(elm, This.nodes.jumper, This)) {
            return false;
        }

        elm.appendChild(This.nodes.jumper);
        if (hasChildren) {
            elm.appendChild(This.nodes.toggle);
        }
    }

    /* ---------------- D&D manager -------------------- */

    function mouseDownHandler(e, elm, This) {
        _this = This;
        _dragDrop = {
            delayState: 0,
            element: elm,
            elemetOrigin: getOrigin(elm),
            node: This.treeIndex[elm.getAttribute(This.options.dataID)],
            x: e.pageX,
            y: e.pageY
        };

        addEvent(document.body, This.options.mousemove, mouseMoveHandler);
        addEvent(document.body, This.options.mouseup, mouseUpHandler);
    }

    function mouseMoveHandler(e) {
        var dragDrop = _dragDrop;

        if (dragDrop.delayState || (
            Math.abs(e.pageX - dragDrop.x) >= _this.options.dragOffset ||
            Math.abs(e.pageY - dragDrop.y) >= _this.options.dragOffset)) {

            if (dragDrop.delayState === 0) {
                dragDrop.delayState = 1;
                if (_this.callbacks.dragStartCallback) {
                    _this.callbacks.dragStartCallback(e, dragDrop.element, dragDrop.node,
                        {x: e.pageX - dragDrop.x, y: e.pageY - dragDrop.y}, dragDrop.elemetOrigin, _this);
                }
            }

            if (_this.callbacks.dragCallback) {
                _this.callbacks.dragCallback(e, dragDrop.element, dragDrop.node, _this);
            } else {
                mouseUpHandler(e);
            }
        }
    }

    function mouseUpHandler(e) {
        removeEvent(document.body, _this.options.mousemove, mouseMoveHandler);
        removeEvent(document.body, _this.options.mouseup, mouseUpHandler);

        if (_this.callbacks.dropCallback && _this.callbacks.dragCallback) {
            _this.callbacks.dropCallback(e, _dragDrop.element, dragDrop.node, dragDrop.elemetOrigin, _this);
        }
    }

    /* -------------------- common helpers ------------------------ */
    /*
     * The following could be replaced by functions from an external
     * library like portalClient, jQuery, Zepto, ...
     */

    function addEvent(obj, type, func) {
        if (!func.name) {
            addEvent.get = addEvent.get || function(obj, type, func) {
                for (var n = addEvent.cache[type].length; n--; ) {
                    if (obj === addEvent.cache[type][n].obj &&
                        '' + func === '' + addEvent.cache[type][n].func) return n;
                }
            };
            if (!addEvent.cache) addEvent.cache = {};
            if (!addEvent.cache[type]) addEvent.cache[type] = [];
            if (addEvent.get(obj, type, func) !== undefined) return;
            addEvent.cache[type].push({
                func: func,
                obj: obj
            });
        }

        if (obj.addEventListener) obj.addEventListener(type, func, false);
        else obj.attachEvent("on" + type, func);
    }

    function removeEvent(obj, type, func) {
        var n = -1,
            cache = addEvent.cache ? addEvent.cache[type] : undefined;

        if (!func.name && cache) {
            n = addEvent.get(obj, type, func);
            func = n !== undefined ? cache[n].func : func;
        }

        if (obj.removeEventListener) obj.removeEventListener(type, func, false);
        else obj.detachEvent("on" + type, func);

        if (n >= 0) {
            cache[n].obj = null;
            cache[n].func = null;
            // cache[n] = null;
            cache.splice(n, 1);
        }
    }

    function addClass(elm, cln) {
        var className = elm.className;

        if (elm && !hasClass(elm, cln)) {
            elm.className = className + (className ? ' ' : '') + cln;
        }
    }

    function removeClass(elm, cln) {
        if (!elm) return;
        elm.className = elm.className.replace(new RegExp('(\\b|\\s+)' + cln + '(\\s+|$)', 'g'), function($1, $2) {
            return !$1 || !$2 ? '' : ' ';
        }); //.replace(/ $/, '');
    }

    function hasClass(elm, cln) {
        return !elm ? false : new RegExp(cln).test(' ' + elm.className + ' ');
    }

    function toggleClass(elm, cln, force) {
        if (!elm) return;
        if (force || !hasClass(elm, cln)) {
            addClass(elm, cln);
        } else {
            removeClass(elm, cln);
        }
    }

    function getOrigin(elm) {
        var box = (elm.getBoundingClientRect) ? elm.getBoundingClientRect() : {top: 0, left: 0},
            doc = elm && elm.ownerDocument,
            body = doc.body,
            win = doc.defaultView || doc.parentWindow || window,
            docElem = doc.documentElement || body.parentNode,
            clientTop  = docElem.clientTop  || body.clientTop  || 0, // border on html or body or both
            clientLeft =  docElem.clientLeft || body.clientLeft || 0;

        return {
            left: box.left + (win.pageXOffset || docElem.scrollLeft) - clientLeft,
            top:  box.top  + (win.pageYOffset || docElem.scrollTop)  - clientTop
        };
    }

})(window, window.bc && window.bc.component ? window.bc.component : window);


/*----------------------------------------------------------------*/
/* Progress Bar Component
/*----------------------------------------------------------------*/

;(function ( bc, $, window, document, undefined ) {

    'use strict';

    var name = 'bc-progress', _id = 0, _slice = Array.prototype.slice,
    defaults = {
        max       : 100,
        segments  : [{ name: 'done', value: 0}],
        onReady   : function() {},
        onComplete: function() {},
        onProgress: function() {}
    },
    methods = {
        init: function() {
            this.segments = this.options.segments;
            this._create();
        },
        increment: function(newValue, segmentName) {
            segmentName = segmentName || 'done';
            if ( newValue !== undefined  ) {
                var seg = findBy(this.segments, 'name', segmentName);
                var oldValue = seg.value;
                this.setValue(parseInt(newValue, 10) + parseInt(oldValue,10), segmentName);
            }
        },
        setValue: function(newValue, segmentName) {
            var This = this;
            segmentName = segmentName || 'done';
            if ( segmentName === 'all') {
                $.map(this.segments, function(el) {
                    el.value = This._constrained(parseInt(newValue,10), parseInt(el.value,10));
                });
            } else {
                $.map(this.segments,function(el){
                    if(el.name === segmentName) {
                        el.value = This._constrained(parseInt(newValue,10), parseInt(el.value,10));
                    }
                });
            }
            this._render();
        },
        reset: function() {
            this.setValue(0, 'all');
        },
        /*----------------------------------------------------------------*/
        /* Private Functions
        /*----------------------------------------------------------------*/
        _render: function() {
            var This = this;
            this.totalvalue = 0;

            this.segments.map(function(el){
                This.totalvalue += parseInt(el.value,10);;
            });
            $.map(This.$segments, function($el, index){
                var v = parseInt(This.segments[index].value, 10);
                $el.width(This._percentage(true, v) + '%');
            });
            // console.info(this.$segments);
            this.$el.attr({
                'aria-valuenow': this.totalvalue
            });

            this.percentage = this._percentage(false,this.totalvalue);
            this._trigger( 'progress' );

            if ( this.totalvalue === parseInt(this.options.max) ) {
                this._trigger( 'complete' );
            }
        },
        _create: function() {
            var This = this;
            this.$segments = [];

            $.map(this.options.segments, function(item){
                This.$segments.push($('<div/>', {'class' : 'bc-progress-bar ' + item.name}));
            });

            this.$el
                .addClass(name)
                .attr({
                    role: 'progressbar',
                    'aria-valuemin' : this.min,
                    'aria-valuemax': this.options.max
                }).append( this.$segments);

            this._trigger('ready');
            this._render();
        },

        _destroy: function() {
            this.$segments.remove();
            this.$el
                .removeClass(name)
                .removeAttr( 'role' )
                .removeAttr( 'aria-valuemin' )
                .removeAttr( 'aria-valuemax' )
                .removeAttr( 'aria-valuenow' );

        },
        _percentage: function(returnPercentage, value) {
            var p = 100 * ( parseInt(value,10) - this.min ) / ( parseInt(this.options.max,10) - this.min );
            return !! returnPercentage ? p : p.toFixed(0) + '%' ;
        },
        _constrained: function(newValue, prevValue) {
            var maxNewValue = this.options.max - this.totalvalue + prevValue;
            return (newValue > maxNewValue) ? maxNewValue : newValue;
        },
        _trigger: function(fn) {
            var clb = 'on' + fn.charAt(0).toUpperCase() + fn.slice(1);
            var _args_ = _slice.call( arguments, 1 );
            if (typeof this.options[clb] === 'function') {
                _args_.push(this);
                this.options[clb].apply(this, _args_ );
                this.$el.trigger(name + ':' + fn, _args_ );
            }
        }

    };


    function findBy(array, attr, value) {
        for(var i = 0, l = array.length; i < l ; i++) {
            if(array[i][attr] === value) {  return array[i];  }
        }
    }
    /*----------------------------------------------------------------*/
    /* Constructor
    /*----------------------------------------------------------------*/
    function Progress( el, options ) {
        this.$el       = $(el);
        this.options   = $.extend( {}, defaults, options);
        this.min        = 0;
        this.init();
    }

    //extend the methods
    Progress.prototype = methods;
    //Export
    $.fn[name] = function() {
        var data, $el, options;
        var _args_ = arguments;
        $el        = _args_[0] && $(_args_[0]);
        if( $el.length > 0 ) {
            options    = _slice.call( _args_, 1 )[0] || {};
            if (options === undefined || typeof options === 'object') {
                return $el.each(function () {
                    $.data(this, 'api') || $.data(this, 'api', new Progress( this, options ));
                });
            }
        }
    };

    bc.component.progress = $.fn[name];

})(bc, jQuery, window, document);

/**
 *  ----------------------------------------------------------------
 *  Copyright © 2003/2013 Backbase B.V.
 *  ----------------------------------------------------------------
 *  Author : Backbase R&D - Amsterdam - New York
 *  Filename : components.search.js
 *  Description:
 *
 *  ----------------------------------------------------------------
 */
(function(window){
    'use strict';

    function cancelSearch(self, $cancelButton, $input){
        if($input){
            $input.trigger('blur');
        }
        self.isAutoSuggestionCancel = true;
        self.$template.trigger(EVENTS.ON_CANCEL);
    }

    /* taken out from the PageMgmt.search.js for future usage */
    var jQuery = window.jQuery,
        bd = window.bd || {},
        be = window.be || {},
        bc = window.bc || {},
        b$ = window.b$ || {},

        //supporting old(in devmode) and new PM
        contextRoot = bd.contextRoot !== undefined ? bd.contextRoot : //old
                    b$.portal && b$.portal.config.serverRoot !== undefined ? b$.portal.config.serverRoot : '', //new


        EVENTS = {
            'ON_SEARCH' : 'onSearch.searchTokenInput',
            'ON_RESULT' : 'onResult.searchTokenInput',
            'ON_CANCEL' : 'onCancel.searchTokenInput'
        },

        isServerUp = null,
        promiseObj,


        /* default command list */
        DEFAULT_SEARCH_CMD = [
            {
                'cmd':'ref',
                'text':'References',
                'getQuery': function(item) {
                    return item.uuid ? 'refuuid:' + item.uuid : this.cmd + ':' + getItemQuery(item);
                },
                'getTooltip' : function(item) {
                    return getValFromQuery(getItemQuery(item));
                }
            },
            {
                'cmd':'uses',
                'text':'Uses content',
                'enableAutoSuggestion' : true,
                'getQuery': function(item) {
                    return item.uuid ? 'usesuuid:' + item.uuid : this.cmd + ':' + getItemQuery(item);
                },
                'getTooltip' : function(item) {
                    return getValFromQuery(item.query);
                }
            },
            {
                'cmd':'pub',
                'text':'Publishing states'
            },
            {
                'cmd':'@',
                'text':'Last edited by',
                'getTooltip' : function(item) {
                    return this.text + ': ' + getValFromQuery(item.query);
                }
            }
            /*{
                'cmd':'editdate',
                'text':'Last edited on',
            }
            */

        ],

        /* smart query command class */
        SearchCommand = function(customCmd) {
            // fetch from server
            var prop = { //default property function
                    'getLabel': function(item) { return this.cmd + ':' + getItemQuery(item); },
                    'getQuery': function(item) { return this.cmd + ':' + item.uuid; },
                    'getTooltip': function(item) { return getItemQuery(item); },
                    'enableAutoSuggestion': true
                },
                cmdWrap = function(cmdArray) {
                    var cmdObj = [], i,l,c, j,jLen,jCurrent;
                    for(j = 0, jLen = cmdArray.length; j < jLen; j++){
                        jCurrent = cmdArray[j];
                        for(i = 0, l = DEFAULT_SEARCH_CMD.length; i < l; i++){
                            c = DEFAULT_SEARCH_CMD[i];
                            if(jCurrent === c.cmd){
                                cmdObj.push(jQuery.extend({}, prop, c));
                            }
                        }
                    }
                    return cmdObj;
                },
                cmd = cmdWrap( customCmd || [] ); //jQuery.extend([], DEFAULT_SEARCH_CMD, customCmd),

            return {
                get : function(query, getAll) {
                    if(query === undefined || !(typeof(query) == 'string' || query instanceof String)) { return cmd; }
                    else {
                        var lowerCaseQuery = jQuery.trim(query.toLowerCase()),
                            grepFn = function (n) {
                                var trigger = n.cmd.toLowerCase() + ':';
                                return lowerCaseQuery.indexOf(trigger) === 0;
                            },
                            matchedCmd = lowerCaseQuery.length? jQuery.grep(cmd, grepFn) : [];

                        return matchedCmd.length ? ( getAll ? matchedCmd : matchedCmd[0] ) : null;
                    }
                }
            };

        },

        serverCheck = function () {
            var defer = jQuery.Deferred();

            if(isServerUp !== null){
                if(isServerUp === true){
                    defer.resolve();
                }else if(isServerUp === false){
                    defer.reject();
                }
            }else{
                isServerUp = 'checking';

                be.utils.serverStatus.solr.checkStatus().then(function(){
                    isServerUp = true;
                    defer.resolve();
                }, function(){
                    isServerUp = false;
                    defer.reject();
                });
            }
            return defer.promise();
        },

        serverUp = function(params) {
            if(params.target) {
                jQuery(params.target).find('.bc-search-container').removeClass('bc-search-container-hide');
            }
        },
        serverDown = function(params) {
            if(params.target) {
                jQuery(params.target).find('.bc-search-container').remove();
            }
        },


        //init the search field
        init = function (params) {

            var htmlPath = (contextRoot || '') + '/static/backbase.com.2012.components/html/',
                template = be.utils.processHTMLTemplateByUrl(htmlPath + 'modal/search.html', params);

            promiseObj = isServerUp === null ? serverCheck() : promiseObj;

            var self = {
                $template : jQuery(template),
                $tokenizedInput : null,
                isAutoSuggestionCancel : false,
                SearchCmd : new SearchCommand(params.cmd),//init the command object
                flg : false,
                changeToken : function(val, isFocus) {
                    //if(isOverLimit(this.$template))
                    this.$template.find('.bc-search-input').tokenInput("clear");
                    if(isFocus){
                        this.$tokenizedInput.focus();
                    }
                    if(jQuery.type( val ) === 'string'){
                        this.$tokenizedInput.val(val);
                    }
                }
            };


            // BOF TokenInput
            initSearchTokenInput.call(self, params);

            // BOF Command DropDown
            initCommandDD.call(self, params);

            bindEvent_generic.call(self, params);

            if(params.target) {
                jQuery(params.target).append(self.$template);
            }

            // clean up
            setTimeout(function() {
                jQuery(document).bind('DOMNodeRemoved.search', function(ev) {
                    if(ev.target === self.$template[0] || jQuery(ev.target).find('.bc-search-container').length) {
                        self = null;
                        jQuery(document).unbind('DOMNodeRemoved.search');
                    }
                })}, 0);

            //server detection
            // console.log('run');
            if(isServerUp === true){
                serverUp(params);
            }else if(isServerUp === false){
                serverDown(params);
            }else if(isServerUp === 'checking'){
                jQuery.when( promiseObj ).then(
                    function() {
                        serverUp(params);
                    },
                    function() {
                        serverDown(params);
                    }
                );
            }

            return {cmd : self.SearchCmd.get(), $template : self.$template};
        },

        /* BOF Search TokenInput */
        initSearchTokenInput = function(params) {
            var self = this,
                SearchCmd = self.SearchCmd,
                $template = self.$template,
                ps = params.tokenInputParams.ps ? params.tokenInputParams.ps : 10,
                defaultUrl = contextRoot + '/portals/'+ bd.selectedPortalName +'/pagemanagement/search/suggestions',
                urlFn = function() {
                    var url = defaultUrl,
                        searchQuery = self.$tokenizedInput.val(),
                        cmd = SearchCmd.get(searchQuery);
                    url += '?ps='+ps+'&';

                    if((cmd && cmd.enableAutoSuggestion === false) || !searchQuery){
                        url = '';
                    }

                    if(params.tokenInputParams.urlFn && typeof params.tokenInputParams.urlFn === 'function'){
                        url = params.tokenInputParams.urlFn(url, searchQuery, cmd);
                    }

                    return url;
                },
                tokenInputParams = {
                    url: urlFn,
                    //minChars : 2,
                    queryParam : 'query',
                    animateDropdown: false,
                    hintText : '',
                    searchingText: '',
                    noResultsText : '',
                    deleteText : '',
                    tokenLimit : 1,
                    selectSuggestion : false,
                    enableComma : false,
                    clearOnBlur : false,
                    cache: false,
                    propertyToSearch : 'query',
                    preventDuplicates : true,
                    contentType : 'xml', //TokenInput is naming dataType to contentType
                    //searchDelay: 600,
                    resultsFormatter : function(item){
                        // console.log('resultsFormatter: ', item);
                        var inputVal = self.$tokenizedInput.val(),
                            itemQuery = getItemQuery(item),
                            cmdObj = SearchCmd.get(itemQuery),
                            title = cmdObj ? cmdObj.getTooltip(item) : item.query,
                            queryVal = cmdObj ? getValFromQuery(inputVal) : inputVal,
                            val = cmdObj ? getValFromQuery(itemQuery) : itemQuery;

                        //escape the special char for Regex
                        var regexp_special_chars = new RegExp('[.\\\\+*?\\[\\^\\]$(){}=!<>|:\\-]', 'g');
                        queryVal = queryVal.replace(regexp_special_chars, '\\$&');

                        val = val.replace(new RegExp('('+queryVal+')','i'), '<strong>$1</strong>');

                        return '<li title="' + title + '"><span>'+val+'</span></li>';
                    },
                    tokenFormatter: function(item) {
                        // console.log('tokenFormatter: ', item);
                        var itemQuery = getItemQuery(item),
                            cmdObj = SearchCmd.get(itemQuery),
                            template = '';

                        if(cmdObj) {
                            template = '<li class="bc-tokenized bc-searchToken" title="' + cmdObj.getTooltip(item) + '">'+
                                '<div class="bc-searchToken-cmd"><div class="bc-searchToken-text">'+ getCmdFromQuery(itemQuery) +'</div></div>' +
                                '<div class="bc-searchToken-value"><div class="bc-searchToken-text">'+ getValFromQuery(itemQuery) +'</div></div>' +
                                '</li>';
                        }

                        return template;
                    },
                    tokenValue : function(item) {
                        // console.log('tokenValue: ', item);
                        return item.query;
                    },

                    onAdd: function(item) {
                        // console.log('onAdd: ', item);
                        detectAddToken(item, self);
                    },
                    onDelete: function() {
                        self.$tokenizedInput.focus();
                    },

                    onResult: function (data) {
                        //limit to cmd for now
                        var searchQuery = self.$tokenizedInput.val(),
                            matchedCmd = SearchCmd.get(searchQuery),
                            results = [];

                        //show the dropdown if user pressed ENTER after auto suggestion result from server
                        if(!self.isAutoSuggestionCancel){
                            //use jquery to conver the xml to json in case for the bootstrap ui
                            var customParam = params.tokenInputParams,
                                suggestions = [],
                                i,l,c, title, uuid, resultsObj = {};

                            if(customParam.resultData && typeof customParam.resultData === 'function'){
                                suggestions = customParam.resultData(data, searchQuery, matchedCmd);
                                //only accept array type
                                if(suggestions instanceof Array === false){
                                    suggestions = suggestionXmlToJson(data);
                                }
                            }else{
                                suggestions = suggestionXmlToJson(data);
                            }

                            for (i = 0, l = suggestions.length; i < l; i++) {
                                c = suggestions[i];
                                title = c.title;
                                uuid = c.uuid;
                                if(matchedCmd){
                                    resultsObj = {
                                        query: matchedCmd.getQuery({ uuid: uuid, label : title }),
                                        label: matchedCmd.getLabel({ uuid: uuid, label : title }), //( cmdName ? cmdName + ":" : '' ) + title,
                                        uuid : uuid,
                                        isCmdQuery : true
                                    };
                                }else{
                                    resultsObj = {
                                        query: title,
                                        label: title,
                                        uuid : uuid,
                                        isCmdQuery : false
                                    };
                                }
                                results.push(resultsObj);
                            }
                        }
                        //console.log('onResult: ', results);
                        return results;
                    }

                };

            //jQuery('.token-input-dropdown').remove(); // make sure we have only one of these lying around

            tokenInputParams = jQuery.extend({}, tokenInputParams, params.tokenInputParams);
            $template.find('.bc-search-input').tokenInput( {} ,  tokenInputParams)
                .data('tokenLimit', tokenInputParams.tokenLimit);

            // set the jquery object after the the init
            self.$tokenizedInput = $template.find('.token-input-input-token').find('input').addClass('bc-tokenInput-input');

            bindEvent_searchTokenInput.call(self, params);
        },

        bindEvent_searchTokenInput = function() {
            var self = this,
                $template = self.$template;

            /* BOF // use bc-search-hiddenInput to handle the click, double click and backspace press */
            $template
                .on('click.searchTokenInput', '.bc-searchToken', function () {
                    $template.find('.bc-search-hiddenInput').focus();
                })
                .on('dblclick.searchTokenInput', '.bc-searchToken', function () {
                    var tokens = $template.find('.bc-search-input').tokenInput("get");
                    if(!tokens.length) return;
                    var token = tokens[0];
                    var query = token.label ? token.label : token.query;
                    self.changeToken(query,true);
                });
            $template.find('.bc-search-hiddenInput')
                .on('keydown.searchTokenInput', function(evt) {
                    if(evt.which === 8){//Backspace, escape
                        //TODO: should use "remove" instead of "clear"
                        self.changeToken('',true);
                    }else if(evt.which === 27 || evt.which === 9){
                        self.changeToken('',true);
                        return false;
                    }
                })
                .on('focus.searchTokenInput blur.searchTokenInput', function() {
                    this.value = '';
                });
            /* EOF // use bc-search-hiddenInput to handle the click, double click and backspace press */



            /* BOF // tokenized Input field event */
            self.$tokenizedInput.on('keydown.searchTokenInput', function(evt) {
                if (evt.keyCode === 27 || evt.keyCode === 9) {
                    bd.observer.notifyObserver(bd.pm.observer.cancelSearch);
                    bd.observer.notifyObserver('reset-search');
                    return false;
                }else if (evt.keyCode === 13) {
                    evt.stopPropagation();
                    self.isAutoSuggestionCancel = true;
                    detectAddToken(evt, self);
                    return false;
                }else{
                    self.isAutoSuggestionCancel = false;
                }
            });
            /* EOF // tokenized Input field event */
        },
        /* EOF Search TokenInput */

        /* BOF Command list drop down */
        initCommandDD = function(params) {
            var self = this;
            if(!params.isBootStrap){
                var cmd = self.SearchCmd.get(),
                    i,l,c, optsData = [],
                    dropdownParams,
                    $searchBtn = jQuery('.bc-search-button', self.$template);
                //setup option data
                for (i = 0, l = cmd.length; i < l; i++) {
                    c = cmd[i];
                    if(c.enableAutoSuggestion){
                        optsData.push({name: c.text, value: c.cmd});
                    }
                }

                if(!cmd.length){
                    //var searchCmdDD = bc.component.dropdown(jQuery.extend({}, dropdownParams, params.dropdownParams));
                    bc.component.button({
                        target: $searchBtn,
                        uid: "56562123123",
                        searchButton: true
                    });
                }else{

                    dropdownParams = {
                        target: $searchBtn,
                        type: 'action-icon-div',
                        uid: "56562123123",
                        staticLabel: true,
                        options: optsData,
                        wrapped: true,
                        minWidth: 110,
                        maxHeight: 260,
                        addTitle: true,
                        iconOnly: true
                    };

                    //var searchCmdDD = bc.component.dropdown(jQuery.extend({}, dropdownParams, params.dropdownParams));
                    bc.component.dropdown(jQuery.extend({}, dropdownParams, params.dropdownParams));
                }

                if(!params.isBootStrap){
                    $searchBtn.find('li.bc-icn').removeClass('bc-action').addClass('bc-search-black');
                }
            }
            bindEvent_CommandDD.call(self, params);

        },

        bindEvent_CommandDD = function(params) {
            var self = this,
                $searchBtn = jQuery('.bc-search-button', self.$template),
                $cancelButton = self.$template.find('.bc-search-cancel-button'),
                $selectBox = $searchBtn.find('.bc-selectbox'),
                hasSelectBox =  !!$selectBox.length,
                dropDownOptions;

            function cancelCancel(){
                cancelSearch(self, $cancelButton, self.$tokenizedInput);
                $cancelButton.off('click', cancelCancel);
                return false;
            }

            function showSearch(data){
                var $pageContainer = jQuery('.bd-pageContainer', data.body);
                $pageContainer.addClass('bd-search-active');
                data.$tokenizedInput.trigger('focus');
                $(document).on('keydown', function key(evt){
                    if(evt.which === 27){
                        cancelCancel();
                    }
                    $(document).off('keydown', key);
                });
            }

            bd.observer.addObserver('reset-search', cancelCancel);
            bd.observer.addObserver('show-search', showSearch);

            $searchBtn.on('click.searchTokenInput', function (evt){
                evt.preventDefault();
                $cancelButton.on('click', function (){
                    bd.observer.notifyObserver(bd.pm.observer.cancelSearch);
                    bd.observer.notifyObserver('reset-search');
                });
                return false;
            });


            //drop down
            if(!params.isBootStrap && hasSelectBox){
                dropDownOptions = $selectBox[0].dropdownOptions;

                jQuery(dropDownOptions).on('click.searchTokenInput', function(evt) {
                    var cmd = jQuery(evt.target).closest('a[data-value]').attr('data-value');
                    if(cmd){
                        cmd = cmd + ':';
                        self.changeToken(cmd, true);
                    }
                    return false;
                });

            }
        },
        /* EOF Command list drop down */

        /* BOF generic event on the template */
        bindEvent_generic = function(params) {
            // show the result of search tag
            var self = this, $template = self.$template;
            $template.on(EVENTS.ON_SEARCH, function(evt, data, states) {
                if(!data || !data.query) return;
                states = states || {};

                var item = jQuery.extend({}, data), searchQuery = '',
                    $input = $template.find('.bc-search-input');

                searchQuery = getItemQuery(item);

                if(!states.isAdded) {
                    if(item.isCmdQuery === undefined){
                        item.isCmdQuery = self.SearchCmd.get(searchQuery) ? true : false;
                    }

                    if(states.clearInput) {
                        $input.tokenInput("clear");
                    }

                    if(item.isCmdQuery){// its reference search
                        item.isAdded = true;
                        $input.tokenInput("add", item);
                    }else{// its normal search
                        self.$tokenizedInput.val(item.query);
                    }
                }

                if(searchQuery.length) {
                    toggleSpinner($template, false, params.isBootStrap);
                }

                if(isOverLimit($template)){
                    $template.find('.bc-search-hiddenInput').focus();
                }

                //console.log('===================== RUN onSearch =====================');
                //returning the token and the actual value of the query
                if(params.onSearch) {
                    params.onSearch(item.isCmdQuery ? $input.tokenInput('get') : ($input.tokenInput('get')).concat(item));
                }

            });

            self.$template.on('click', '.bc-search-icon.bi-pm-x', function(){
                self.$template.trigger(EVENTS.ON_CANCEL);
            });

            self.$template.on('click', '.bc-search-icon.bi-pm-magnifier', function(ev){
                ev.target = self.$template.find('.bc-tokenInput-input');
                detectAddToken(ev, self);
            });

            self.$template.on(EVENTS.ON_RESULT, function(evt, data) {
                toggleSpinner(self.$template, false, params.isBootStrap);
                if(params.onResult) {
                    params.onResult(data);
                }
                toggleCancelButton(self.$template, true);
            });

            self.$template.on(EVENTS.ON_CANCEL, function(evt, data) {
                self.changeToken('');
                toggleSpinner(self.$template, false, params.isBootStrap);
                if(params.onCancel) {
                    params.onCancel(data);
                }
                toggleCancelButton(self.$template, false);
            });

        },
        /* EOF generic event on the template */

        /* BOF Utils functions */
        getCmdFromQuery = function(query) {
            var queryArray = query.split(':');
            return queryArray.length > 1? queryArray[0].toLowerCase() : '';
        },
        getValFromQuery = function(query) {
            var queryArray = query.split(':');
            if(queryArray.length > 1){
                queryArray.shift(); //remove the cmd
            }
            return queryArray.join(':'); //construct the searching value
        },
        isOverLimit = function($template) {
            var $input = $template.find('.bc-search-input'),
                tokenLen = $input.tokenInput("get").length,
                tokenLimit = $input.data('tokenLimit');

            return tokenLen >= tokenLimit;
        },
        getItemQuery = function(item) {
            return item.label ? item.label : item.query;
        },
        toggleSpinner = function($template, action, isBootStrap) {
            if(isBootStrap){ return ; }
            var $searchBtn = jQuery('.bc-search-input-container', $template).find('.bc-search-icon');
            if(action === true){
                $searchBtn.removeClass('bi-pm-magnifier').addClass('bi-spinner');
            }else{
                $searchBtn.removeClass('bi-spinner').addClass('bi-pm-magnifier');
            }
        },
        toggleCancelButton = function($template, action){
            var $searchBtn = jQuery('.bc-search-input-container', $template).find('.bc-search-icon');
            if(action === true){
                $searchBtn.removeClass('bi-pm-magnifier').addClass('bi-pm-x');
            }else{
                $searchBtn.removeClass('bi-pm-x').addClass('bi-pm-magnifier');
            }
        },
        detectAddToken = function(ev, self) {
            if(!ev) return;

            var query, item = {}, states = {};

            if(ev.target){//ENTER pressed
                query = jQuery(ev.target).val();
                if(query){
                    if (self.flg) { self.flg = false; }
                    else { item = { query : query }; }
                }
            }else if(ev.isAdded){//already added
                delete ev.isAdded;
                return;
            }else if(ev.query){//onAdd
                item = ev;
                query = ev.label ? ev.label : ev.query;
                if(self.SearchCmd.get(query)){//has token
                    states.isAdded = true;
                }else{//no token
                    self.$tokenizedInput.val(query);
                    self.flg = true;
                    //TODO: find a way to detect the keypress in here, set back the flg by timeout
                    window.setTimeout(function() { self.flg = false; } , 300);
                }
            }

            self.$template.trigger(EVENTS.ON_SEARCH, [ item, states ]);
        },
        suggestionXmlToJson = function(xml) {
            var suggestions = jQuery(xml).find('suggestion'),
                i,l,c, title, uuid, results = [];
            for (i = 0, l = suggestions.length; i < l; i++) {
                c = jQuery(suggestions[i]);
                title = c.find('title').text();
                uuid = c.find('uuid').text();
                results.push({
                    title : title,
                    uuid : uuid
                });
            }
            return results;
        }
        /* EOF Utils functions */
        ;



    bc.component.searchTokenInput = init;

})(window);
/**
 * Copyright � 2011 Backbase B.V.
 */
(function () {
    var $dropZoneSmall = jQuery('<div class="bd-RepositoryBrowser-fileContainer-dropZoneContainer">'+
                    '<div class="bd-RepositoryBrowser-fileContainer-dropZone">'+
                    '<div class="bd-RepositoryBrowser-fileContainer-text">Drop Content Here</div>'+
                    '</div></div>'),

        $dropZoneLarger = jQuery('<div class="bd-RepositoryBrowser-fileContainer-dropZoneContainer bd-RepositoryBrowser-fileContainer-dropZoneContainer-large">'+
                    '<div class="bd-RepositoryBrowser-fileContainer-dropZone bd-RepositoryBrowser-fileContainer-dropZone-large">'+
                    '<div class="bd-RepositoryBrowser-fileContainer-text bd-RepositoryBrowser-fileContainer-text-large">Drop Content Here</div>'+
                    '</div></div>'),
        GeneratedContentFolder = '/Generated content';

    var addDropZoneContainer = function(currentFolder){
        var initParams = currentFolder.initParams,
            $viewPoint = currentFolder.repositoryBrowserFileList;
        //$viewPoint.children('.bd-RepositoryBrowser-fileContainer-dropZoneContainer')
        //var dropZoneTextSmall, dropZoneTextLarge;
        if(initParams.HTML5Browser){
            if($viewPoint.children('.bd-RepositoryBrowser-fileContainer').length){
                if(initParams.editMode && initParams.isAdmin){
                    $viewPoint.append($dropZoneSmall);
                }else{
                    //currentFolder.repositoryBrowserFileList.append("<div>There are no items in this folder.</div>");
                }
            }else{
                if(initParams.editMode && initParams.isAdmin){
                    $viewPoint.append($dropZoneLarger);
                }else{
                    $viewPoint.append("<div>There are no items in this folder.</div>");
                }
            }
        }
    };

    // Prevent Dialog to close on presing Escape key while creating/renaming folder
    //
    var escKey = function( state, delay ) {
        setTimeout(function() {
            $('.bd-dialog-wrapper[data-respondtoesckey]').attr('data-respondToEscKey',state);
        }, delay || 0);

    }

    var removeDropZoneContainer = function($viewPoint){
        $viewPoint.find('.bd-RepositoryBrowser-fileContainer-dropZoneContainer').remove();
    };


    var updatePathForChildren = function($li, newPath, oldPath){
        var i,l, c,kids=$li.children('ul').children('li'), kidPath;
        if(kids.length){
            for(i=0,l=kids.length;i<l;i++){
                c = jQuery(kids[i]);
                kidPath = c.data('path');
                c.data('path', kidPath.replace(oldPath, newPath));
                //console.log(c.attr('id'), c.data('path'));
                updatePathForChildren(c, newPath, oldPath);
            }
        }

    };

    //util function
    function propValueFormatting (propId,propValue){
        var propValueMapping = {
            'cmis:contentStreamLength': be.utils.bytesToSize(propValue),
            'cmis:creationDate': bd.date.formatDateTime(propValue), //be.utils.fromISO(propValue).toLocaleString(),
            'cmis:lastModificationDate': bd.date.formatDateTime(propValue) //be.utils.fromISO(propValue).toLocaleString()
        };
        if (propValueMapping[propId]) return propValueMapping[propId];
        else return propValue;
    }

    function checkPath(tPath, dPath) {
        if (tPath.indexOf(dPath) !== -1) return true;
        else return false;
    }

    function objectEmpty(obj){
        var empty = true, key;
        for( key in obj ) {empty = false; break;}
        return empty;
    }

    //check file type by the MIME Type that return from the cmis
    function checkFileType(fileType,type){
        if(fileType && fileType.indexOf(type)!=-1){ return true; }
        return false;
    }

    function getFileTypeIcon(ext){

        var type = "generic";
        var types = {
            msword      : "doc",
            html        : "html",
            image       : "img",
            img         : "img",
            pdf         : "pdf",
            plain       : "txt",
            txt         : "txt",
            bb_link     : "url",
            link        : "url",
            quicktime   : "video",
            avi         : "video"
        };
        if(ext && types[ext]){
            type = types[ext];
        }
        return bd.contextRoot + "/static/dashboard/media/file_type_icon/L/" + type + ".png";
    }

    function checkImageType(file){
        //check image file by checking the file extension
        var imageExtRegx = /.+(\.(bmp|cmx|cod|gif|ico|ief|jfif|jpe|jpeg|jpg|pbm|pgm|pnm|png|ppm|ras|rgb|svg|tif|tiff|xbm|xpm|xwd))$/gi;
        if(file.type){
            return checkFileType(file.type,'image/');
        }else{
            if(file.name && file.name.match(imageExtRegx)){
                return true;
            }
        }
        return false;
    }

    function generateThumbUrl(fileType){

        //check the MIME Type of the image file
        var imageTypeRegex = /^image\/(bmp|gif|pjpeg|jpg|jpeg|png|x-png)(;charset=UTF-8)*/ig;
        var thumbnailIcon = /html|bb_link|plain|text|pdf|image|quicktime|avi|msword|vnd\.openxmlformats\-officedocument\.wordprocessingml\.document/ig;

        var slash = fileType.indexOf("/");
        var fileExt = fileType.substring(slash + 1);
        var imageType = fileType.match(imageTypeRegex);

        if(!imageType){
            if(fileType.indexOf('image\/') < 0){
                var spliter = fileExt.indexOf(';');
                if(spliter!=-1)
                    fileExt = fileExt.substring(0,spliter);
                if(fileExt.indexOf(':') !== -1) fileExt = fileExt.replace(':', '_');

                if(fileExt.match(thumbnailIcon)){
                    return getFileTypeIcon(fileExt);
                } else {
                    return getFileTypeIcon();
                }
                //this.files[i].thumbUrl = bd.contextRoot+"/static/dashboard/media/file_type_icon/icons-repo-"+fileExt+".png";
            }else{
                //this.files[i].thumbUrl = bd.contextRoot+"/static/dashboard/media/file_type_icon/icons-repo-image.png";
                return getFileTypeIcon("image");
            }
        }else{
            return null;
        }
    }

    function emptyProperty(prop){
        var tmpProp;
        if(prop === null){
            return false;
        }else{
            if($.trim(prop) === '') tmpProp = '(empty)';
            else tmpProp = prop;
            return tmpProp;
        }
    }

    function addExtraDataToJsTreeJson (params) {
        var i,l,c;
        for(i=0,l=params.jsonData.length; i<l; i++){
            c = params.jsonData[i];
            if(!c.state) c.state = 'closed';
            if(!c.metadata) c.metadata = {};
            if(!c.metadata.folderSkipCount) c.metadata.folderSkipCount = params.folderSkipCount;
            //if(!c.metadata.folderMaxItems) c.metadata.folderMaxItems = params.folderMaxItems;
        }
        //return params.jsonData;
    }

    function createJsTreeNode ($target, jsonData) {
        if(!$target || !jsonData) return;
        var jstreeNodeTemplate = '<li id="{{attr.id}}" class="jstree-closed">'+
                '<ins class="jstree-icon">&nbsp;</ins>'+
                '<a href="#" class="">'+
                    '<ins class="jstree-icon">&nbsp;</ins>'+
                    '{{data.title}}'+
                '</a>'+
            '</li>',
            i,l,c, $current, $ul = null;

        $ul = getChildUL($target);

        for(i=0,l=jsonData.length; i<l; i++){
            c = jsonData[i];
            $current = jQuery(Mustache.to_html(jstreeNodeTemplate, c));
            if(c.metadata) $current.data(c.metadata);
            $ul.append($current);
        }

    }

    function appendFolderLoadMoreTrigger ($target) {
        if(!$target) return;
        var $loadMoreTrigger = jQuery('<li class="bd-loadMoreTrigger" style="height:1px!important;padding:0!important;margin:0!important;min-height:0!important;"></li>');

        $ul = getChildUL($target);
        $ul.append($loadMoreTrigger);
    }

    function removeFolderLoadMoreTrigger ($target) {
        if(!$target) return;
        $target.children('ul').children('.bd-loadMoreTrigger').remove();
    }

    //generic function
    function scrollToLoadMore(This){
        var currentPanel = jQuery(This);
        var $firstTrigger = currentPanel.find('.bd-loadMoreTrigger:first');
        if($firstTrigger.length){
            //$firstTrigger.scrollTop();
            var loadMoreIndicatorCoord = currentPanel.offset().top + currentPanel[0].offsetHeight;
            var top = $firstTrigger.offset().top;
            if(top <= loadMoreIndicatorCoord){
                $firstTrigger.trigger('click');
            }
        }
        return;
    }

    function folderLoadMore(currentFolder, $target){
        currentFolder.utilsFn.removeFolderLoadMoreTrigger($target);

        var skipCount = $target.data('folderSkipCount'),
            $loadMoreIcon = jQuery('<li bclass="bd-loadMoreIcon">'+
                '<a href="#" class=""> Loading... </a>'+
            '</li>'),
            $targetChild = null;

        $targetChild = getChildUL($target);
        $targetChild.append($loadMoreIcon);

        //var $scrollArea = currentFolder.repositoryBrowserTreeList.parent();
        //$scrollArea.scrollTop($scrollArea.scrollTop() + 30 );

        currentFolder.loadFolder({
            parentId: $target.data('folderid'),
            skipCount: skipCount,
            searchBy: true,
            initCallback: function (folderJson) {
                $loadMoreIcon.remove();
                currentFolder.utilsFn.createJsTreeNode($target, folderJson);
                currentFolder.utilsFn.appendFolderLoadMoreTrigger($target);
                $target.data('isLoaded', true);
                $target.data('folderSkipCount', skipCount + folderJson.length);
            },
            noMoreCallback: function (errorMsg) {
                if(errorMsg === null){
                    $loadMoreIcon.remove();
                }
            }
        });
    }

    function toggleLoadMoreButton(currentFolder, action){
        //smallLoadingDiv
        var loadMoreButtonHTML = '<br class="bd-clearfloat">'+
                '<div class="bd-RepositoryBrowser-smallLoadingDiv">'+
                '<div class="bd-RepositoryBrowser-fileContainer-loadMoreButtonWrapper">'+
                '<button class="bd-RepositoryBrowser-fileContainer-loadMoreButton bd-gradient-grey bd-roundcorner-5">Load More</button>'+
                '</div></div>',
            //appendSmallLoadingDiv , showSmallLoadingDiv, hideSmallLoadingDiv, removeSmallLoadingDiv toggleLoadMoreButton
            //for the load More button
            showLoadMoreButton = function(){
                var $loadMoreButton = jQuery(loadMoreButtonHTML);
                if(!currentFolder.repositoryBrowserFileList.children(".bd-RepositoryBrowser-smallLoadingDiv").length){
                    currentFolder.repositoryBrowserFileList.append($loadMoreButton);
                }
                $loadMoreButton.show();
            },

            hideLoadMoreButton = function(){
                currentFolder.repositoryBrowserFileList.children(".bd-RepositoryBrowser-smallLoadingDiv, .bd-clearfloat").remove();
            };

        if(action){
            if(action === 'hide') hideLoadMoreButton();
            else if(action === 'show') showLoadMoreButton();
        }else{
            if(currentFolder.noMore){
                hideLoadMoreButton();
            }else{
                showLoadMoreButton();
            }
        }

    }

    //reload the folder tree node
    function reloadFolders (This, $target) {
        var id = $target.attr('id');
        This.repositoryBrowserTreeList.jstree("close_node", "#" + id);
        $target.data({
            'folderSkipCount': 0,
            'isLoaded': false
        })
        .children('ul').remove();
        This.repositoryBrowserTreeList.jstree("open_node", "#" + id);
    }

    //re load the folder with or with out sorting param
    function reloadFiles(This){
        //warningForAbortUpload(This, function () {
            This.loadCover.show();
            This.repositoryBrowserFileList.empty();
            This.loadFile({
                successCallback: function(files){
                    var htmlContent = This.renderFiles(files);
                    This.utilsFn.removeDropZoneContainer(This.repositoryBrowserFileList);
                    This.repositoryBrowserFileList.append(htmlContent);
                    //append the DropZone
                    if(!This.utilsFn.checkPath(This.path , GeneratedContentFolder)){
                        This.utilsFn.addDropZoneContainer(This);
                    }
                    This.utilsFn.toggleLoadMoreButton(This);
                    This.loadCover.hide();
                }
            });
        //});
    }

    //load the folder with or with out sorting param
    function loadMoreFiles(This){
        //warningForAbortUpload(This, function () {
            This.utilsFn.toggleLoadMoreButton(This, 'hide');
            This.utilsFn.removeDropZoneContainer(This.repositoryBrowserFileList);
            This.loadFile({
                successCallback: function(files){
                    var htmlContent = This.renderFiles(files);
                    This.repositoryBrowserFileList.append(htmlContent);
                    //append the DropZone
                    if(!This.utilsFn.checkPath(This.path , GeneratedContentFolder)){
                        This.utilsFn.addDropZoneContainer(This);
                    }
                    This.utilsFn.toggleLoadMoreButton(This);
                }
            });
        //});
    }

    function warningForAbortUpload (This, yesCallback, noCallback, $folder) {
        if(This.currentUploadFolder !== ''){
            if(
                $folder &&
                $folder.data('folderid') !== This.currentUploadFolder &&
                !$folder.find('#'+This.currentUploadFolder).length
            ){
                if(yesCallback) yesCallback();
            }else{
                be.utils.confirm({
                    title: 'Attention',
                    message: "This action will abort the current upload.<br/>Are you sure you want to abort?",
                    yesCallback: function(){
                        if(This.currentUploadFolder) This.abortFileUpload = true;
                        if(yesCallback) yesCallback();
                    },
                    noCallback : function(){
                        if(noCallback) noCallback();
                    },
                    cancelBtnText: 'Cancel',
                    okBtnText: 'Continue'
                });
            }
        }else{
            if(yesCallback) yesCallback();
        }
    }

    function getChildUL ($target) {
        if(!$target.children('ul').length){
            $target.append('<ul/>');
        }
        return $target.children('ul');
    }


    bd.repoBrowser = bd.repoBrowser || {};
    bd.repoBrowser.utilsFn = function(){

        return {
            addDropZoneContainer: addDropZoneContainer,
            removeDropZoneContainer: removeDropZoneContainer,
            updatePathForChildren: updatePathForChildren,
            propValueFormatting: propValueFormatting,
            checkPath: checkPath,
            objectEmpty: objectEmpty,
            checkFileType: checkFileType,
            checkImageType: checkImageType,
            generateThumbUrl: generateThumbUrl,
            addExtraDataToJsTreeJson: addExtraDataToJsTreeJson,
            createJsTreeNode: createJsTreeNode,
            toggleLoadMoreButton: toggleLoadMoreButton,
            appendFolderLoadMoreTrigger: appendFolderLoadMoreTrigger,
            removeFolderLoadMoreTrigger: removeFolderLoadMoreTrigger,
            folderLoadMore: folderLoadMore,
            scrollToLoadMore: scrollToLoadMore,
            reloadFolders: reloadFolders,
            reloadFiles: reloadFiles,
            loadMoreFiles: loadMoreFiles,
            warningForAbortUpload: warningForAbortUpload,
            escKey: escKey,
            emptyProperty: emptyProperty
        };

    };


}());
/**
 * Copyright � 2011 Backbase B.V.
 */
(function () {
        var uploadQueue = [], finalUploadQueue = [],
            uploadCount = 0,
            uploadFilesLength = 0,
            postUrl = bd.contextRoot+'/content/upload/form',
            GeneratedContentFolder = '/Generated content',
            isUploadStarted = false, isUploadOnHold = false,
            removeUploadBtn = '<div class="bd-repositoryBrowser-removeUploadBtn" title="Cancel Upload"></div>',
            //<img src="'+
             //   bd.contextRoot + '/static/backbase.com.2011.ice/media/close-icon.png" class="bd-repositoryBrowser-removeUploadBtn-img"/>
            isAbortSingleUpload = false,
            isOverWritingCurrentUpload = 0, //0=false, 1=true, 2=true-but-finished, 3=false-but-finish
            isUploadingFile = false,
            totalUpload = 0,
            currentJQxhr = null, currentJQxhrData = null;


        var lazyLoadJqueryUpload = function(callback){
            jqueryUploadScriptLoaded = jQuery.fn.fileupload ? true : false;
            if(!jqueryUploadScriptLoaded){
                jQuery.getScript(
                    bd.contextRoot+'/static/dashboard/js/lib/jqueryFileUpload/jquery.iframe-transport.js',
                    function(){
                        jQuery.getScript(
                            bd.contextRoot+'/static/dashboard/js/lib/jqueryFileUpload/jquery.fileupload.js',
                            function(){
                                callback();
                            }
                        );
                    }
                );
            }else{
                callback();
            }
        };

        var popupUploadFile = function(currentFolder){
            var that = this;
            var callback = function($dialog){
                var tmpData = null;
                lazyLoadJqueryUpload(function(){
                    jQuery('.bd-RepositoryBrowser-popupUploadFile-uploadField',$dialog).fileupload({//bd-RepositoryBrowser-uploadForm
                        dataType: 'text/html',
                        type:'POST',
                        //fileInput: jQuery('.bd-RepositoryBrowser-uploadForm-uploadField',$dialog),
                        url: postUrl,
                        dropZone : null,
                        singleFileUploads:true,
                        replaceFileInput: false,
                        forceIframeTransport: true,
                        //headers:{"accept-charset":"UTF-8" },
                        add :function(e,data){
                            tmpData = data;
                            uploadCount = 1;
                            uploadQueue = [];
                            jQuery('.bd-RepositoryBrowser-popupUploadFile-fileName',$dialog).val(tmpData.files[0].name);
                        },
                        submit: function(e, data){
                            data.formData = {
                                    "name": data.files[0].name,
                                    "targetPath": currentFolder.path,
                                    "cmis:createdBy" : bd.loggedInUserId,
                                    "cmis:lastModifiedBy" : bd.loggedInUserId,
                                    "cmis:objectTypeId" : currentFolder.utilsFn.checkImageType(data.files[0])? 'bb:image' : "cmis:document",
                                    "bb:title" : data.files[0].name
                            };
                            tmpData = null;
                        },
                        always : function(e,data){
                            if($.trim(data.jqXHR.responseText) === ''){
                                //console.log('successCallback');
                                currentFolder.resetVar();
                                currentFolder.utilsFn.reloadFiles(currentFolder);
                            }else{
                                //console.log('errorCallback');
                                currentFolder.utilsFn.loadMoreFiles(currentFolder);
                            }
                            be.closeCurrentDialog();
                        }
                    });

                });

                jQuery('.bd-RepositoryBrowser-popupUploadForm-saveBtn',$dialog).unbind('click').click(function(e){
                    e.preventDefault();
                    if(tmpData){
                        var fileName = tmpData.files[0].name;
                        if(currentFolder.filesHashMap[fileName]){
                            be.utils.confirm({
                                title: 'UPDATE FILE',
                                message: fileName+" already exists. It will be replaced. <br/>Are you sure you want to continue?<br/>",
                                yesCallback: function(){
                                    tmpData.submit();
                                },
                                //noCallback: function(){ returnVal = false; return returnVal;},
                                cancelBtnText: 'Cancel',
                                okBtnText: 'Replace'
                            });
                        }else{
                            tmpData.submit();
                        }
                    }
                });

                $dialog.delegate('.bd-RepositoryBrowser-popupUploadForm-cancelBtn','click',function(e){
                    e.preventDefault();
                    be.closeCurrentDialog();
                });
            };

            var htmlContent = '<div class="bd-RepositoryBrowser-popupUploadFormWrapper">'
                +'<form name="uploadForm" action="'+bd.contextRoot+'/content/upload/form" target="uploadIframe" method="post" accept-charset="UTF-8" accept="UTF-8" enctype="multipart/form-data" class="bd-RepositoryBrowser-popupUploadFile">'
                +'<div class="bd-RepositoryBrowser-popupUploadForm">'
                +'<input type="hidden" value="'+currentFolder.path+'" name="targetPath"/>'
                +'<input type="hidden" value="" name="name" class="bd-RepositoryBrowser-popupUploadFile-fileName"/>'
                +'<input type="hidden" value="'+bd.loggedInUserId+'" name="cmis:createdBy"/>'
                +'<input type="hidden" value="'+bd.loggedInUserId+'" name="cmis:lastModifiedBy"/>'
                +'Select a file: <br/><input type="file" size="43" id="uploadField" name="file" class="bd-RepositoryBrowser-popupUploadFile-uploadField" style="display:inline;float:left;"/></form>'
                +'<div class="bd-RepositoryBrowser-popupUploadForm-actionBar bd-RepositoryBrowser-popupFolderTree-actionBar">'
                +'<button class="bd-RepositoryBrowser-popupUploadForm-cancelBtn bd-button bd-gradient-grey bd-roundcorner-3">Cancel</button>'
                +'<button class="bd-RepositoryBrowser-popupUploadForm-saveBtn bd-button bd-gradient-green bd-roundcorner-3">Upload</button>'
                +'</div></div>';

            be.openDialog({
                htmlContent: htmlContent,
                callback : callback,
                standAlone: true,
                className: 'bd-RepositoryBrowser-popupFolderTreeDialog',
                closeIcon: true,
                header: 'Select a file to upload',
                small: true
            });
        };


        //Step 1
        var fileCheckBeforeUpload = function(event, data, currentFolder) {
            //console.log('uploadFIEL');
            var file = data.files[0];// FileList object.

            if(currentFolder.utilsFn.checkPath(currentFolder.path, GeneratedContentFolder)){
                bc.component.notify({
                    uid: '1192',
                    icon: 'error', // checkbox, attention, error, loading
                    message: 'Uploading files in "Generated Content" folder is not allowed.'
                });
                return false;
            }

            //check empty file by type or folder
            //if(files[i].size == 0 || files[i].size % 4096 == 0){
            if(file.type === "" || file.type === null){
                if(file.name.indexOf('.') === -1){
                    bc.component.notify({
                        uid: '7245',
                        icon: 'error', // checkbox, attention, error, loading
                        message: 'Sorry, you cannot drag and drop a folder to the repository browser.'
                    });
                    return false;
                }
            }

            //if(callback) submitCallBack = callback;
            uploadQueue.push(jQuery.extend({},data));
            currentFolder.utilsFn.removeDropZoneContainer(currentFolder.repositoryBrowserFileList);
            currentFolder.utilsFn.toggleLoadMoreButton(currentFolder, 'hide');
            //     $dropArea.find('.bd-RepositoryBrowser-fileContainer-dropZoneContainer').remove();
            //     $dropArea.find('.bd-RepositoryBrowser-fileContainer-dropZoneContainer-large').remove();
            return true;
        };

        //Step 2 - check the type and start the replace confirm popup
        var checkCurrentExists = function (currentFolder) {
            var file, existsFile = null, overWriteAll = '',
                //existsFileList = [],
                existsFileListCount = 0,
                $fileList = currentFolder.repositoryBrowserFileList.children('.bd-RepositoryBrowser-fileContainer').children('.bd-RepositoryBrowser-fileContainer-Name'),
                i,l,c;

            //set upload limit
            // if(uploadQueue.length > 50){
            //     return;
            // }

            for (i=0, l=uploadQueue.length; i < l; i++) {
                c = uploadQueue[i];
                file = c.files[0];
                existsFile = $fileList.filter('[itemname="'+file.name+'"]').parent();
                if(existsFile.length){
                    c.targetContainer = existsFile;
                    existsFileListCount += 1;
                }
            }

            //finalUploadQueue = [];
            popupOverWriteConfirm(currentFolder, existsFileListCount, overWriteAll);
        };

        //Step 3 - recursive to show the confirm
        var popupOverWriteConfirm = function(currentFolder, existsFileListCount, overWriteAll){
            var c = uploadQueue.shift();
            if(c){
                confirmPopup(currentFolder, c, existsFileListCount, overWriteAll);
            }else{
                totalUpload = finalUploadQueue.length;
                if(isUploadStarted){
                    isUploadOnHold = false;
                    if(isOverWritingCurrentUpload === 0 && !isUploadingFile){//0=false, 1=true, 2=true-but-finished, 3=false-but-finish
                        //console.log(0);
                        submitUploadQueue(currentFolder);
                    }else if(isOverWritingCurrentUpload === 1){
                        //console.log(1);
                    }else if(isOverWritingCurrentUpload === 2 || isOverWritingCurrentUpload === 3){
                        //console.log(2);
                        submitUploadQueue(currentFolder);
                    }
                }else{
                    submitUploadQueue(currentFolder);
                }
            }
        };

        //Step 4
        var confirmPopup = function(currentFolder, data, existsFileListCount, overWriteAll){
            var fileName = data.files[0].name;
            if(!data.targetContainer){
                data.targetContainer = createUploadContainer(currentFolder, fileName);
                finalUploadQueue.push(data);
                popupOverWriteConfirm(currentFolder, existsFileListCount, overWriteAll);
                return;
            }
            if(overWriteAll === ''){
                existsFileListCount -= 1;
                be.utils.confirm({
                    title: 'UPDATE FILE',
                    message: be.utils.truncateText(fileName, 38)+" already exists. It will be replaced. <br/>Are you sure you want to continue?<br/><br/>"+
                            (existsFileListCount > 0 ?
                                "<input type='checkbox' name='takeSameAction' class='bd-RepositoryBrowser-updateFile-takeSameAction'/> Apply to all "+existsFileListCount+" conflicts<br/>" : ""),
                    yesCallback: function($confirmWrapper){
                        overWriteAll = $confirmWrapper.find('.bd-RepositoryBrowser-updateFile-takeSameAction').prop('checked') ? 'yes' : '';
                        data.targetContainer = createUploadContainer(currentFolder, fileName, data.targetContainer);
                        finalUploadQueue.push(data);
                        popupOverWriteConfirm(currentFolder, existsFileListCount, overWriteAll);
                    },
                    noCallback : function($confirmWrapper){
                        overWriteAll = $confirmWrapper.find('.bd-RepositoryBrowser-updateFile-takeSameAction').prop('checked') ? 'no' : '';
                        //if(isUploadStarted && isUploadOnHold && currentJQxhrData.files[0].name === fileName) { finalUploadQueue.unshift(currentJQxhrData); }
                        popupOverWriteConfirm(currentFolder, existsFileListCount, overWriteAll);
                    },
                    cancelBtnText: 'Cancel',
                    okBtnText: 'Replace'
                });
            }else if(overWriteAll === 'yes'){
                data.targetContainer = createUploadContainer(currentFolder, fileName, data.targetContainer);
                finalUploadQueue.push(data);
                popupOverWriteConfirm(currentFolder, existsFileListCount, overWriteAll);
            }else if(overWriteAll === 'no'){
                //if(isUploadStarted && isUploadOnHold && currentJQxhrData.files[0].name === fileName) { finalUploadQueue.unshift(currentJQxhrData); }
                popupOverWriteConfirm(currentFolder, existsFileListCount, overWriteAll);
            }
        };

        //Step 5
        var createUploadContainer = function(currentFolder, fileName, $target){
            var $removeUploadBtn = jQuery(removeUploadBtn), $child;
            if($target){
                $child = $target.children('.bd-RepositoryBrowser-fileContainer-imageContainer');
                $child.css('background-image','')
                    .addClass('bd-RepositoryBrowser-fileContainer-loading bd-RepositoryBrowser-loadingGif-32x32 bd-RepositoryBrowser-fileContainer-uploading')
                    .removeClass('jstree-draggable bd-RepositoryBrowser-fileContainer-imageContainer-highlight')
                    .bind('click.uploadFail',function(e){
                        e.stopPropagation();
                        e.preventDefault();
                    });
                //if its already processing
                if($child.children('.bd-RepositoryBrowser-fileContainer-text').length){
                    removeUploadFromList(fileName);
                    $child.children('.bd-RepositoryBrowser-fileContainer-text').text('Waiting...');
                }else{
                    $child.append('<div class="bd-RepositoryBrowser-fileContainer-text">Waiting...</div>');
                }
                currentFolder.currentSelectedFile = null;
                if(currentFolder.selectedFiles[fileName]) delete currentFolder.selectedFiles[fileName];
                $target.children('.bd-RepositoryBrowser-fileContainer-actionButton').remove();
                $target.append($removeUploadBtn);
                return $target;
            }else{
                var $uploadContainer = jQuery('<div class="bd-RepositoryBrowser-fileContainer bd-RepositoryBrowser-fileContainer-uploading">'+
                    '<div class="bd-RepositoryBrowser-fileContainer-imageContainer bd-RepositoryBrowser-fileContainer-loading bd-RepositoryBrowser-loadingGif-32x32">'+
                    '<div class="bd-RepositoryBrowser-fileContainer-text">Waiting...</div>'+
                    '</div>'+
                    '<div class="bd-RepositoryBrowser-fileContainer-Name" itemname="'+fileName+'">'+fileName+'</div>'+
                    '</div>');
                currentFolder.repositoryBrowserFileList.append($uploadContainer);
                $uploadContainer.children('.bd-RepositoryBrowser-fileContainer-imageContainer').bind('click.uploadFail',function(e){
                    e.stopPropagation();
                    e.preventDefault();
                });
                $uploadContainer.append($removeUploadBtn);
                return $uploadContainer;
            }

        };

        //Step 6
        //recursive submit and limit to 1
        var _submitUploadQueue = function (currentFolder, data) {
            currentJQxhrData = jQuery.extend({}, data);
            isUploadingFile = true;
            currentJQxhr = data.submit()
                .success(function (result, textStatus, jqXHR) {
                    isUploadingFile = false;
                    if ($.trim(jqXHR.responseText) === '' && jqXHR.statusText !== "error") {
                        uploadSuccess(currentFolder, data, function(){
                            submitUploadQueue(currentFolder);
                        });
                    } else {
                        uploadFail(currentFolder, data, function(){
                            submitUploadQueue(currentFolder);
                        });
                    }
                })
                .error(function (jqXHR, textStatus, errorThrown) {
                    isUploadingFile = false;
                    if(jqXHR.status === 200){
                        uploadSuccess(currentFolder, data, function(){
                            submitUploadQueue(currentFolder);
                        });
                    //}else if(jqXHR.status === 500){
                    }else if(jqXHR.status === 0 && jqXHR.statusText === 'abort'){
                        //do nth
                        //submitUploadQueue(currentFolder);
                    }else{
                        uploadFail(currentFolder, data, function(){
                            submitUploadQueue(currentFolder);
                        });
                    }
                });
        };
        var submitUploadQueue = function (currentFolder) {

            if(isUploadOnHold) return;

            var c = finalUploadQueue.shift();

            if(abortFileUpload(currentFolder)) return;
            //this will abort the upload when the repo browser is close
            if(c && bd.repositoryBrowser.isInited){
                if(!isUploadStarted){
                    isUploadStarted = true;
                    currentFolder.currentUploadFolder = currentFolder.folderId;
                    //hide the upload button
                    toggleUploadFileButton(currentFolder, 'hide');
                }
                c.targetContainer.find('.bd-RepositoryBrowser-fileContainer-text').text('Uploading...');
                c.targetContainer.children('.bd-repositoryBrowser-removeUploadBtn').remove();
                _submitUploadQueue(currentFolder, c);
            }else{
                resetUploadVariable(currentFolder);
                toggleUploadFileButton(currentFolder, 'show');

                if(!totalUpload) return;
                bc.component.notify({
                    delay: 1000,
                    uid: 'notify-0099',
                    icon: 'checkbox', // checkbox, attention, error, loading
                    message: 'Upload complete. refreshing the files.'
                });
                setTimeout(function(){
                    currentFolder.resetVar();
                    currentFolder.utilsFn.reloadFiles(currentFolder);
                }, 500);

                //currentFolder.utilsFn.addDropZoneContainer(currentFolder);
                //currentFolder.utilsFn.toggleLoadMoreButton(currentFolder);
            }
        };

        //step 7
        var uploadSuccess = function(currentFolder, data, callback){
            if(isOverWritingCurrentUpload === 1){
                isOverWritingCurrentUpload = 2; //0=false, 1=true, 2=true-but-finished, 3=false-but-finish
                //isUploadOnHold = false;
                if(callback) callback();
                return;
            }
            if(abortFileUpload(currentFolder)) return;
            //remove the x and change the text to "finishing...""
            data.targetContainer.children('.bd-repositoryBrowser-removeUploadBtn').remove();
            data.targetContainer.find('.bd-RepositoryBrowser-fileContainer-text').text('Finishing...');

            var fileName = data.files[0].name;
            be.cmis.getMetaData({
                path : (currentFolder.path == '/'? '' : currentFolder.path) +'/'+ fileName,
                errorCallback: function () {
                    if(callback) callback();
                }
            }, function(metaData){
                if(isOverWritingCurrentUpload === 1){
                    isOverWritingCurrentUpload = 2; //0=false, 1=true, 2=true-but-finished, 3=false-but-finish
                    //isUploadOnHold = false;
                }
                //if(isUploadOnHold) return;
                //if aborted the file but it already uploaded, then delete the file from the cmis
                // if(isAbortSingleUpload){
                //     var params = {
                //                     fileName : obj.name,
                //                     objectId: obj.contentUId,
                //                     successCallback : successCallback,
                //                     errorCallback : errorCallback
                //             };

                //             be.cmis.deleteContent(params);
                // }
                var fileData= {
                        //alt : propValueFormatting('bb:altText', metaData['bb:altText'].property),
                        metaData : metaData,
                        contentUId : currentFolder.utilsFn.propValueFormatting('cmis:objectId', metaData['cmis:objectId'].property),
                        name : currentFolder.utilsFn.propValueFormatting('cmis:name', metaData['cmis:name'].property),
                        path : currentFolder.utilsFn.propValueFormatting('cmis:path', metaData['cmis:path'].property),
                        thumbUrl : metaData['thumbUrl'].property,
                        type : currentFolder.utilsFn.propValueFormatting('cmis:contentStreamMimeType', metaData['cmis:contentStreamMimeType'].property),
                        url : metaData['url'].property
                    };
                fileData.thumbUrl = currentFolder.utilsFn.generateThumbUrl(fileData.type.toLowerCase()) || fileData.thumbUrl;

                var htmlContent = currentFolder.renderFiles([ fileData ] );
                data.targetContainer.replaceWith(htmlContent);
                data.targetContainer.unbind('click.uploadFail');
                currentFolder.filesHashMap[fileName] = fileData;
                if(callback) callback();
            });
        };
        var uploadFail = function(currentFolder, data, callback){
            if(isUploadOnHold || abortFileUpload(currentFolder)) return;
            data.targetContainer.find('.bd-RepositoryBrowser-fileContainer-text').text('Upload Fail');
            data.targetContainer.children('.bd-RepositoryBrowser-fileContainer-actionButton').remove();
            data.targetContainer.children('.bd-RepositoryBrowser-fileContainer-dropDownListWrapper').remove();
            data.targetContainer.children('.bd-RepositoryBrowser-fileContainer-imageContainer').removeClass('bd-RepositoryBrowser-loadingGif-32x32');
            if(callback) callback();
        };

        var abortFileUpload = function(currentFolder){
            if(currentFolder.abortFileUpload){
                //console.log('abort: true');
                abortJqXHR();
                bc.component.notify({
                    uid: 'notify-0099-aborted',
                    icon: 'attention', // checkbox, attention, error, loading
                    message: 'Upload Aborted.'
                });
                resetUploadVariable(currentFolder);
                toggleUploadFileButton(currentFolder, 'show');
                finalUploadQueue = [];
                return true;
            }
            return false;
        };

        var resetUploadVariable = function (currentFolder) {
            currentFolder.abortFileUpload = false;
            currentFolder.currentUploadFolder = '';
            isUploadStarted = false;
            uploadFilesLength = 0;
            uploadCount = 0;
            uploadQueue = [];
            finalUploadQueue = [];
            isUploadOnHold = false;
            currentJQxhr = null;
            currentJQxhrData = null;
            isAbortSingleUpload = false;
            isOverWritingCurrentUpload = 0;
            isUploadingFile = false;
        };

        var toggleUploadFileButton = function(currentFolder, action){
            var $header = currentFolder.repositoryBrowserWrapper.parent().siblings('.bd-repositoryBrowser-dashboard-header');
            if(!$header.length){ return; }

            var $TopButtons = $header.children('.bd-repositoryBrowser-topButtons');
            if(!$TopButtons.length){ return; }

            if(action === 'hide'){
                $TopButtons.children('ul[data-cid="bc-dd--7928"]').hide();
            }else{
                $TopButtons.children('ul[data-cid="bc-dd--7928"]').show();
            }
        };

        var removeUploadFromList = function (fileName) {
            var i,c;
            for (i = finalUploadQueue.length - 1; i >= 0; i--) {
                c = finalUploadQueue[i].files[0].name;
                if(c === fileName){
                    finalUploadQueue.splice(i,1);
                }
            }
        };

        var abortJqXHR = function () {
            if(currentJQxhr) {
                currentJQxhr.abort();
                currentJQxhr = null;
            }
        };

        var cancelSingleUpload = function (currentFolder, target) {
            var $target = jQuery(target), fileName = $target.siblings('.bd-RepositoryBrowser-fileContainer-Name').attr('itemname'),
                $imgeContainer = null;
            if(
                isUploadStarted &&
                currentJQxhr &&
                currentJQxhrData
            ){
                if(currentJQxhrData.files[0].name === fileName){
                    isAbortSingleUpload = true;
                    isUploadOnHold = true;
                    abortJqXHR();
                }

                removeUploadFromList(fileName);
                $imgeContainer = $target.siblings('.bd-RepositoryBrowser-fileContainer-imageContainer');
                $imgeContainer.removeClass('bd-RepositoryBrowser-loadingGif-32x32').find('.bd-RepositoryBrowser-fileContainer-text').text('Aborted');

                //resume the upload quque again after abort
                if(currentJQxhrData.files[0].name === fileName){
                    isAbortSingleUpload = false;
                    isUploadOnHold = false;
                    submitUploadQueue(currentFolder);
                }
            }
        };


        // function askToRefresh(msg, icon) {
        //     bc.component.notify({
        //         delay: -1,
        //         uid: 'notify-0099s',
        //         icon: icon, //'checkbox', // checkbox, attention, error, loading
        //         message: msg +' <br/>Refresh.'
        //     });
        // };


        var dropToUpload = function(currentFolder){
            var $htmlContent = jQuery('<div class="bd-RepositoryBrowser-uploadForm-div" style="">'+
                    '<input type="file" size="43" id="uploadField_oo" name="file" '+
                    'class="bd-RepositoryBrowser-uploadForm-uploadField" multiple="multiple" style="display:none;width:100%;height:100%;"/></div>');

            //ie and safari 4 do not support drop to upload
            if(jQuery(document).find('html').hasClass('ie') || navigator.userAgent.match(/version\/4(.*)? safari(.*)?/gi)){
                return false;
            }

            currentFolder.repositoryBrowserFileList.addClass('bd-RepositoryBrowser-DragAndDropToUpload').parent().prepend($htmlContent);
            //when drop on file thumbnail not working
            //var pos = $dropArea.offset();
            //$htmlContent.css({'top':60, 'left':pos.left, 'width':$dropArea.width(), 'height':$dropArea.height(), 'z-index': 1});
            //this var only for the safari 5
            var isDataTransferExists = true;
            var initJqueryUpload = function(){
                jQuery('.bd-RepositoryBrowser-uploadForm-uploadField', $htmlContent).fileupload({ //bd-RepositoryBrowser-uploadForm
                    dataType: 'text/html',
                    type: 'POST',
                    //fileInput: jQuery('.bd-RepositoryBrowser-uploadForm-uploadField'),
                    url: postUrl,
                    dropZone: currentFolder.repositoryBrowserFileList,
                    singleFileUploads: true,
                    //forceIframeTransport: true,
                    //headers : {"Content-Type" : "multipart/form-data;charset=utf-8"},
                    add: function (e, data) {
                        if(!data || !data.files || !data.files[0]) return;
                        if(!isDataTransferExists){
                            if(uploadFilesLength) uploadFilesLength += data.originalFiles.length;
                            else uploadFilesLength = data.originalFiles.length;
                        }
                        fileCheckBeforeUpload(e, data, currentFolder);

                        //this check used to start the submit after all files are dropped
                        uploadCount += 1;
                        if(uploadCount === uploadFilesLength){
                            isDataTransferExists = true;
                            checkCurrentExists(currentFolder);
                        }
                    },
                    drop: function (e, data) {
                        if(isUploadStarted) isUploadOnHold = true;
                        //isUploadingFile = true;
                        if (e.dataTransfer && e.dataTransfer.files && e.dataTransfer.files.length) {
                            //console.log(e.dataTransfer.files);
                            if(uploadFilesLength) {
                                //abortJqXHR();
                                if(currentJQxhrData){
                                    //isOverWritingCurrentUpload = 0;
                                    var i,c, currentFileName = currentJQxhrData.files[0].name;
                                    for (i = e.dataTransfer.files.length - 1; i >= 0; i--) {
                                        c = e.dataTransfer.files[i].name;
                                        if(c === currentFileName){
                                            isOverWritingCurrentUpload = 1; //0=false, 1=true, 2=true-but-finished, 3=false-but-finish
                                            break;
                                        }
                                    }
                                }
                            }
                            uploadFilesLength += e.dataTransfer.files.length;
                        }else{
                            console.log('isDataTransferExists');
                            isDataTransferExists = false;
                        }
                    },
                    submit: function (e, data) {
                        data.formData = {
                            "name": data.files[0].name,
                            "targetPath": currentFolder.path,
                            "cmis:createdBy": bd.loggedInUserId,
                            "cmis:lastModifiedBy": bd.loggedInUserId,
                            "cmis:objectTypeId": currentFolder.utilsFn.checkImageType(data.files[0]) ? 'bb:image' : "cmis:document",
                            "bb:title": data.files[0].name
                        };
                    }/*for progress bar,
                    progressInterval: 50,
                    progress: function (e, data) {
                        console.log(e, data);
                        return;
                        var progress = parseInt(data.loaded / data.total * 100, 10);
                        console.log('progress: ', progress);
                    }*/
                });

                $(document).bind('drop.repoBrowser dragover.repoBrowser', function (e) {
                    e.preventDefault();
                });
            };

            lazyLoadJqueryUpload(initJqueryUpload);
            return true;
        };

    bd.repoBrowser = bd.repoBrowser || {};
    bd.repoBrowser.uploadFn = function(currentFolder){
        return {
            popupUploadFile: popupUploadFile,
            dropToUpload: dropToUpload,
            cancelSingleUpload: cancelSingleUpload
        };
    };
}());
/**
 * Copyright (c) 2011 Backbase B.V.
 */
(function ($) {
//	'use strict';

	var msg = {
		MSG_PDF_HAS_NO_PREVIEW   : 'PDF files can not be previewed in this browser.',
		MSG_FILE_HAS_NO_PREVIEW  : 'This file type can not be previewed.',
        MSG_UNKNOWN_ERROR  : 'This file can not be previewed due to some unknown error.',
		MSG_FILE_DOES_NOT_EXISTS : 'The file does not exist in this folder, please refresh the folder.'
	};


	var previewTypes = ['text/', 'image/', 'application/pdf', 'bb:link'],
		textTypes = ['text/', 'bb:link'],
		richtextPipePath = bd.contextRoot +'/proxy?pipe=mustachePipe&contentPath=',
		unEditableProperties = [
			'cmis:name',
			'cmis:contentStreamLength',
			'cmis:path',
			'cmis:createdBy',
			'cmis:lastModifiedBy',
			'cmis:creationDate',
			'cmis:lastModificationDate',
			'cmis:versionSeriesId'
		],
        isIE8 = jQuery('html').hasClass('ie8');

	var isPreviewable = function(fileType){
		var i,l,c,index;
		for(i=0,l=previewTypes.length;i<l;i++){
			c = previewTypes[i];
			index = fileType.indexOf(c);
			if( index !== -1){
				return i;
			}
		}
		return -1;
	};

	var getPreviewObj = function(fileData){
		var type,
			objectTypeId,
			previewIndex,
			previewObj = {},
			meta = fileData && fileData.metaData,
			nocache = function(){
				return '&nobrowsercache=true';
			},
			skipTransformation = function(){
				return '&skipTransformation=true';
			};

		if(meta){
			objectTypeId = meta['cmis:objectTypeId'];
			objectTypeId = objectTypeId && objectTypeId.property;
			previewObj.objectTypeId = objectTypeId;
			previewObj.type = fileData.type;

			previewIndex = isPreviewable(fileData.type);

			// Check if file could be previewed
			if( previewIndex !== -1 ) {
				type = previewTypes[previewIndex];

				// Check if type is text and could be previewed as a source code
				if($.inArray(type, textTypes) !== -1 ) {
					previewObj.isText = true;
					if(objectTypeId == "bb:richtext"){
						//previewObj.iframe = richtextPipePath + fileData.path;
                        previewObj.isRichText = true;
                        previewObj.source = richtextPipePath + fileData.path + nocache() + skipTransformation();
					} else if(objectTypeId == "bb:link") {
						previewObj.text = '<a href="' + meta['bb:url'].property +
							'" title="' + meta['bb:subTitle'].property +
							'" onclick="return false;">' +
							meta['bb:title'].property + '</a>';
					} else if (objectTypeId == "bb:structuredcontent") {
						previewObj.isStructuredContent = true;

						previewObj.repository = fileData.repository;
						previewObj.contentUId = fileData.contentUId;
						previewObj.typeDefinitionName = meta['bb:typeDefinitionName'].property;

						previewObj.scSrc = fileData.url;
					} else {
						previewObj.source = richtextPipePath + fileData.path + nocache() + skipTransformation();
					}
				} else {
                    // no need for browser restriction,
                    // browser will handle the preview of pdf files
					previewObj.iframe = fileData.url;
				}
			} else {
				previewObj.text = msg.MSG_FILE_HAS_NO_PREVIEW;
			}
		}
		//console.log('fileData:', fileData, 'previewObj:', previewObj);
		return previewObj;
	};

	var processRichTextContent = function(content) {
		jQuery(content).find('img').each(function(i){
			var $img = jQuery(this);
			if($img.attr('data-ice-content-preview')){
				$img.attr('src', $img.attr('data-ice-content-preview'));
			}
		});
	};

	var bindIframe = function(iframe, previewObj){
		iframe.unbind('load').one('load', function(){
			var iframeContents = iframe.contents(),
                iframeBody = iframeContents.find('body');
            //unify the font
            iframeBody.css({
                'font-family': '"Lucida Grande","Lucida Sans Unicode",Helvetica,Arial,sans-serif',
                'font-size': '13px',
                'line-height': '16px'
            });
            if(isIE8){
                iframeBody.css({
                    //for IE 8
                    'background': 'transparent'
                });
            }
			//console.log(previewObj);
			if (previewObj.source) { // rich text type file
                be.utils.ajax({
                    url : previewObj.source,
                    error:function(xhr){
                        if(xhr.status === 500){
                            iframeBody.html('<div>' + msg.MSG_UNKNOWN_ERROR + '</div>');
                        }else{
                            iframeBody.html('<div>' + msg.MSG_FILE_HAS_NO_PREVIEW + '</div>');
                        }
                    },
                    success: function(xhr) {
                        if(previewObj.isRichText){
                            iframeBody.html(xhr);
                            processRichTextContent(iframeBody);
                        }else{
                            $('<pre/>').appendTo(iframeBody.html('')).text(xhr);
                        }

                    }
                });
			} else if(previewObj.text && !previewObj.iframe){ // error msg
				iframeBody.html('<div>' + previewObj.text + '</div>');
			} else if (previewObj.isStructuredContent) { // Structured Content
				// Fallback renders the json object.
				function fallbackTemplate() {
            		be.utils.ajax({
            			url : previewObj.scSrc,
            			error: function(xhr) {
	                        if(xhr.status === 500){
	                            iframeBody.html('<div>' + msg.MSG_UNKNOWN_ERROR + '</div>');
	                        }else{
	                            iframeBody.html('<div>' + msg.MSG_FILE_HAS_NO_PREVIEW + '</div>');
	                        }
            			},
            			success: function(xhr) {
            				// quick json renderer to fake the output to be json formatted.
			        		var scJson = JSON.parse(xhr);
			        		iframeBody.html(be.utils.formatJson(scJson));
            			}
            		});
				};

            	var sUrl = be.contextRoot +'/catalog/'+previewObj.typeDefinitionName;
            	// check if there has been a previewTemplate added
                be.utils.ajax({
                    url : sUrl,
                    dataType: 'xml',
                    error: function(response) {
                    	fallbackTemplate();
                    },
                    success: function(response) {
                    	var sTemplate = $(response).find('property[name="previewTemplate"] value').text();

                    	// the the previewTemplate property is there
                    	if (sTemplate) {
                    		// render the sctructured content by using the rendered service
							var repositoryName = (previewObj.repository == 'contentRepository') ? 'contentRepository' : '@portalRepository';
							var contextItemName = (repositoryName == 'contentRepository') ? '[BBHOST]' : bd.selectedPortalName;
							var sUrl = be.contextRoot + '/contenttemplates/rendered?contentRef.contentRef=cs:'+ repositoryName +':'+ previewObj.contentUId +'&templateUrl='+ sTemplate +'&contextItemName='+ contextItemName;

                    		be.utils.ajax({
                    			url : sUrl,
                    			error: function() {
                    				fallbackTemplate();
                    			},
                    			success: function(previewResponse) {
                    				iframeBody.html(previewResponse);
                    			}
                    		});
                    	} else {
                    		fallbackTemplate();
                    	}
                    }
                });

			}else{// check image type and error 409-constraint
                var iframeDoc = iframeContents[0];
                if(iframeDoc && iframeDoc.title && iframeDoc.title.indexOf('Apache Chemistry OpenCMIS') !== -1){
                    iframeBody.html('<div>' + msg.MSG_UNKNOWN_ERROR + '</div>');
                }
            }
			// prevent clicking links in preview
			iframeBody.on('click.bd_preview', 'a', function(e){
				e.preventDefault();
				return false;
			});

            iframe.css('visibility', "visible");
		}).css({
            //for IE 8
            'background': 'transparent'
        });

	};


	// update iframe
	var updatePreviewFrame = function(iframe, fileData){
		var previewObj = getPreviewObj(fileData),
			iframeStyle = (previewObj.isText || previewObj.text) ? 'background:#fff;' : '';

        iframe.css('visibility', "hidden");

        bindIframe(iframe, previewObj);
        if(isIE8){
            iframe.attr({
                //for IE8
                'allowTransparency': true,
                'frameborder': 0,
                'marginheight': 0,
                'marginwidth': 0
            });
        }
        //switch the rich text preview to be the ajax-based because we need the custom Error Page to be displayed
        iframe.attr({
            'src': previewObj.iframe || '',
            'style': iframeStyle
        });
        // cleanup ptc cache
        //be.utils.delay(be.commonContentUtils.cleanPTCCache, 500);

	};


	//preview the file
	var getCurrentFileNumber = function(params, currentFileNumber, totalFileNumber){
		if(params.direction == 'next'){
			currentFileNumber++;
		}else if(params.direction == 'previous'){
			currentFileNumber--;
		}

		var tmpCurrentFileNumber = currentFileNumber+1;

		if(tmpCurrentFileNumber < 1){
			currentFileNumber = totalFileNumber-1;
		} else if(tmpCurrentFileNumber > totalFileNumber){
			currentFileNumber = 0;
		}
		return currentFileNumber;
	};


		//preview the file
        var previewFile = function(currentFolder, params){
            //show cover
            jQuery('.bd-RepositoryBrowser-loadingCover').addClass('bd-repoBrowser-preview-bg');
            currentFolder.loadCover.show();

            var versionSeriesId = '',
				fileType = currentFolder.currentSelectedFile.type;

            var changeFile = function(params){

				var fileName,
					$loadCoverIframe = $loadCover.find('.bd-RepositoryBrowser-previewWrapper-iframe');

				currentFileNumber = getCurrentFileNumber(params, currentFileNumber, totalFileNumber);
                currentFileContainer = jQuery(currentFileContainer.parent().children('.bd-RepositoryBrowser-fileContainer').get(currentFileNumber));
                fileName = currentFileContainer.children('.bd-RepositoryBrowser-fileContainer-Name').attr('itemname');
                currentFolder.currentSelectedFile = currentFolder.filesHashMap[fileName];
                versionSeriesId = currentFolder.currentSelectedFile.metaData["cmis:versionSeriesId"].property;


                $loadCover.find('.bd-RepositoryBrowser-preview-nav-fileNumber').text(
					(currentFileNumber+1) +" of "+  totalFileNumber
                );

				updatePreviewFrame($loadCoverIframe, currentFolder.currentSelectedFile);


                //file metaInfo
                var parmas = {
					variables : {
						path : currentFolder.currentSelectedFile.path,
						//property: ['size', 'name', 'path', 'createdBy', 'lastModifiedBy', 'creationDate', 'lastModificationDate', 'alt'],
						errorCallback : function(){
							be.utils.delay(function(){
								$loadCoverIframe.contents().find('body').html('<div style="color:#ffffff;">' + msg.MSG_FILE_DOES_NOT_EXISTS + '</div>');
							}, 200);
						}
					},

					callback: function(metaData){

						var newMetaData = [];
						var metaDataList = bd.uiEditingOptions.repositoryBrowser.metaDataList;
						var canEdit = false;
						for ( var key in metaDataList){
							if(!metaData[key]) continue;

							var isEditable = true;
							if( $.inArray(key, unEditableProperties) > -1){
								isEditable = false;
							}
							canEdit = canEdit | isEditable;

							var propName = metaDataList[key] ? metaDataList[key] : metaData[key].displayName;
							var propValue =  currentFolder.utilsFn.propValueFormatting(key, currentFolder.utilsFn.emptyProperty(metaData[key].property));
							newMetaData.push({propId: key, propName: propName, propValue: propValue, isEditable : isEditable});
						}
						var sortFunc = function(a, b) {
							var nameA = a.propName.toLowerCase(),
								nameB = b.propName.toLowerCase();
							if (nameA < nameB)
								return -1;
							if (nameA > nameB)
								return 1;
							return 0;
						};
						newMetaData.sort(sortFunc);


						var htmlContents = be.utils.processHTMLTemplateByUrl(be.contextRoot + "/static/backbase.com.2011.ice/html/RepositoryBrowser/fileMetaData.html",
							{
								metaData : newMetaData,
								isAdmin : bd.isAdmin || bd.uiEditingOptions.repositoryBrowser.fullCRUDToManagerRole,
								canEdit : canEdit
							}
						);
						$loadCover.find('.bd-RepositoryBrowser-preview-infoWrapper').html(htmlContents);

						var $versionsTab = $loadCover.find('.bd-tabLabels .bd-tab-rb-versions'),
							$activeTab = $loadCover.find('.bd-activeTab');

						$versionsTab.unbind('click').bind('click', function() {

							//var versions = be.cmis.getVersionsList(versionSeriesId),
							var successCallback = function(versions){
								var newVersions = [],
									versionLength = versions.length;

								for(i=0;i<versions.length;i++) {


									var preview = (versionLength == versions.length) ? false : true;

									newVersions.push({
										versionNumber:versionLength--,
										preview: preview,
										versionLabel:versions[i].versionLabel,
										path:versions[i].path,
										url:versions[i].url,
										modifiedBy:versions[i].modifiedBy,
										modifiedDate:bd.date.formatDateTime(versions[i].modifiedDate)
									});

								};

								var htmlContents = be.utils.processHTMLTemplateByUrl(be.contextRoot + "/static/backbase.com.2011.ice/html/RepositoryBrowser/versions.html", {versions : newVersions});
								$loadCover.find('.bd-tabs .bd-tab-rb-versions').html(htmlContents);

								jQuery('.bc-content-versions .bd-versions-preview').unbind('click').bind('click', function() {
									jQuery('.bd-RepositoryBrowser-previewWrapper-iframe').attr('src', jQuery(this).data('url'));
									jQuery('.bc-content-versions li').removeClass('bd-version-selected');
									jQuery(this).parent().parent().parent().addClass('bd-version-selected');
								});

								jQuery('.bc-content-versions .bd-versions-restore').unbind('click').bind('click', function() {

									var imagepath = jQuery(this).data('path'),
										versionLabel = jQuery(this).data('version');

									be.utils.ajax({
										url : bd.contextRoot + "/contentversions/restore?path="+imagepath+"&version="+versionLabel,
										cache: false,
										type: 'post',
										dataType: "xml",
										error:function(xhr){
											bc.component.notify({
												icon: 'error',
												message: 'An unknown error occurred.'
											});
										},
										success: function(xhr) {
											bc.component.dialog({
												title: 'Restore complete',
												message: 'The version was successfully restored.',
												// status: importStatus,
												buttons: [{
														title: 'OK',
														type: 'white',
														style: {
																width: '100px'
														},
														callback: function () {
															be.commonContentUtils.cleanMusCache();
															jQuery('.bc-content-versions li').removeClass('bd-version-selected');
															$versionsTab.click();
														}
												}]
											});
										}
									});
								});
							};

							if (versionSeriesId) {
								be.cmis.getVersionsList(versionSeriesId, successCallback);
							} else {
								$loadCover.find('.bd-tabs .bd-tab-rb-versions').html("<div>This document is not versioned</div>");
							}
						});

						if ($activeTab.hasClass('bd-tab-rb-versions')) {
							$versionsTab.click();
						}

						//editSingleMetaData({$container : jQuery($loadCover.find('.bd-RepositoryBrowser-preview-infoWrapper')), currentFolder: currentFolder, objectType : metaData.isAlt});
						editMetaData({$container : jQuery($loadCover.find('.bd-RepositoryBrowser-preview-infoWrapper')), currentFolder: currentFolder});
					}
                };
                currentFolder.loadSingleFile(parmas);
            };

			var width = params.coverArea.width(),
				height = params.coverArea.height(),
				pos = params.coverArea.offset(),
				currentFileContainer = params.selectedFileContainer,
				currentFileNumber = currentFileContainer.parent().children('.bd-RepositoryBrowser-fileContainer').index(currentFileContainer),
				totalFileNumber = currentFileContainer.siblings('.bd-RepositoryBrowser-fileContainer').length + 1,
				htmlContent = be.utils.processHTMLTemplateByUrl(be.contextRoot + "/static/backbase.com.2011.ice/html/RepositoryBrowser/previewFile.html", null);

            currentFolder.loadCover.html(htmlContent);

			var $loadCover = currentFolder.loadCover.getLoadCover();
            $loadCover.find('.bd-RepositoryBrowser-previewWrapper-closeIcon').click( function() {
                currentFolder.loadCover.hide();
                jQuery('.bd-RepositoryBrowser-loadingCover').removeClass('bd-repoBrowser-preview-bg');
            });
            $loadCover.find('.bd-RepositoryBrowser-preview-nav-leftArrow').click(function(){
                changeFile({direction:'previous'});
            });
            $loadCover.find('.bd-RepositoryBrowser-preview-nav-rightArrow').click(function(){
                changeFile({direction:'next'});
            });
            changeFile({direction:null});

            //hide cover
            //currentFolder.loadCover.hide();
        };

        var loadingCover = function(params){
            //$largeCover is used for the loading and the previewing
            var $largeCover = params.coverArea.find('.bd-RepositoryBrowser-loadingCover') ;

            var show = function(){
                if(params.coverArea.hasClass('bd-smallRepositoryBrowser')){
                    var fileListArea = params.coverArea.children().children('.bd-RepositoryBrowser-fileList');
                    var height = fileListArea.height();
                    $largeCover.css({
                        'height' : height
                    });
                }

                if(jQuery('html').hasClass('ie9minus') && !$largeCover.hasClass('bd-repoBrowser-preview-bg')){
                    $largeCover.addClass('bd-RepositoryBrowser-loadingGif-IE9');
                }
                $largeCover.show();
            };

            var hide = function(){
    //          clearTimeout(timer);
                $largeCover.removeClass('bd-RepositoryBrowser-loadingGif-IE9');
                $largeCover.hide();
                $largeCover.html('');
                $largeCover.addClass('bd-RepositoryBrowser-loadingGif');
            };

            var html = function($html){
                $largeCover.removeClass('bd-RepositoryBrowser-loadingGif');
                $largeCover.html($html);
            };

            var getLoadCover = function(){
                return $largeCover;
            };

            return {
                getLoadCover : getLoadCover,
                html : html,
                show : show,
                hide : hide
            };
        };

        var editMetaData = function(params){

            params.$container.undelegate('.bd-RepositoryBrowser-preview-actionButton-edit', 'click')
                .delegate('.bd-RepositoryBrowser-preview-actionButton-edit', 'click', function(e){
                    var $this = jQuery(this);
                    var $elem = $this.parent().siblings('.bd-RepositoryBrowser-preview-editable');
                    //var currentSelectedFile = params.currentFolder.currentSelectedFile;
                    //console.log($elem);
                    $elem.each(function(i,e){
                        var $editableContainer = jQuery(this);
                        var propId = $editableContainer.attr("propid");
                        var propName = $editableContainer.children(".bd-rb-preview-title").text();
                        var propValue = $editableContainer.find(".bd-rb-preview-value").text();
                        propValue = propValue == '(empty)' ? '' :  propValue;
                        var inputDiv = '<div style="width:55%;" class="bd-inPlaceEditable-input-div" >'
                            +'<input size="5" propId="'+propId+'" propName="'+propName+'" class="bd-inPlaceEditable-input" oldvalue="' + propValue + '" value="' + propValue + '" style="width:100%;"/>'
                            +'</div>';
                        $editableContainer.children(".bd-editableContainer").after(inputDiv).hide();
                    });

                    $this.hide();
                    $this.siblings().show();
                });

            params.$container.undelegate('.bd-RepositoryBrowser-preview-actionButton-cancel', 'click')
                .delegate('.bd-RepositoryBrowser-preview-actionButton-cancel', 'click', function(e){
                    var $this = jQuery(this);
                    var $elem = $this.parent().siblings('.bd-RepositoryBrowser-preview-editable');
                    $elem.children(".bd-inPlaceEditable-input-div").remove();
                    $elem.children(".bd-editableContainer").show();
                    $this.hide();
                    $this.siblings(".bd-RepositoryBrowser-preview-actionButton-save").hide();
                    $this.siblings(".bd-RepositoryBrowser-preview-actionButton-edit").show();
                });

            params.$container.undelegate('.bd-RepositoryBrowser-preview-actionButton-save', 'click')
                .delegate('.bd-RepositoryBrowser-preview-actionButton-save', 'click', function(e){
                    var $this = jQuery(this);
                    var $elem = $this.parent().siblings('.bd-RepositoryBrowser-preview-editable');
                    var currentSelectedFile = params.currentFolder.currentSelectedFile;
                    //console.log($elem);
                    var properties = {};
                    $elem.each(function(i,e){
                        var $editableContainer = jQuery(this);
                        var propId = $editableContainer.attr("propid");
                        var $inputField = $editableContainer.children(".bd-inPlaceEditable-input-div").children(".bd-inPlaceEditable-input");
                        var propValue = $.trim($inputField.val());
                        if($inputField.attr('oldvalue') != propValue)
                            properties[propId] = propValue;
                    });

                    be.cmis.updateProperty({
                        type : currentSelectedFile.type,
                        properties: properties,
                        ContentUid : currentSelectedFile.contentUId,
                        successCallback : function(){

                            var metaDataList = be.iceWidgetImageMetaData.metaDataList;
                            var newMetaData = {};
                            for(var key in properties){
                                newMetaData[metaDataList[key]] = properties[key] == null? "":properties[key];
                            }
                            currentSelectedFile.meta = newMetaData;
    //                      if(properties['bb:altText'])
    //                          params.currentFolder.currentSelectedFile.alt = properties['bb:altText'];

                            $elem.each(function(i,e){
                                var $editableContainer = jQuery(this);
                                var propId = $editableContainer.attr("propid");
                                var $container = $editableContainer.children(".bd-editableContainer");
                                if(properties[propId])
                                    $container.children('.bd-rb-preview-value').text(properties[propId]);
                                $editableContainer.children(".bd-inPlaceEditable-input-div").remove();
                                $container.show();
                            });
                        }
                    });
                    $this.hide();
                    $this.siblings(".bd-RepositoryBrowser-preview-actionButton-cancel").hide();
                    $this.siblings(".bd-RepositoryBrowser-preview-actionButton-edit").show();
                });
        };



    bd.repoBrowser = bd.repoBrowser || {};
    bd.repoBrowser.previewFn = function(currentFolder){
        return {
            previewFile: previewFile,
            loadingCover: loadingCover,
            editMetaData: editMetaData
        };
    };
    bd.repoBrowser.updatePreviewFrame = updatePreviewFrame;

})(jQuery);
/**
 * Copyright � 2011 Backbase B.V.
 */
(function () {
    var shiftKeyPress = false;
    var bindEvents = function($repositoryBrowserFileList, currentFolder){
            //add the highlight to the selected file
            $repositoryBrowserFileList.delegate('.bd-RepositoryBrowser-fileContainer-imageContainer', 'click', function(e){
                //e.stopPropagation();
                e.preventDefault();
                if (e.target !== this) {return;}
                else{
                    var $this = jQuery(this);
                    if(!$this.hasClass('bd-RepositoryBrowser-fileContainer-dropZone')){
    //                      var fileIdx = $this.siblings('.bd-RepositoryBrowser-fileContainer-Name').attr('itemidx');
                        var fileName = $this.siblings('.bd-RepositoryBrowser-fileContainer-Name').attr('itemname');
                        if(!shiftKeyPress){
                            $this.parent().siblings().children('.bd-RepositoryBrowser-fileContainer-imageContainer').removeClass('bd-RepositoryBrowser-fileContainer-imageContainer-highlight');
                            currentFolder.selectedFiles = {};
                        }
                        if($this.hasClass('bd-RepositoryBrowser-fileContainer-imageContainer-highlight')){
                            $this.removeClass('bd-RepositoryBrowser-fileContainer-imageContainer-highlight');
                            if(currentFolder.selectedFiles[fileName]){
                                delete currentFolder.selectedFiles[fileName];
                            }
                        }else{
                            $this.addClass('bd-RepositoryBrowser-fileContainer-imageContainer-highlight');
                            currentFolder.currentSelectedFile = currentFolder.filesHashMap[fileName];
                            currentFolder.selectedFiles[fileName] = currentFolder.filesHashMap[fileName];
                        }
                    }
                }
            });

            //remove the highlight of the selected file
            $repositoryBrowserFileList.click(function(e){
                //e.stopPropagation();
                e.preventDefault();
                var $this = jQuery(this);
                if (e.target !== this) {return;}
                else{
                    $this.children('.bd-RepositoryBrowser-fileContainer').children('.bd-RepositoryBrowser-fileContainer-imageContainer').removeClass('bd-RepositoryBrowser-fileContainer-imageContainer-highlight');
                    currentFolder.selectedFiles = {};
                }
            });

            //event to lazying loading when scroll down the folder tree
            var timer = null;
            var prevLeft = 0;
            currentFolder.repositoryBrowserTreeList.parent().bind('scroll', function(e){
                var This = this;
                clearTimeout(timer);
                timer = setTimeout(function(){
                    //prevent horizontal scrolling
                    var currentLeft = jQuery(This).scrollLeft();
                    if(prevLeft !== currentLeft) {
                        prevLeft = currentLeft;
                    }else{
                        currentFolder.utilsFn.scrollToLoadMore(This);
                    }
                }, 300);
            }).on('click', '.bd-loadMoreTrigger', function(e){
                var $target = jQuery(e.target).parent('ul').parent('li');
                currentFolder.utilsFn.folderLoadMore(currentFolder, $target);
            });

        },
        bindEventsForEditMode = function(params, $repositoryBrowserFileList, currentFolder){
            if(!params.editMode) return;
            //bind the mouseover and mouseout to the file container for actionBar show up
            $repositoryBrowserFileList.delegate('.bd-RepositoryBrowser-fileContainer', 'mouseenter', function(e){
                e.stopPropagation();
                e.preventDefault();
                var $this = jQuery(this);
                $this.children('.bd-RepositoryBrowser-fileContainer-actionButton').show();
                $this.children('.bd-repositoryBrowser-removeUploadBtn').show();
            }).delegate('.bd-RepositoryBrowser-fileContainer', 'mouseleave', function(e){
                e.stopPropagation();
                e.preventDefault();
                var $this = jQuery(this);
                $this.children('.bd-RepositoryBrowser-fileContainer-actionButton').hide();
                $this.children('.bd-RepositoryBrowser-fileContainer-dropDownListWrapper').hide();
                $this.children('.bd-repositoryBrowser-removeUploadBtn').hide();
            });

            // show the drop down list after click the gear button
            $repositoryBrowserFileList.delegate('.bd-RepositoryBrowser-fileContainer-editFileButton', 'click', function(e){
                var $this = jQuery(this);
                e.stopPropagation();
                var $thisParent = $this.parent();
                $thisParent.siblings('.bd-RepositoryBrowser-fileContainer-dropDownListWrapper').show();
                $thisParent.parent().siblings().children('.bd-RepositoryBrowser-fileContainer-imageContainer').removeClass('bd-RepositoryBrowser-fileContainer-imageContainer-highlight');
                $thisParent.siblings('.bd-RepositoryBrowser-fileContainer-imageContainer').addClass('bd-RepositoryBrowser-fileContainer-imageContainer-highlight');
                var fileName = $thisParent.siblings('.bd-RepositoryBrowser-fileContainer-Name').attr('itemname');
                currentFolder.selectedFiles = {};
                currentFolder.selectedFiles[fileName] = currentFolder.filesHashMap[fileName];
                currentFolder.currentSelectedFile = currentFolder.filesHashMap[fileName];
            });

            //bind the click event on the previewfilebutton, to open the preview popup
            $repositoryBrowserFileList.delegate('.bd-RepositoryBrowser-fileContainer-previewFileButton', 'click', function(){
                var fileName = jQuery(this).parent().siblings('.bd-RepositoryBrowser-fileContainer-Name').attr('itemname');
                currentFolder.currentSelectedFile = currentFolder.filesHashMap[fileName];

                currentFolder.previewFn.previewFile(currentFolder,{ coverArea : $repositoryBrowserFileList, selectedFileContainer : jQuery(this).parent().parent() });

            });

            //bind the show info function in the drop down list
            $repositoryBrowserFileList.delegate('.bd-RepositoryBrowser-fileContainer-dropDownList-info', 'click', function(){
                var $this = jQuery(this);
                var $nameDiv = $this.parent().siblings('.bd-RepositoryBrowser-fileContainer-Name');

                var fileName = $nameDiv.attr('itemname');
                currentFolder.currentSelectedFile = currentFolder.filesHashMap[fileName];
                currentFolder.previewFn.previewFile(currentFolder,{ coverArea : $repositoryBrowserFileList, selectedFileContainer:$this.parent().parent() });
            });

            // bind event for the cancel upload button
            $repositoryBrowserFileList.delegate('.bd-repositoryBrowser-removeUploadBtn', 'click', function(){
                currentFolder.uploadFn.cancelSingleUpload(currentFolder, this);
            });
        },
        bindEventsForAdmin = function(params, $repositoryBrowserWrapper, $repositoryBrowserFileList, currentFolder){
            if(!params.editMode || !params.isAdmin) return;
            //bind the shift and ctrl key press for multiple item select
            jQuery(document).bind('keydown.ctrlShift',function(e){
                e.stopPropagation();
                if(e.which == 16 || e.which == 17){
                    shiftKeyPress = true;
                }
            }).bind('keyup.ctrlShift',function(e){
                e.stopPropagation();
                if(e.which == 16 || e.which == 17){
                    shiftKeyPress = false;
                }
            });

            //ctrl+a select all
    //                  jQuery(document).bind('keydown.ctrlA',function(e){
    //                      e.stopPropagation();
    //                      //e.preventDefault();
    //                      console.log("is hidden: "+$repositoryBrowserFileList.is(':hidden'));
    //                      console.log(shiftKeyPress);
    //                      console.log(e.which);
    //                      if(shiftKeyPress){
    //                          if(e.which == 65 && !$repositoryBrowserFileList.is(':hidden')){
    //                              e.preventDefault();
    //                              var $fileContainerList = $repositoryBrowserFileList.children('.bd-RepositoryBrowser-fileContainer').children('.bd-RepositoryBrowser-fileContainer-imageContainer');
    //                              $fileContainerList.addClass("bd-RepositoryBrowser-fileContainer-imageContainer-highlight");
    //                              currentFolder.selectedFiles = {};
    //                              $fileContainerList.each(function(){
    //                                  var fileName = jQuery(this).siblings('.bd-RepositoryBrowser-fileContainer-Name').attr('itemname');
    //                                  currentFolder.currentSelectedFile = currentFolder.filesHashMap[fileName];
    //                                  currentFolder.selectedFiles[fileName] = currentFolder.filesHashMap[fileName];
    //                              });
    //                          }
    //                      }
    //                  }).bind('keyup.ctrlA',function(e){
    //                      e.stopPropagation();
    //                      if(e.which == 16 || e.which == 17){
    //                          shiftKeyPress = false;
    //                      }
    //                  });

            //bind the rename function in the drop down list
            $repositoryBrowserFileList.delegate('.bd-RepositoryBrowser-fileContainer-dropDownList-edit', 'click', function(){
                var $this = jQuery(this);
                    $nameDiv = $this.parent().siblings('.bd-RepositoryBrowser-fileContainer-Name'),
                    name = $nameDiv.attr('itemname'),
                    extPos = name.lastIndexOf('.'),
                    oldName = name.substr(0, extPos) || name,
                    fileExt = name.substr(extPos) || '',
                    $editFileNameInput = jQuery('<input type="text" name="fileName" class="bd-RepositoryBrowser-fileContainer-editFileName" value="'+oldName+'"/>'),
                    submitedNewName = false;

                $this.parent().hide();
                $nameDiv.html($editFileNameInput);

                currentFolder.currentSelectedFile = currentFolder.filesHashMap[name];
                $editFileNameInput.focus();

                function renameFile(){
                    var successCallback = function(){
                        //alert rename file success
                            $nameDiv.text(be.utils.truncateText($.trim(be.utils.replaceRefuzingChars($editFileNameInput.val(),'name')) + fileExt, 18));
                        },
                        errorCallback = function(){
                            $nameDiv.text(be.utils.truncateText(oldName + fileExt, 18));
                        },
                        params = {
                            fileId: currentFolder.currentSelectedFile.contentUId,
                            newName: $editFileNameInput.val(),
                            oldName: oldName,
                            fileExt: fileExt,
                            $fileContainer : $this.parent().parent(),
                            successCallback : successCallback,
                            errorCallback : errorCallback
                        };

                    currentFolder.renameSelectedFile(params);
                }

                //when focus out, submit rename request
                $editFileNameInput.focusout(function(e){
                    if(!submitedNewName)
                        renameFile();
                }).keyup(function(e){
                    e.stopPropagation();
                    if (e.which == 13) {
                        e.preventDefault();
                        submitedNewName = true;
                        renameFile();
                     }
                }).keydown(function(e){
                    e.stopPropagation();
                    if(e.which == 13){
                        e.preventDefault();
                    }
                });
            });

            //bind the move single file function in the drop down list
            $repositoryBrowserFileList.delegate('.bd-RepositoryBrowser-fileContainer-dropDownList-move', 'click', function(){
                var $this = jQuery(this);
                $this.parent().hide();
                currentFolder.popupFolderTree();
            });

            //bind the delete single file function in the drop down list
            $repositoryBrowserFileList.delegate('.bd-RepositoryBrowser-fileContainer-dropDownList-delete', 'click', function(){
                var $this = jQuery(this);
                $this.parent().hide();
                currentFolder.deleteSelectedFile();
            });

            //bind the move multiple file function in the topButtons drop down list, file action
            topButtonFunction($repositoryBrowserWrapper, currentFolder);

            //bottom button function, folder action
            var folderActions = bc.component.dropdown({
                    label: 'Folder Actions',
                    uid: '1089',
                    staticLabel: true,
                    options: [
                        {name:'Rename Folder', classname: 'bd-popupRepositoryBrowser-renameFolderButton'},
                        {name:'Delete Folder', classname: 'bd-popupRepositoryBrowser-deleteFolderButton'}
                    ]
                }),
                addDropdown = '<button class="bc-gradient-grey bc-button bc-roundcorner-5 bc-addfolder-btn" data-cid="bc-assets-addfolder-4512" title="Create new folder">' +
                    '<span class="bc-icn bc-plus"></span>' +
                    '</button>',
                $folderActionOptions = jQuery(folderActions[0].dropdownOptions);

            jQuery('.bd-RepositoryBrowser-treeList-wrapper', $repositoryBrowserWrapper).css({'bottom': 35});

            jQuery('.bd-RepositoryBrowser-ToolbarWrapper', $repositoryBrowserWrapper).append(addDropdown).prepend(folderActions);

            // add folder button
            jQuery('.bd-RepositoryBrowser-ToolbarWrapper .bc-addfolder-btn', $repositoryBrowserWrapper).click( function(){
                currentFolder.repositoryBrowserTreeList.jstree("create", null, "first"," ", function(){
                    currentFolder.utilsFn.escKey(false);
                });
                //deActiveActionButton(jQuery(this));
                return false;
            });
            // rename folder button
            $folderActionOptions.delegate('.bd-popupRepositoryBrowser-renameFolderButton','click',function(){
                currentFolder.repositoryBrowserTreeList.jstree("rename");
                currentFolder.utilsFn.escKey(false);
                deActiveActionButton(jQuery(this));
                return false;
            });
            // delete folder button
            $folderActionOptions.delegate('.bd-popupRepositoryBrowser-deleteFolderButton','click',function(){
                var $this = jQuery(this);

                currentFolder.utilsFn.warningForAbortUpload (currentFolder, function(){
                    be.utils.confirm({
                        title: 'DELETE FOLDERS',
                        message: "This will delete "+currentFolder.repositoryBrowserTreeList.jstree("get_selected").length+
                            " selected folder(s)<br/><br/>Are you sure you want to continue?",
                        yesCallback: function (){
                            currentFolder.repositoryBrowserTreeList.jstree("remove");
                            deActiveActionButton($this);
                        },
                        noCallback: function () {
                            //errorCallback();
                        },
                        cancelBtnText: 'Cancel',
                        okBtnText: 'Delete'
                    });
                }, function(){
                    //errorCallback();
                }, currentFolder.repositoryBrowserTreeList.find('#'+currentFolder.folderId));

                return false;
            });
        },
    //bind the sort function to the sort button
        sortingFiles = function(currentFolder){
            var $sortBar = currentFolder.repositoryBrowserWrapper.find('.bd-RepositoryBrowser-sortBar');
            $sortBar.delegate('.bd-RepositoryBrowser-sortBar-name','click',function(e){
                e.preventDefault();
                var $this = jQuery(this);
                currentFolder.utilsFn.warningForAbortUpload(currentFolder, function () {
                    sortingFilesFunc($this, 'name');
                });
                //sortingFilesFunc(jQuery(this), 'name');
            });

            $sortBar.delegate('.bd-RepositoryBrowser-sortBar-contentStreamMimeType','click',function(e){
                e.preventDefault();
                var $this = jQuery(this);
                currentFolder.utilsFn.warningForAbortUpload(currentFolder, function () {
                    sortingFilesFunc($this, 'contentStreamMimeType');
                });
            });

            $sortBar.delegate('.bd-RepositoryBrowser-sortBar-lastModificationDate','click',function(e){
                e.preventDefault();
                var $this = jQuery(this);
                currentFolder.utilsFn.warningForAbortUpload(currentFolder, function () {
                    sortingFilesFunc($this, 'lastModificationDate');
                });
            });

            function sortingFilesFunc($this, orderBy){
                $this.siblings().removeClass('bd-sortBtn-active bd-RepositoryBrowser-order-asc');
                $this.addClass('bd-sortBtn-active');
                $this.toggleClass('bd-RepositoryBrowser-order-asc');//ascending

                var order = 'ASC';//ascending
                if(!$this.hasClass('bd-RepositoryBrowser-order-asc')){//not ascending
                    order = 'DESC';
                }

                $this.data({
                    orderBy : 'cmis:'+orderBy,
                    order : order
                });

                currentFolder.sorting({
                    //$fileColumn : currentFolder.repositoryBrowserFileList,
                    //editMode : currentFolder.initParams.editMode,
                    //HTML5Browser : currentFolder.initParams.HTML5Browser,
                    orderBy : orderBy,
                    order : order
                });
            }
        },

        topButtonFunction = function($repositoryBrowserWrapper, currentFolder){
            //bind the move multiple file function in the topButtons drop down list
            if($repositoryBrowserWrapper.parent().siblings('.bd-repositoryBrowser-dashboard-header').length > 0){

                var $TopButtons = $repositoryBrowserWrapper.parent().siblings('.bd-repositoryBrowser-dashboard-header').children('.bd-repositoryBrowser-topButtons');

                var fileActions = bc.component.dropdown({
                    label: 'File Actions',
                    uid: '7527',
                    staticLabel: true,
                    options: [
                        {name:'Move', classname: 'bd-popupRepositoryBrowser-moveFileButton'},
                        {name:'Delete', classname: 'bd-popupRepositoryBrowser-deleteFileButton'}
                    ]
                });

                var uploadDropdown = bc.component.dropdown({
                    label: 'Upload',
                    uid: '7928',
                    staticLabel: true,
                    options: [
                        {name:'Upload a File', classname: 'bd-popupRepositoryBrowser-uploadFileButton'}
                    ]
                });
                var uploadOptions = uploadDropdown[0].dropdownOptions;
                var fileActionOptions = fileActions[0].dropdownOptions;

                $TopButtons.append(fileActions);
                $TopButtons.append(uploadDropdown);

                jQuery(fileActionOptions).delegate('.bd-popupRepositoryBrowser-moveFileButton', 'click', function(){
                    //var $this = jQuery(this);
                    if(!currentFolder.utilsFn.objectEmpty(currentFolder.selectedFiles)){
                        currentFolder.popupFolderTree();
                    }else{
                        bc.component.notify({
                            uid: '5562',
                            icon: 'attention', // checkbox, attention, error, loading
                            message: 'Please select one or more files.'
                        });
                    }
                });

                jQuery(fileActionOptions).delegate('.bd-popupRepositoryBrowser-deleteFileButton', 'click', function(){
                    //var $this = jQuery(this);
                    if(!currentFolder.utilsFn.objectEmpty(currentFolder.selectedFiles)){
                        currentFolder.deleteSelectedFile();
                    }else{
                        bc.component.notify({
                            uid: '8172',
                            icon: 'attention', // checkbox, attention, error, loading
                            message: 'Please select one or more files.'
                        });
                    }
                });

                jQuery(uploadOptions).delegate('.bd-popupRepositoryBrowser-uploadFileButton', 'click', function(){
                    currentFolder.uploadFn.popupUploadFile(currentFolder);
                });

            }
        };

    //util functions
    function deActiveActionButton($this){
        $this.closest('.bc-dropdown-items').hide().removeClass('bd-open');
        //$this.parent().hide();
        //$this.parent().parent().removeClass('bd-open');
    }


    bd.repoBrowser = bd.repoBrowser || {};
    bd.repoBrowser.eventsFn = function(currentFolder){

        return {
            bindEvents: bindEvents,
            bindEventsForEditMode: bindEventsForEditMode,
            bindEventsForAdmin: bindEventsForAdmin,
            sortingFiles: sortingFiles,
            topButtonFunction: topButtonFunction
        };

    };
}());
/**
 * Copyright � 2011 Backbase B.V.
 */
 (function () {

    bd.repositoryBrowser = (function()
    {
        /**
         * general variable and functions
         */
        var jstreeScriptLoaded = false,
            //jqueryUploadScriptLoaded = false,
            GeneratedContentFolder = '/Generated content',
            //lastLocation = 'ROOT',
            //cmisError = false,
            isInited = false,
            //richtextPipePath = bd.contextRoot +'/proxy?pipe=mustachePipe&contentPath=',
            folderMaxItems = 1000,
            isReverted = false,

        //var that remember current folder
        currentFolders = function(){
            //model
            this.rootPath = '/';
            //folder model
            this.name = '';
            this.path = '';
            this.folderId = '';
            this.folders = [];
            //this.fileSize = 0; //how many file it has
            this.files = []; //file list
            this.filesHashMap = {}; //file list hash map
            this.currentSelectedFile = {}; //current Selected files
            this.selectedFiles = {};
            this.folderFileType = '';
            this.currentUploadFolder = '';
            this.abortFileUpload = false;
            //file model
            this.maxItem = 30; //pagination, page size
            this.skipCount = 0; //pagination, offset for the pagination of the current folder
            this.order = "DESC";
            this.orderBy = "cmis:lastModificationDate";
            this.noMore = true;

                this.utilsFn = new bd.repoBrowser.utilsFn();
                this.uploadFn = new bd.repoBrowser.uploadFn(this);
                this.previewFn = new bd.repoBrowser.previewFn(this);
                this.eventsFn = new bd.repoBrowser.eventsFn(this);

            //init the current folder and jstree
            this.init = function(paramsObj){
                var that =  this;
                //loadFileParams = paramsObj;
                //var $backgroundHihglightDiv = jQuery('<div style="height:25px;top:10px;position:absolute;display:none;"></div>');

                this.maxItem = paramsObj.maxItem;
                this.name = "Backbase Repository";
                this.path = this.rootPath;
                this.initParams = paramsObj;

                var plugins = [];
                if(paramsObj.editMode && paramsObj.isAdmin) {
                    plugins = [ "themes", "json_data", "ui", "crrm", "unique", "dnd" ];
                }else{
                    plugins = [ "themes", "json_data", "ui", "crrm", "unique" ];
                }

                var jsTreeTheme = {
                    'url' : bd.contextRoot + "/static/dashboard/js/lib/jstree/themes/default/style_asset.css",
                    "dots" : false
                };

                if(paramsObj.needJstreeCss) jsTreeTheme.url = bd.contextRoot+'/static/dashboard/js/lib/jstree/themes/default/style_repo.css';

                //bind jstree to the viewpoint
                this.repositoryBrowserTreeList.jstree({
                    "themes" : jsTreeTheme,
                    "json_data" : {
                        "data" : paramsObj.folderJson
                    },
                    "ui" : {
                        "initially_select": ['ROOT']
                        //"initially_select": [lastLocation]
                        //,"select_limit" : 1
                    },
                    "unique" : {
                         "error_callback" : function (nodeName, node , func) {
                             //alert("Duplicate node `" + nodeName + "` with function `" + func + "`!");
                             //$.jstree.rollback(data.rlbk);
                         }
                    },
                    "dnd" : {
                        "drag_check" : function(data){
                            var $aPath = data.r.data('path');
                            //console.log('drag_check: ', data);
                            if($aPath && that.utilsFn.checkPath($aPath, GeneratedContentFolder)){
                                return false;
                            }else if(data.o && $aPath === jQuery(data.o).children('.bd-RepositoryBrowser-fileContainer-filePath').val()){
                                return false;
                            }
                            // else if(data.r.data('folderid') === that.currentUploadFolder){
                            //     return false;
                            // }
                            return { after : false, before : false, inside : true };
                        },
                        "drop_check" : function (data) {
                            //console.log('drop_check: ', data);
                            if(data.r.attr("id") == "ROOT") {
                                return false;
                            }
                            return true;
                        },
                        "drag_finish" : function(data){
                            //move file function
    //                      console.log(data);
                            var $fileContainer = jQuery(data.o);
                            if(!$fileContainer.hasClass('bd-RepositoryBrowser-fileContainer')){
                                $fileContainer = $fileContainer.parents('.bd-RepositoryBrowser-fileContainer');
                            }

                            if(that.utilsFn.objectEmpty(that.selectedFiles)){
                                that.selectedFiles = {};
                                var fileName = $fileContainer.children('.bd-RepositoryBrowser-fileContainer-Name').attr('itemname');
                                that.selectedFiles[fileName] = that.filesHashMap[fileName];
                            }
                            var moveParams = {
                                    targetFolderPath : data.r.data('path'),
                                    successCallback : function(){}
                            };
                            that.moveSelectedFile(moveParams);
                        }
                    },
                    "crrm" : {
                        "move" : {
                            "check_move" : function (data) {
                                //console.log("check_move: ", data);
                                var opPath = data.op.data('path'),
                                    npPath = data.np.data('path'),
                                    oPath = data.o.data('path');
                                if(data.p == 'before' || data.p == 'after'){
                                    return false;
                                }else if(data.np.hasClass('bd-RepositoryBrowser-treeList')){
                                    return false;
                                }else if(npPath == opPath){
                                    return false;
                                }else if((npPath && that.utilsFn.checkPath(npPath,GeneratedContentFolder)) ||
                                        (opPath && that.utilsFn.checkPath(opPath,GeneratedContentFolder)) ||
                                        (oPath && that.utilsFn.checkPath(oPath,GeneratedContentFolder))
                                        ){
                                    return false;
                                }else if(
                                    that.currentUploadFolder &&
                                    (data.o.data('folderid') === that.currentUploadFolder || data.o.find('#'+that.currentUploadFolder).length)
                                ){
                                    return false;
                                }
                                return true;
                            }
                        }
                    },
                    "plugins" : plugins

                }).bind("select_node.jstree", function (e, data) {
                    //console.log("select_node.jstree", e, data);
                    //that.loadCover.show();
                    if(isReverted){
                        isReverted = false;
                        return;
                    }
                    var $target = data.rslt.obj,
                        $aTag = $target.children('a'),
                        $fileActionButtons = that.repositoryBrowserWrapper.parent().siblings('.bd-repositoryBrowser-dashboard-header').children('.bd-repositoryBrowser-topButtons'),
                        $folderActionButtons = that.repositoryBrowserWrapper.find('.bd-RepositoryBrowser-ToolbarWrapper'),
                        $folderActionButton = $folderActionButtons.children('ul.bc-selectbox'),
                        path = $target.data('path');

                    if($fileActionButtons.length > 0 && $folderActionButtons.length > 0){
                        if(path !== '/' && !that.utilsFn.checkPath(path,GeneratedContentFolder)){
                            $fileActionButtons.show();
                            $folderActionButtons.children().show();
                        }else{
                            if(path === '/'){
                                $folderActionButtons.children('.bc-addfolder-btn').show();
                                $folderActionButton.hide();
                                $fileActionButtons.show();
                            }
                            if(that.utilsFn.checkPath(path,GeneratedContentFolder)){
                                $fileActionButtons.hide();
                                $folderActionButtons.children().hide();
                            }
                        }
                    }

                    that.utilsFn.warningForAbortUpload(that, function () {
                        /** action called when click on the folder name */
                        that.name = $aTag.text();
                        that.path = $target.data('path');
                        that.folderId = $target.data('folderid');
                        //lastLocation = that.folderId;

                        //reset the variable for loading the file
                        that.resetVar();
                        that.utilsFn.reloadFiles(that);
                    }, function () {
                        isReverted = true;
                        that.repositoryBrowserTreeList.jstree('deselect_node', $target);
                        that.repositoryBrowserTreeList.jstree('select_node', '#'+that.folderId);
                        //that.repositoryBrowserTreeList.find('a.jstree-clicked').removeClass('jstree-clicked');
                        //that.repositoryBrowserTreeList.find('#'+that.folderId).children('a').addClass('jstree-clicked');
                    });

                }).bind("create.jstree", function (e, data) {

                    that.utilsFn.escKey(true,500);
                    //press escape
                    if(data.rslt.name === ' '){
                        $.jstree.rollback(data.rlbk);
                        return;
                    }

                    //prevent the long folder name
                    if(data.rslt.name.length > 50){
                        be.utils.alert({message: "Folder name is too long."});
                        $.jstree.rollback(data.rlbk);
                        return;
                    }else if(that.utilsFn.checkPath(data.rslt.parent.data('path'),GeneratedContentFolder)){
                        bc.component.notify({
                            uid: '4322',
                            icon: 'error', // checkbox, attention, error, loading
                            message: 'Cannot create folder within "Generated Content". This action is not allowed.'
                        });
                        //bd.operationCompleteMsg(, "errorIcon");
                        $.jstree.rollback(data.rlbk);
                        return;
                    }

                    var folderNewName = $.trim(be.utils.replaceRefuzingChars(data.rslt.name,'name'));
                    if(folderNewName === ''){
                        bc.component.notify({
                            uid: '8172',
                            icon: 'error', // checkbox, attention, error, loading
                            message: 'Folder Name can not contain special characters.'
                        });
                        //bd.operationCompleteMsg('Folder Name can not contain special characters', "errorIcon");
                        $.jstree.rollback(data.rlbk);

                        return;
                    }

                    var successCallback = function(folderId){
                        var newFolderNode = data.rslt.obj;
                        var cPath = (that.path == '/'? that.path : that.path+'/');
                        newFolderNode.attr('id', folderId);
                        newFolderNode.data('path',cPath + $.trim(newFolderNode.text()));
                        newFolderNode.data('folderid',folderId);

                        newFolderNode.data('isLoaded',true);

                        that.utilsFn.reloadFolders(that, data.rslt.parent);

                        bc.component.notify({
                            uid: '8172',
                            icon: 'checkbox', // checkbox, attention, error, loading
                            message: 'Folder created successfully.'
                        });

                        //bd.operationCompleteMsg("Folder created successfully.");
                    };

                    var errorCallback = function(){
                        //if fail, roll back  the tree
                        $.jstree.rollback(data.rlbk);
                    };


                    that.currentSelectedJstreeNodeData(null, data.rslt.parent);
                    var params = {
                            folderName : data.rslt.name,
                            path : that.path,
                            successCallback : successCallback,
                            errorCallback : errorCallback
                    };

                    be.cmis.createFolder(params);


                }).bind("rename.jstree", function (e, data) {

                    that.utilsFn.escKey(true,500);

                    //console.log("rename.jstree");
                    //prevent for rename the root and Generated content folder
                    var $target = data.rslt.obj;
                    that.currentSelectedJstreeNodeData(null, $target);

                    if(that.path == "/" || that.utilsFn.checkPath(that.path,GeneratedContentFolder)){
                        be.utils.alert({message: "This folder cannot be renamed."});
                        $.jstree.rollback(data.rlbk);
                        return;
                    }else if(data.rslt.new_name.length > 50){
                        be.utils.alert({message: "Folder name is too long."});
                        $.jstree.rollback(data.rlbk);
                        return;
                    }else if($target.data('path') && that.utilsFn.checkPath($target.data('path'),GeneratedContentFolder)){
                        bc.component.notify({
                            uid: '8172',
                            icon: 'error', // checkbox, attention, error, loading
                            message: 'Renaming "Generated Content" folder is not allowed.'
                        });
                        //bd.operationCompleteMsg('Renaming "Generated Content" folder is not allowed.', "errorIcon");
                        $.jstree.rollback(data.rlbk);
                        return;
                    }

                    var folderNewName = $.trim(be.utils.replaceRefuzingChars(data.rslt.new_name,'name'));
                    if(folderNewName === ''){
                        bc.component.notify({
                            uid: '8172',
                            icon: 'error', // checkbox, attention, error, loading
                            message: 'Folder Name can not contain special characters'
                        });
                        //bd.operationCompleteMsg('Folder Name can not contain special characters', "errorIcon");
                        $.jstree.rollback(data.rlbk);

                        return;
                    }

                    var successCallback = function(){
                        var renameFolderNode = jQuery($target[0]).children('a');
                        var cPath = (that.path == '/'? that.path : that.path.substring(0,that.path.lastIndexOf('/'))+'/');
                        var cName = $.trim(renameFolderNode.text());
                        var oldPath = $target.data('path');
                        that.name = cName;
                        that.path = cPath + cName;
                        renameFolderNode.attr('path',that.path);
                        $target.data('path', that.path);

                        that.utilsFn.updatePathForChildren($target, that.path, oldPath);

                        //reload the folder
                        var parent = jQuery($target.parent('ul').parent('li'));
                        that.utilsFn.reloadFolders(that, parent);

                        bc.component.notify({
                            uid: '8172',
                            icon: 'checkbox', // checkbox, attention, error, loading
                            message: 'Folder renamed successfully.'
                        });
                        //bd.operationCompleteMsg("");
                    };

                    var errorCallback = function(){
                        //if fail, roll back  the tree
                        $.jstree.rollback(data.rlbk);
                    };

                    var doRenameFolder = function(){
                        var params = {
                                newName : folderNewName,
                                path : that.path,
                                successCallback : successCallback,
                                errorCallback : errorCallback
                        };

                        be.cmis.rename(params);
                    };

                    if(data.rslt.old_name != folderNewName){
                        that.utilsFn.warningForAbortUpload (that, function(){
                            doRenameFolder();
                        }, function(){
                            isReverted = true;
                            errorCallback();
                        }, $target);
                    }
                }).bind("move_node.jstree", function (e, data) {
                    //console.log("move_node.jstree");

                    var fromPath = data.rslt.op.data('path');
                    var toPath = data.rslt.np.data('path');
                    var folderNameList = '';
                    //prevent user move any folders outside the root and moving the Generated content folder
                    if(data.rslt.o.siblings('li').children('a[id="ROOT"]').length > 0){
                        be.utils.alert({message: 'This folder cannot be moved.'});
                        $.jstree.rollback(data.rlbk);
                        return;
                    //}else if(data.rslt.o.children('a[path="'+ toPath + GeneratedContentFolder + '"]').length > 0){
                    }else if(that.utilsFn.checkPath(data.rslt.o.data('path'),toPath + GeneratedContentFolder)){
                        //be.utils.alert({message: '"Generated content" folder cannot be moved'});

                        bc.component.notify({
                            uid: '6751',
                            icon: 'error', // checkbox, attention, error, loading
                            message: '"Generated content" folder cannot be moved.'
                        });
                        //bd.operationCompleteMsg('"Generated content" folder cannot be moved.', "errorIcon");
                        $.jstree.rollback(data.rlbk);
                        return;
                    }

                    // prepare for comfirmation popup
                    for(var i=0, len=data.rslt.o.length; i < len; i++){
                        var name = $.trim(jQuery(data.rslt.o[i]).children('a').text());
                        folderNameList += ' - '+name+"<br/>";
                    }

                    var errorCallback = function(){
                        //if fail, roll back  the tree
                        $.jstree.rollback(data.rlbk);
                        return;
                    };


                    var doMoveFolder = function(){
                        data.rslt.o.each(function () {
                            var $this = jQuery(this);
                            var $thisChildren = $this.children('a');
                            var $thisChildrenText = $.trim($thisChildren.text());

                            var successCallback = function(){
                                var newPath = (toPath=='/'? '' : toPath) + '/' + $thisChildrenText,
                                    oldPath = (fromPath=='/'? '' : fromPath) + '/' + $thisChildrenText;
                                $thisChildren.attr('path',newPath);
                                $this.data('path',newPath);
                                that.utilsFn.updatePathForChildren($this, newPath, oldPath);
                                that.currentSelectedJstreeNodeData(that.repositoryBrowserTreeList);

                                that.utilsFn.reloadFolders(that, data.rslt.np);
                                bc.component.notify({
                                    uid: '4324',
                                    icon: 'checkbox', // checkbox, attention, error, loading
                                    message: 'Folders moved successfully.'
                                });
                                //bd.operationCompleteMsg("Folders moved successfully.");
                            };

                            var params = {
                                from: fromPath,
                                to: toPath,
                                object : (fromPath=='/'? '' : fromPath) + '/' + $thisChildrenText,
                                type: "folder",
                                successCallback : successCallback,
                                errorCallback : errorCallback
                            };

                            be.cmis.moveTo(params);
                        });
                    };

                    be.utils.confirm({
                        title: 'Move Folders',
                        //message: "This will move the selected folder(s):<br/>"+folderNameList+"From: "+fromPath+"<br/>To: "+toPath+"<br/>Are you sure you want to continue?",
                        message: "This will move the selected folder(s):<br/>"+folderNameList+"<br/>To: "+toPath+"<br/>Are you sure you want to continue?",
                        yesCallback: doMoveFolder,
                        noCallback : errorCallback,
                        cancelBtnText: 'Cancel',
                        okBtnText: 'Move'
                    });

                }).bind("remove.jstree", function (e, data) {
                    if(!data) return;

                    //var This = this;
                    var errorCallback = function(){
                        //if fail, roll back  the tree
                        $.jstree.rollback(data.rlbk);
                        return;
                    };

                    var successCallback = function(){
                        //deselect all the nodes but select only the ROOT
                        data.inst.deselect_all();
                        if(data.rslt.parent){
                            data.inst.select_node(data.rslt.parent);
                            data.rslt.parent.data('folderSkipCount', data.rslt.parent.data('folderSkipCount') - 1);
                        }else{
                            data.inst.select_node('[id="ROOT"]');
                        }
                        bc.component.notify({
                            uid: '9745',
                            icon: 'checkbox', // checkbox, attention, error, loading
                            message: 'Folder deleted successfully.'
                        });
                        return;
                    };
                    //var folderNameList = '';

                    //prevent user delete the root folder & the Generated content
                    if(data.rslt.obj.children('a[id="ROOT"]').length > 0){
                        be.utils.alert({message: 'This folder cannot be removed.'});
                        $.jstree.rollback(data.rlbk);
                        return;
                    //}else if(data.rslt.obj.children('a[path="'+GeneratedContentFolder+'"]').length > 0){
                    }else if(that.utilsFn.checkPath(data.rslt.obj.data('path'),GeneratedContentFolder)){
                        bc.component.notify({
                            uid: '9116',
                            icon: 'error', // checkbox, attention, error, loading
                            message: '"Generated content" folder cannot be removed.'
                        });
                        $.jstree.rollback(data.rlbk);
                        return;
                    }else{
                        //delete confirm popup is in the eventsFn.js
                        data.rslt.obj.each(function () {
                            var path = jQuery(this).data('path');
                            var params = {
                                path: path,
                                errorCallback : errorCallback,
                                successCallback : successCallback
                            };
                            be.cmis.deleteContent(params);
                        });
                    }
                }).bind("open_node.jstree", function (e, data) {
                    var $target = data.rslt.obj;
                    //do not load folder if already opened
                    if($target.data('isLoaded')){
                        that.utilsFn.appendFolderLoadMoreTrigger($target);
                        return;
                    }

                    that.utilsFn.folderLoadMore(that, $target);

                }).bind("close_node.jstree", function (e, data) {
                    var $target = data.rslt.obj;
                    that.utilsFn.removeFolderLoadMoreTrigger($target);
                });

            };

            //controller
            this.resetVar = function(){
                this.fileSize = 0;
                this.files = [];
                this.filesHashMap = {};
                this.currentSelectedFile = {};
                this.selectedFiles = {};
                this.skipCount = 0;
                this.noMore = false;
                //this.currentPage = 0;
                this.order = "DESC";
                this.orderBy = "cmis:lastModificationDate";
                var $sortBar = this.repositoryBrowserWrapper.find('.bd-RepositoryBrowser-sortBar').find('.bd-sortBtn-active');
                if($sortBar.data('order') && $sortBar.data('orderBy')){
                    this.order = $sortBar.data('order');
                    this.orderBy = $sortBar.data('orderBy');
                }
            };

            this.loadFolder = function(params){
                //console.log('loadFolder');
                var This = this,
                    tmpParams = params || {};
                tmpParams.successCallback = function(folderJson){
                    if(!folderJson){
                        if(tmpParams.noMoreCallback) tmpParams.noMoreCallback(null);
                    }else{
                        This.utilsFn.addExtraDataToJsTreeJson({
                            jsonData: folderJson,
                            folderSkipCount: 0 // + folderMaxItems
                        });
                        //This.folders = folderJson;
                        if(tmpParams.initCallback) tmpParams.initCallback(folderJson);
                    }
                };
                tmpParams.errorCallback = function(msg){
                    if(!msg){
                        bd.repositoryBrowser.cmisError = true;
                        This.repositoryBrowserWrapper.html("Content Server Error.");
                        if(This.repositoryBrowserWrapper.parent().siblings('.bd-repositoryBrowser-dashboard-header').length > 0){
                            This.repositoryBrowserWrapper.parent().siblings('.bd-repositoryBrowser-dashboard-header').children('.bd-repositoryBrowser-topButtons').hide();
                        }
                        This.loadCover.hide();
                    }
                };

                //add the order param to sort the folder by name in asc
                if(!tmpParams.orderBy) tmpParams.orderBy = "cmis:name";
                if(!tmpParams.order) tmpParams.order = "ASC";
                if(!tmpParams.skipCount) tmpParams.skipCount = 0;//this.folderSkipCount;

                if(tmpParams.parentId) tmpParams.condition = "+cmis%3AparentId+%3D+%27"+tmpParams.parentId+"%27";
                else if(tmpParams.path) tmpParams.condition = "+cmis%3Apath='" + tmpParams.path + "'";
                else if(!tmpParams.path && !tmpParams.parentId) tmpParams.condition = "+cmis%3Apath='" + (this.path ? this.path : this.rootPath) + "'";

                //*** for test ***/
                tmpParams.maxItems = true ? 30 : folderMaxItems;

                be.cmis.getFolders(tmpParams);

            };

            this.loadFile = function(params){
                //console.log('loadfile');
                if(bd.repositoryBrowser.cmisError) return;

                var This = this,
                    //set params for cmis.getfile api
                    maxItemAddOne = This.maxItem + 1,
                    getFileParams = {
                        path: This.path,
                        folderId : This.folderId,
                        searchType: This.folderFileType,
                        //thumbSize: This.thumbSize,
                        maxItem: maxItemAddOne,
                        skipCount: This.skipCount,
                        orderBy : This.orderBy,
                        order : This.order
                    };

                //get json using cmis.getfile api
                getFileParams.successCallback = function(files){
                    var fileLen = 0,
                        fileType = '',
                        fileList = null,
                        i,l,c;

                    if(files){
                        //This.files = files;//this.files.concat(files);
                        //set how many file in the folder
                        fileList = files.slice(0,This.maxItem);
                        fileLen = files.length;

                        // assign the correct file type icon to the file
                        for(i = 0, l=fileList.length; i < l; i++){
                            //if(i > This.maxItem) break;
                            c = fileList[i];
                            fileType = c.type.toLowerCase();
                            c.thumbUrl = This.utilsFn.generateThumbUrl(fileType) || encodeURI(c.thumbUrl);
                            c.folderPath = This.path;
                            This.filesHashMap[c.name] = c;
                        }

                        //for load more
                        if(fileLen < maxItemAddOne){
                            This.noMore = true;
                            This.skipCount += fileList.length;
                        }else{
                            This.noMore = false;
                            This.skipCount += This.maxItem;
                        }
                    }else{
                        This.noMore = true;
                    }
//console.log(files)
                    if(params && params.successCallback) params.successCallback(fileList);

                };
                be.cmis.getFiles(getFileParams);
            };

            this.renderFiles = function(files){
                var This = this,
                    templateData = {
                        fileExists: files && files.length > 0 ? true : false,
                        editMode: This.initParams.editMode,
                        isAdmin: This.initParams.isAdmin,
                        isGeneratedContentFolder: This.utilsFn.checkPath(this.path, GeneratedContentFolder) ? false : true,
                        filelist: files,
                        popUp: jQuery('body').hasClass('pageDesignerWithCatalog'),
                        truncateFunc : function(){
                            return function(text,render){
                                var truncatedText = be.utils.truncateText(render(text), 18);
                                return truncatedText;
                            };
                        }
                    },
                    //parse into html for render
                    htmlContent = be.utils.processHTMLTemplateByUrl(bd.contextRoot +
                        "/static/backbase.com.2011.ice/html/RepositoryBrowser/fileList.html", templateData);

                return htmlContent;

            };

            // var loadFileParams = null;
            // this.loadFileFuncWrapper = function(params){
            //     var This = this;
            //     var params = params || {};
            //     var noMore = loadFileParams.noMore != undefined ? loadFileParams.noMore : false;
            //     var loadfileParams = {};
            //     loadfileParams.loadfileCallback = function(loadFile_noMore){
            //         if(params.isReload && !noMore){
            //             noMore = loadFile_noMore;
            //         }
            //         var htmlContent = This.renderFiles(params);
            //         if(This.loadCover){
            //             This.loadCover.removeSmallLoadingDiv();
            //             This.loadCover.appendSmallLoadingDiv(loadFileParams.$fileViewPoint);
            //         }
            //         if(noMore){
            //             loadFileParams.$folderViewPoint.find('.bd-RepositoryBrowser-fileContainer-loadMoreButton').hide();
            //             if(This.loadCover) This.loadCover.hideSmallLoadingDiv();
            //         }else{
            //             loadFileParams.$folderViewPoint.find('.bd-RepositoryBrowser-fileContainer-loadMoreButton').show();
            //             if(This.loadCover) This.loadCover.showSmallLoadingDiv();
            //         }
            //         loadFileParams.noMore = noMore;
            //         if(params.loadFileFuncWrapperCallback) params.loadFileFuncWrapperCallback(htmlContent);

            //         //hacky setTimeout, give a delay before hiding the cover
            //         setTimeout(function(){This.loadCover.hide();}, 100);
            //     }
            //     this.loadFile(loadfileParams);
            // };

            this.currentSelectedJstreeNodeData = function($jstree, selectedLi){
                var $currentSelectedLi, data;
                if(!$jstree){
                    $currentSelectedLi = selectedLi;
                }else{
                    $currentSelectedLi = $jstree.jstree('get_selected');
                }
                data = $currentSelectedLi.data();

                if(!$currentSelectedLi.length || !data) return;
                this.name = $currentSelectedLi.children('a').text();
                this.path = data.path;
                this.folderId = data.folderid;
                //console.log('here ', this)

            };

            //rename file
            this.renameSelectedFile = function(param){
                var that = this;
                //var fileNewName = '';
                param.newName = $.trim(be.utils.replaceRefuzingChars(param.newName,'name'));
                if(param.$fileContainer
                        .children('.bd-RepositoryBrowser-fileContainer-imageContainer')
                        .children('.bd-RepositoryBrowser-fileContainer-filePath').val()
                        .indexOf(GeneratedContentFolder) != -1)
                {
                    bc.component.notify({
                        uid: '0728',
                        icon: 'error', // checkbox, attention, error, loading
                        message: 'Renaming files in "Generated Content" folder is not allowed.'
                    });
                    //bd.operationCompleteMsg('Renaming files in "Generated Content" folder is not allowed.', "errorIcon");
                    if(param.errorCallback) param.errorCallback();
                }else if(param.newName === ''){
                    bc.component.notify({
                        uid: '9901',
                        icon: 'error', // checkbox, attention, error, loading
                        message: 'File name cannot be empty or contain any special characters.'
                    });
                    //bd.operationCompleteMsg('File name cannot be empty or contain any special characters.', "errorIcon");
                    //if(param.errorCallback) param.errorCallback();
                }else if(!this.filesHashMap[param.newName + param.fileExt]){
                    //console.log(this.filesHashMap);
                    var successCallback = function(){
                        //alert rename file success
                        //update the file hash map and file json list
                        var newName = param.newName + param.fileExt;
                        var oldName = param.oldName + param.fileExt;
                        that.filesHashMap[newName] = that.filesHashMap[oldName];
                        delete that.filesHashMap[oldName];
                        that.filesHashMap[newName].name = newName;
                        that.filesHashMap[newName].path = (that.filesHashMap[newName].folderPath=='/'? '':that.filesHashMap[newName].folderPath) + '/' + newName;
                        that.currentSelectedFile = that.filesHashMap[newName];

                        param.$fileContainer
                        .children('.bd-RepositoryBrowser-fileContainer-imageContainer')
                        .children('.bd-RepositoryBrowser-fileContainer-file-name').val(newName);

                        param.$fileContainer.children('.bd-RepositoryBrowser-fileContainer-Name').attr({'itemname':newName, 'title':newName});

                        if(param.successCallback) param.successCallback();
                        //reloading the file if it order BY name
                        var $sortBar = that.repositoryBrowserWrapper.find('.bd-RepositoryBrowser-sortBar').find('.bd-sortBtn-active');
                        if($sortBar.hasClass('bd-RepositoryBrowser-sortBar-name')){
                            that.resetVar();
                            that.utilsFn.reloadFiles(that);
                        }
                        bc.component.notify({
                            uid: '0198',
                            icon: 'checkbox', // checkbox, attention, error, loading
                            message: 'File renamed successfully.'
                        });
                        //bd.operationCompleteMsg("File renamed successfully.");
                    };

                    var errorCallback = function(){
                        if(param.errorCallback) param.errorCallback();
                    };

                    var doRenameFile = function(){
                        var params = {
                            fileId: param.fileId,
                            newName: param.newName + param.fileExt,
                            successCallback : successCallback,
                            errorCallback : errorCallback
                        };

                        be.cmis.rename(params);
                    };

                    doRenameFile();

                }else if(param.oldName == param.newName){
                    if(param.errorCallback) param.errorCallback();
                }else{
                    be.utils.alert({message: "This name is already in use. Please use another name."});
                    if(param.errorCallback) param.errorCallback();
                }
            };

            //move file
            this.moveSelectedFile = function(param){
                var that = this;
                var moveMonitor = 0;
                var fileListLen = 0;
                var fileNameList = '';
                var succFiles = [], failFiles = [];
                var reAppendDropZone = function(){
                    if(!that.repositoryBrowserFileList.children('.bd-RepositoryBrowser-fileContainer').length){
                        that.utilsFn.removeDropZoneContainer(that.repositoryBrowserFileList);
                        that.utilsFn.addDropZoneContainer(that);
                    }
                };
                for(var key in that.selectedFiles){
                    var obj = that.selectedFiles[key];
                    fileListLen++;
                    fileNameList += " - "+be.utils.truncateText(obj.name, 38)+"<br/>";
                }

                if(fileListLen !== 0){
                    var successCallback = function(file){
                        //alert rename file success
                        moveMonitor++;
                        succFiles.push(file);
                        if(that.filesHashMap[this.fileName]){
                            that.repositoryBrowserFileList.children('#'+that.filesHashMap[this.fileName].contentUId).remove();
                            that.skipCount -= 1;
                            that.repositoryBrowserTreeList.find('#'+that.folderId).data('folderSkipCount', that.skipCount);
                            delete that.filesHashMap[this.fileName];
                        }
                        if(that.selectedFiles[this.fileName]) delete that.selectedFiles[this.fileName];
                        if(moveMonitor >= fileListLen){
                            if(param.successCallback) param.successCallback();
                            var message = "";
                            bc.component.notify({
                                uid: '0098',
                                icon: 'checkbox', // checkbox, attention, error, loading
                                message: 'File(s) moved successfully.'
                            });
                            if(failFiles.length > 0){
                                message = "";
                                for(var i=0; i<failFiles.length; i++){
                                    message += " - "+failFiles[i]+"<br/>";
                                }
                                be.utils.alert({message: "Unable to move file(s):<br/>"+message+"File(s) already exist on the folder."});
                            }
                            reAppendDropZone();
                        }
                    };

                    var errorCallback = function(file){
                        moveMonitor++;
                        failFiles.push(file);
                        if(moveMonitor >= fileListLen){
                            var message = "";
                            for(var i=0; i<failFiles.length; i++){
                                message += " - "+failFiles[i]+"<br/>";
                            }
                            be.utils.alert({message: "Unable to move file(s):<br/>"+message+"File(s) already exist in the folder."});
                            if(succFiles.length>0){
                                bc.component.notify({
                                    uid: '0099',
                                    icon: 'checkbox', // checkbox, attention, error, loading
                                    message: 'File(s) moved successfully.'
                                });
                            }
                            reAppendDropZone();
                        }
                    };

                    var doMoveFile = function(){
                        for(var key in that.selectedFiles){
                            var obj = that.selectedFiles[key];
                            var params = {
                                fileName : obj.name,
                                from: that.path,
                                to: param.targetFolderPath,
                                object : obj.contentUId,
                                type: obj.type,
                                successCallback : successCallback,
                                errorCallback : errorCallback
                            };
                            be.cmis.moveTo(params);
                        }
                    };

                    if(that.utilsFn.checkPath(param.targetFolderPath, GeneratedContentFolder) || that.utilsFn.checkPath(that.path, GeneratedContentFolder)){
                        bc.component.notify({
                            uid: '0025',
                            icon: 'error', // checkbox, attention, error, loading
                            message: 'Moving files in "Generated Content" folder is not allowed.'
                        });
                    }else if(that.path != param.targetFolderPath){
                        be.utils.confirm({
                            title: 'Move File',
                            message: "This will move the selected file(s):<br/>"+fileNameList+"<br/>From: "+that.path+"<br/>To: "+param.targetFolderPath+"<br/>Are you sure you want to continue?",
                            yesCallback: doMoveFile,
                            //noCallback : errorCallback,
                            cancelBtnText: 'Cancel',
                            okBtnText: 'Move'
                        });
                    }else{
                        bc.component.notify({
                            uid: '0028',
                            icon: 'error', // checkbox, attention, error, loading
                            message: 'File already exists. Please select another folder.'
                        });
                    }
                }

            };

            //delete file
            this.deleteSelectedFile = function(param){
                var that = this;
                var deleteMonitor = 0;
                var fileListLen = 0;
                var reAppendDropZone = function(){
                    if(!that.repositoryBrowserFileList.children('.bd-RepositoryBrowser-fileContainer').length){
                        that.utilsFn.removeDropZoneContainer(that.repositoryBrowserFileList);
                        that.utilsFn.addDropZoneContainer(that);
                    }
                };
                for(var key in that.selectedFiles){
                    fileListLen++;
                }

                if(fileListLen !== 0){
                    var successCallback = function(){
                        //alert rename file success
                        deleteMonitor++;
                        if(that.filesHashMap[this.fileName]){
                            that.repositoryBrowserFileList.children('#'+that.filesHashMap[this.fileName].contentUId).remove();
                            that.skipCount -= 1;
                            that.repositoryBrowserTreeList.find('#'+that.folderId).data('folderSkipCount', that.skipCount);
                            delete that.filesHashMap[this.fileName];
                        }
                        if(that.selectedFiles[this.fileName]) delete that.selectedFiles[this.fileName];
                        if(deleteMonitor >= fileListLen){
                            if(param && param.successCallback) param.successCallback();
                            bc.component.notify({
                                uid: '0067',
                                icon: 'checkbox', // checkbox, attention, error, loading
                                message: 'Files deleted successfully.'
                            });
                            reAppendDropZone();
                        }
                    };

                    var errorCallback = function(){
                        deleteMonitor++;
                        if(deleteMonitor >= fileListLen){
                            be.utils.alert({message: "Unable to delete file(s):<br/>Unable to find the file(s) in the folder. Please refresh the folder."});
                            reAppendDropZone();
                        }
                    };

                    var doDeleteFile = function(){
                        for(var key in that.selectedFiles){
                            var obj = that.selectedFiles[key];
                            //console.log(obj);
                            var params = {
                                    fileName : obj.name,
                                    objectId: obj.contentUId,
                                    successCallback : successCallback,
                                    errorCallback : errorCallback
                            };

                            be.cmis.deleteContent(params);
                        }
                    };

                    be.utils.confirm({
                        title: 'Delete File',
                        message: "This will delete "+fileListLen+" selected file(s)<br/><br/>Are you sure you want to continue?",
                        yesCallback: doDeleteFile,
                        //noCallback : errorCallback,
                        cancelBtnText: 'Cancel',
                        okBtnText: 'Delete'
                    });
                }

            };

            //popup folder tree panel for move multiple file
            this.popupFolderTree = function(){
                var that = this;
                var callback = function($dialog){
                    var $popupFolderTreeWrapper = $dialog.find('.bd-RepositoryBrowser-popupFolderTreeWrapper');
                    var $popupFolderTree = jQuery('.bd-RepositoryBrowser-popupFolderTree', $popupFolderTreeWrapper);
                    var distFolderName = '', distFolderPath = '';

                    var tmpCurrentFolder = new currentFolders();
                    //var that = tmpCurrentFolder;
                    tmpCurrentFolder.name = "Backbase Repository";
                    tmpCurrentFolder.path = tmpCurrentFolder.rootPath;

                    var loadFolderParams = {};
                    loadFolderParams.initCallback = function(folderJson){
                        $popupFolderTree.jstree({
                            //"core" : { "initially_open" : [ "ROOT" ] },
                            "themes" : {
                                'url' : bd.contextRoot + "/static/dashboard/js/lib/jstree/themes/default/style_asset.css",
                                "dots" : false
                            },
                            "json_data" : {
                                "data" : folderJson
                            },
                            "ui" : {
                                "initially_select": ['ROOT']
                            },
                            "plugins" : [ "themes", "json_data", "ui", "unique"]

                        }).bind("select_node.jstree", function (e, data) {
                            //console.log("select_node.jstree");
                            var $aTag = data.rslt.obj.children('a');
                            distFolderName = $aTag.text();
                            distFolderPath = data.rslt.obj.data('path');
                        }).bind("open_node.jstree", function (e, data) {
                            var $target = data.rslt.obj;
                            //do not load folder if already opened
                            if($target.data('isLoaded')) return;
                            tmpCurrentFolder.utilsFn.appendFolderLoadMoreTrigger($target);
                            tmpCurrentFolder.utilsFn.folderLoadMore(that, $target);
                        }).bind("close_node.jstree", function (e, data) {
                            var $target = data.rslt.obj;
                            tmpCurrentFolder.utilsFn.removeFolderLoadMoreTrigger($target);
                        });

                        $dialog.delegate('.bd-RepositoryBrowser-popupFolderTree-saveBtn','click',function(){
                            var moveParams = {
                                targetFolderPath : distFolderPath,
                                successCallback : function(){
                                    be.closeCurrentDialog();
                                }
                            };
                            that.moveSelectedFile(moveParams);
                        });

                        $dialog.delegate('.bd-RepositoryBrowser-popupFolderTree-cancelBtn','click',function(e){
                            e.preventDefault();
                            be.closeCurrentDialog();
                        });

                        var timer = null;
                        $dialog.find('.bd-RepositoryBrowser-popupFolderTree-div').bind('scroll', function(e){
                            var This = this;
                            clearTimeout(timer);
                            timer = setTimeout(function(){
                                tmpCurrentFolder.utilsFn.scrollToLoadMore(This);
                            }, 300);
                        }).on('click', '.bd-loadMoreTrigger', function(e){
                            var $target = jQuery(e.target).parent('ul').parent('li');
                            tmpCurrentFolder.utilsFn.folderLoadMore(tmpCurrentFolder, $target);
                        });
                    };

                    tmpCurrentFolder.loadFolder(loadFolderParams);

                };

                var htmlContent = '<div class="bd-RepositoryBrowser-popupFolderTreeWrapper">'+
                    '<div class="bd-RepositoryBrowser-popupFolderTree-div"><div class="bd-RepositoryBrowser-popupFolderTree"></div></div>'+
                    '<div class="bd-RepositoryBrowser-popupFolderTree-actionBar">'+
                    '<button class="bd-RepositoryBrowser-popupFolderTree-cancelBtn bd-button bd-gradient-grey bd-roundcorner-3">Cancel</button>'+
                    '<button class="bd-RepositoryBrowser-popupFolderTree-saveBtn bd-button bd-gradient-green bd-roundcorner-3">Move</button>'+
                    '</div></div>';


                be.openDialog({
                    htmlContent: htmlContent,
                    callback : callback,
                    standAlone: true,
                    className: 'bd-RepositoryBrowser-popupFolderTreeDialog',
                    closeIcon: true,
                    header: 'Select a Folder to move the file',
                    small: true
                });

            };

            //file sorting
            this.sorting = function(params){
                //$fileColumn,orderBy, order
                //var This = this;
                this.resetVar();
                this.order = params.order;
                this.orderBy = "cmis:"+params.orderBy;
                this.utilsFn.reloadFiles(this);
            };

            //the file load more
            this.loadMore = function(params){
                this.utilsFn.loadMoreFiles(this);
            };

            this.loadSingleFile = function(params){
                //file metaInfo
                var variables = params.variables || {
                    path : this.currentSelectedFile.path,
                    //property: ['size', 'name', 'path', 'createdBy', 'lastModifiedBy', 'creationDate', 'lastModificationDate'],
                    errorCallback : params.errorCallback
                };
				variables.cache = false;
                be.cmis.getMetaData(variables, function(metaData){
                    params.callback(metaData);
                    //var htmlContent = be.utils.processHTMLTemplate("RepositoryBrowser/fileMetaData", metaData);
                    //$loadCover.find('.bd-RepositoryBrowser-preview-infoWrapper').html(htmlContent);
                });
            };

        };

        //lazy load the jstree.js
        var lazyLoadJsTree = function(callback){
            jstreeScriptLoaded = jQuery.fn.jstree ? true : false;
            if(!jstreeScriptLoaded){
                $.getScript(
                    bd.contextRoot+'/static/dashboard/js/lib/jstree/jquery.jstree.patched.js',
                    function(){
                        jstreeScriptLoaded = true;
                        callback();
                    }
                );
            }else{
                callback();
            }
        };
        /**
         * Repository Browser
         * repository browser popup
         * @param OUTDATED
         * **** usage ****
         * ** to open **
         * var params = {
         *      reInit: false, //to reInit each time it open
         *      noHeader: false, //no title and close icon
         *      width : 'auto', //set width
         *      height : 'auto', //set height
         *      css: {'top':'0', 'left':'0'}, //set css
         *      holderParent : $repositoryBrowserHolder, //the HTML element that holds the repository browser
         *      draggable: true, //the repository browser popup is draggable on the title
         *      rootPath: '/', //set the root path of the repository browser in cmis
         *      currentTarget : //html element for inserting the image/file,
         *      insertTargetFunction : //the function runs when double clicking the image/files in the Repository Browser
         * };
         * bd.repositoryBrowser.popupRepositoryBrowser.open(params);
         *
         * ** to close **
         * bd.repositoryBrowser.popupRepositoryBrowser.close(params);
         *
         */
        var popupRepositoryBrowser = (function(){
            var currentFolder,
                $repositoryBrowserWrapper = null,
                $repositoryBrowserTreeList = null,
                $repositoryBrowserFileList = null,
                //$fileInsertTarget = null,

                init = function(params){
                    currentFolder = new currentFolders();

                    //check the max file params and mananger role from the uiEditingOption
                    if(bd.uiEditingOptions){
                        params.isAdmin = (bd.isAdmin || bd.uiEditingOptions.repositoryBrowser.fullCRUDToManagerRole);
                        params.maxItem = bd.uiEditingOptions.repositoryBrowser.maxFileLoadedPerTime;
                    }else{
                        params.isAdmin = bd.isAdmin;
                        params.maxItem = 30;
                    }

                    if(!params.holderParent){
                        params.holderParent = jQuery('.pageContainer');
                    }

                    var templateData = {
                            editMode : params.editMode,
                            isAdmin : params.isAdmin
                        },
                        //parse the html template to create a holder/wrapper for the RepositoryBrowser
                        popupRepositoryBrowserHtml = be.utils.processHTMLTemplateByUrl(
                            bd.contextRoot + "/static/backbase.com.2011.ice/html/RepositoryBrowser/popupRepositoryBrowser.html", templateData);

                    //insert the RepositoryBrowserWrapper in to the target parent
                    params.holderParent.append(popupRepositoryBrowserHtml);
                    $repositoryBrowserWrapper = params.holderParent.find('.bd-popupRepositoryBrowser-wrapper');
                    //define the folder column and the file column
                    $repositoryBrowserTreeList = $repositoryBrowserWrapper.find('.bd-RepositoryBrowser-treeList');
                    $repositoryBrowserFileList = $repositoryBrowserWrapper.find('.bd-RepositoryBrowser-fileList');

                    //saved it to the currentFolder param
                    currentFolder.repositoryBrowserWrapper = $repositoryBrowserWrapper;
                    currentFolder.repositoryBrowserTreeList = $repositoryBrowserTreeList;
                    currentFolder.repositoryBrowserFileList = $repositoryBrowserFileList;

                    currentFolder.loadCover = new currentFolder.previewFn.loadingCover({
                        coverArea: $repositoryBrowserWrapper
                    });

                    // bind the close action to the close icon
                    if(!params.noHeader){
                        jQuery('.bd-RepositoryBrowser-titlePanel' , $repositoryBrowserWrapper).delegate('.bd-RepositoryBrowser-closeButton','click',function(){
                            close(params);
                        });
                    }else{
                        jQuery('.bd-RepositoryBrowser-titlePanel' , $repositoryBrowserWrapper).hide();
                    }

                    if(params.width){ $repositoryBrowserWrapper.css('width',params.width); }
                    if(params.height){ $repositoryBrowserWrapper.css('height', params.height); }
                    if(params.css){ $repositoryBrowserWrapper.css(params.css); }

                    currentFolder.eventsFn.bindEvents($repositoryBrowserFileList, currentFolder);
                    currentFolder.eventsFn.bindEventsForEditMode(params, $repositoryBrowserFileList, currentFolder);
                    currentFolder.eventsFn.bindEventsForAdmin(params, $repositoryBrowserWrapper, $repositoryBrowserFileList, currentFolder);


                    /** customize the popup repositroy browser */
                    //bind double click event when the file insert target exists
                    /*
                    if(params.currentTarget){
                        $fileInsertTarget = jQuery(params.currentTarget);
                    }

                    if(params.insertTargetFunction){
                        $repositoryBrowserFileList.delegate('.bd-RepositoryBrowser-fileContainer', 'dblclick', function(){
                            var fileName = jQuery('.bd-RepositoryBrowser-fileContainer-Name', this).attr('itemname');
                            currentFolder.currentSelectedFile = currentFolder.filesHashMap[fileName];
                            params.insertTargetFunction(currentFolder.currentSelectedFile);
                            close(params);
                        });
                    }

                    if(params.draggable){
                        $repositoryBrowserWrapper.draggable({
                            // don't allow to drag panel out of window
                            stop: function(event, ui){
                                var w = jQuery(ui.helper).width(),
                                    h = jQuery(ui.helper).height(),
                                    ww = jQuery(window).width(),
                                    wh = jQuery(window).height(),
                                    top = ui.offset.top,
                                    left = ui.offset.left,
                                    margin = 5;

                                var newTop =  top  < margin ? margin : (wh - h - top  < margin ? (wh - h < margin ? margin : wh - h - margin-45) : top );
                                var newLeft = left < margin ? margin : (ww - w - left < margin ? (ww - w < margin ? margin : ww - w - margin-30) : left);
                                if (top != newTop || left != newLeft )
                                    jQuery(this).animate({top: newTop, left: newLeft}, 'fast');
                            },
                            handle: '.bd-RepositoryBrowser-titlePanel'
                        });
                        jQuery('.bd-RepositoryBrowser-titlePanel' , $repositoryBrowserWrapper).css('cursor','move');
                    }
                    */

                    if(params.folderFileType !== undefined || params.folderFileType !== null){
                        currentFolder.folderFileType = params.folderFileType;
                    }else{
                        currentFolder.folderFileType = bd.uiEditingOptions.repositoryBrowser.filesType;
                    }

                    if(params.rootPath)
                        currentFolder.rootPath = params.rootPath;
                    if(params.center){
                        var windowSize = be.utils.getWindowSize();
                        $repositoryBrowserWrapper.offset({top: (windowSize.height/2-$repositoryBrowserWrapper.height()/2), left:(windowSize.width/2-$repositoryBrowserWrapper.width()/2)});
                    }

                    params.HTML5Browser = false;
                    if(params.dropToUpload){
                        //enable the drop to upload functionality
                        params.HTML5Browser = currentFolder.uploadFn.dropToUpload(currentFolder);
                    }

                    //bind the sorting functionality
                    currentFolder.eventsFn.sortingFiles(currentFolder);

                    //bind the load more function, scroll down to load or click button to load
                    if(bd.uiEditingOptions && bd.uiEditingOptions.repositoryBrowser.autoLoadFile){
                        $repositoryBrowserFileList.scroll(function(){
                            if (this.offsetHeight + this.scrollTop >= this.scrollHeight) {
                                currentFolder.utilsFn.toggleLoadMoreButton(currentFolder);//loadCover.showSmallLoadingDiv();
                                currentFolder.loadMore(params,jQuery(this));
                              }
                        });
                    }else{
                        currentFolder.utilsFn.toggleLoadMoreButton(currentFolder);//currentFolder.loadCover.showSmallLoadingDiv();
                        $repositoryBrowserWrapper.delegate('.bd-RepositoryBrowser-fileContainer-loadMoreButton','click',function(e){
                            e.preventDefault();
                            currentFolder.loadMore(params,jQuery(this));
                        });
                    }

                    //params.$folderViewPoint = $repositoryBrowserTreeList;
                    //params.$fileViewPoint = $repositoryBrowserFileList;
                    //bind the jstree to the folder column

                    currentFolder.loadFolder({
                        initCallback: function(folderJson){
                            if(bd.repositoryBrowser.cmisError) {
                                return;
                            }
                            params.folderJson = folderJson;
                            currentFolder.init(params);
                            //show it
                            $repositoryBrowserWrapper.show();
                        }
                    });

                },

                open = function(params){
                    // try{
                    //     if(params.repoId != initParams.repoId) {
                    //         close(initParams);
                    //     }else{
                    //         throw "initParams Error";
                    //     }
                    // }catch(exception){
                    //     close();
                    // }

                    //if reinit not issued and $repositoryBrowserWrapper is not exists
                    if(params.reInit || !$repositoryBrowserWrapper){
                        lazyLoadJsTree(function(){
                            init(params);
                        });
                    }
                    bd.repositoryBrowser.isInited = true;
                    if(params.openCallback) params.openCallback();

                },

                close = function(params){
                    if(currentFolder && currentFolder.repositoryBrowserWrapper){
                        currentFolder.repositoryBrowserWrapper.remove();
                    }

                    jQuery(document).unbind('keydown.ctrlShift').unbind('keyup.ctrlShift')
                        .unbind('keydown.ctrlA').unbind('keyup.ctrlA')
                        .unbind('drop.repoBrowser').unbind('dragover.repoBrowser');

                    if(currentFolder){ currentFolder = null; }
                    bd.repositoryBrowser.isInited = false;
                    if(params){
                        if(params.closeCallback) { params.closeCallback(); }
                    }
                };

            return {
                open : open,
                close : close
            };

        }());

        return {
            popupRepositoryBrowser : popupRepositoryBrowser,
            isInited: isInited
        };

    }());


}());
